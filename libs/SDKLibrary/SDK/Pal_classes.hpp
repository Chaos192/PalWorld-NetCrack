#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// Class Pal.FixedPoint64MathLibrary
class UFixedPoint64MathLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFixedPoint64MathLibrary* GetDefaultObj();

	struct FFixedPoint64 Subtract_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	struct FFixedPoint64 Subtract_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	struct FFixedPoint64 Subtract_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	bool NotEqual_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	bool NotEqual_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	bool NotEqual_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	struct FFixedPoint64 Multiply_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	struct FFixedPoint64 Multiply_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	struct FFixedPoint64 Multiply_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	bool LessEqual_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	bool LessEqual_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	bool LessEqual_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	bool Less_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	bool Less_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	bool Less_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	bool GreaterEqual_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	bool GreaterEqual_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	bool GreaterEqual_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	bool Greater_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	bool Greater_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	bool Greater_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	bool EqualEqual_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	bool EqualEqual_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	bool EqualEqual_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	struct FFixedPoint64 Divide_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	struct FFixedPoint64 Divide_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	struct FFixedPoint64 Divide_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
	struct FFixedPoint64 Convert_IntToFixedPoint64(int32 Value);
	struct FFixedPoint64 Convert_Int64ToFixedPoint64(int64 Value);
	struct FFixedPoint64 Convert_FloatToFixedPoint64(float Value);
	int64 Convert_FixedPoint64ToInt64(const struct FFixedPoint64& Value);
	int32 Convert_FixedPoint64ToInt(const struct FFixedPoint64& Value);
	float Convert_FixedPoint64ToFloat(const struct FFixedPoint64& Value);
	struct FFixedPoint64 Add_FixedPoint64Integer(const struct FFixedPoint64& A, int64 B);
	struct FFixedPoint64 Add_FixedPoint64Float(const struct FFixedPoint64& A, float B);
	struct FFixedPoint64 Add_FixedPoint64FixedPoint64(const struct FFixedPoint64& A, const struct FFixedPoint64& B);
};

// 0x0 (0x28 - 0x28)
// Class Pal.FixedPointMathLibrary
class UFixedPointMathLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFixedPointMathLibrary* GetDefaultObj();

	struct FFixedPoint Subtract_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	struct FFixedPoint Subtract_FixedPointFloat(const struct FFixedPoint& A, float B);
	struct FFixedPoint Subtract_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	bool NotEqual_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	bool NotEqual_FixedPointFloat(const struct FFixedPoint& A, float B);
	bool NotEqual_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	struct FFixedPoint Multiply_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	struct FFixedPoint Multiply_FixedPointFloat(const struct FFixedPoint& A, float B);
	struct FFixedPoint Multiply_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	bool LessEqual_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	bool LessEqual_FixedPointFloat(const struct FFixedPoint& A, float B);
	bool LessEqual_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	bool Less_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	bool Less_FixedPointFloat(const struct FFixedPoint& A, float B);
	bool Less_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	bool GreaterEqual_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	bool GreaterEqual_FixedPointFloat(const struct FFixedPoint& A, float B);
	bool GreaterEqual_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	bool Greater_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	bool Greater_FixedPointFloat(const struct FFixedPoint& A, float B);
	bool Greater_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	bool EqualEqual_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	bool EqualEqual_FixedPointFloat(const struct FFixedPoint& A, float B);
	bool EqualEqual_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	struct FFixedPoint Divide_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	struct FFixedPoint Divide_FixedPointFloat(const struct FFixedPoint& A, float B);
	struct FFixedPoint Divide_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
	struct FFixedPoint Convert_IntToFixedPoint(int32 Value);
	struct FFixedPoint Convert_FloatToFixedPoint(float Value);
	int32 Convert_FixedPointToInt(const struct FFixedPoint& Value);
	float Convert_FixedPointToFloat(const struct FFixedPoint& Value);
	struct FFixedPoint Add_FixedPointInteger(const struct FFixedPoint& A, int32 B);
	struct FFixedPoint Add_FixedPointFloat(const struct FFixedPoint& A, float B);
	struct FFixedPoint Add_FixedPointFixedPoint(const struct FFixedPoint& A, const struct FFixedPoint& B);
};

// 0xD0 (0xF8 - 0x28)
// Class Pal.PalAbilityPassiveSkill
class UPalAbilityPassiveSkill : public UObject
{
public:
	FDelegateProperty_                           IsRestrictedDelegate;                              // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReserving;                                       // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRestricted;                                     // 0x39(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequireWorkerWorkingPassiveSkill;                 // 0x3A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsWorking;                                        // 0x3B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_609[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalPassiveAbilitySkills>      PassiveSkills;                                     // 0x40(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FPalDataTableRowName_PassiveSkillData, struct FPalPassiveAbilitySkillStatus> SkillStatus;                                       // 0x50(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	int32                                        CurrentRank;                                       // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_60D[0x54];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAbilityPassiveSkill* GetDefaultObj();

	void OnWorkerAssignChanged(class UPalCharacterParameterComponent* Parameter);
	void OnUpdateOtomoHolder(class APalCharacter* Character);
	void OnUpdateInventoryContainer(class UPalItemContainer* Container);
	void OnRideInactivated();
	void OnRideActivated();
	void OnReserveInactivated();
	void OnReserveActivated();
	void OnInactivatedAsWorker();
	void OnInactivatedAsOtomoHolder();
	void OnInactivatedAsOtomo();
	void OnActivatedAsWorker();
	void OnActivatedAsOtomoHolder();
	void OnActivatedAsOtomo();
	void ObserveWorking();
	bool IsRestricted__DelegateSignature(class AActor* Trainer);
	bool IsRestricted();
	void Initialize(TArray<struct FPalPassiveAbilitySkills>& _PassiveSkills);
	void InactivateWorkingSkill();
	class APalPlayerController* GetTrainerController();
	class APalCharacter* GetTrainerActor();
	class ACharacter* GetTrainer();
	TArray<class FName> GetPassiveSkillList();
	class APalCharacter* GetOwner();
	int32 GetOtomoRank();
};

// 0x18 (0xB8 - 0xA0)
// Class Pal.PalAbilitySkillParameterComponent
class UPalAbilitySkillParameterComponent : public UActorComponent
{
public:
	TArray<struct FPalPassiveAbilitySkills>      AbilitySkills;                                     // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UPalAbilityPassiveSkill*               PassiveSkill;                                      // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAbilitySkillParameterComponent* GetDefaultObj();

	void OnRideInactivated();
	void OnRideActivated();
	void OnOwnerCharacterSpawned(const struct FPalInstanceID& ID);
	void OnInitializedCharacter(class APalCharacter* OwnerCharacter);
	void OnInactivatedAsWorker();
	void OnInactivatedAsPartner();
	void OnInactivatedAsOtomoHolder();
	void OnActivatedAsWorker();
	void OnActivatedAsPartner();
	void OnActivatedAsOtomoHolder();
};

// 0x0 (0x28 - 0x28)
// Class Pal.ActionDynamicParameterUtility
class UActionDynamicParameterUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UActionDynamicParameterUtility* GetDefaultObj();

	void SetBlackboard(struct FActionDynamicParameter& DynamicParameterRef, struct FPalNetArchive& Blackboard);
};

// 0x110 (0x138 - 0x28)
// Class Pal.PalActionBase
class UPalActionBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnActionEndDelegate;                               // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsEndAction;                                      // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDeleteInstance;                                // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanInterruptWaza;                                 // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsChangeWorkAnimPlayRate;                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsChangeWalkableFloorAngle;                       // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_6A4[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActionWalkableFloorAngle;                          // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsReflectForClient;                               // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_6A9[0xB];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActionDynamicParameter               DynamicParameter;                                  // 0x50(0xE0)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_6AB[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActionBase* GetDefaultObj();

	void TickAction(float DeltaTime);
	void SetAnimRateScale(class FName FlagName, float AnimRateScale);
	void SendNotify(class FName NotifyName);
	void OnUpdatePassiveSkill(enum class EPalPassiveSkillEffectType EffectType, float Value);
	void OnEndPassiveSkill(enum class EPalPassiveSkillEffectType EffectType);
	void OnEndAction();
	void OnChangeCurrentWorkSuitability();
	void OnBreakAction();
	void OnBeginAction();
	bool IsInServer();
	bool IsInLocalControlled();
	bool IsEndAction();
	struct FVector GetTargetLocation();
	class FString GetSimpleName();
	struct FRandomStream GetRandomStream();
	int32 GetGeneralPurposeIndex();
	struct FPalNetArchive GetBlackboard();
	struct FVector GetActionVelocity();
	class AActor* GetActionTarget();
	class UPalIndividualCharacterParameter* GetActionIndividualCharacterParameter();
	class APalCharacter* GetActionCharacter();
	bool CanStepCancel();
	bool CanNextActionCancel();
	bool CanGainSP();
	bool CanDeleteInstance();
	void AnimEventSpawn();
	void AnimEventOther();
	void AnimEventAttack();
	void ActionEndDelegate__DelegateSignature();
};

// 0xB0 (0x150 - 0xA0)
// Class Pal.PalActionComponent
class UPalActionComponent : public UActorComponent
{
public:
	TMap<enum class EPalActionType, TSubclassOf<class UPalActionBase>> ActionMap;                                         // 0xA0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAllActionFinishDelegate;                         // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActionBeginDelegate;                             // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnActionNotifyDelegate;                            // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalActionBase*                        CurrentAction;                                     // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalActionBase*>                ActionQueue;                                       // 0x128(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UPalActionBase*>                TerminateWaitActionList;                           // 0x138(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_79E[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActionComponent* GetDefaultObj();

	class UPalActionBase* PlayActionParameter(const struct FActionDynamicParameter& Param, TSubclassOf<class UPalActionBase> ActionClass);
	class UPalActionBase* PlayActionLocationByType(const struct FVector& Location, enum class EPalActionType Type);
	class UPalActionBase* PlayActionLocation(const struct FVector& Location, TSubclassOf<class UPalActionBase> ActionClass);
	class UPalActionBase* PlayActionByTypeParameter(const struct FActionDynamicParameter& Param, enum class EPalActionType Type);
	class UPalActionBase* PlayActionByType(class AActor* ActionTarget, enum class EPalActionType Type);
	void PlayAction_ToServer(const struct FActionDynamicParameter& Param, TSubclassOf<class UPalActionBase> ActionClass, int32 IssuerID);
	void PlayAction_ToALL(const struct FActionDynamicParameter& Param, TSubclassOf<class UPalActionBase> ActionClass, int32 IssuerID);
	class UPalActionBase* PlayAction_LocalOnly(const struct FActionDynamicParameter& Param, TSubclassOf<class UPalActionBase> ActionClass);
	class UPalActionBase* PlayAction_Internal(const struct FActionDynamicParameter& Param, TSubclassOf<class UPalActionBase> ActionClass);
	class UPalActionBase* PlayAction(class AActor* ActionTarget, TSubclassOf<class UPalActionBase> ActionClass);
	void OnOwnerEndPlay(class AActor* Actor, enum class EEndPlayReason ReasonType);
	void OnCompleteCharacter(class APalCharacter* InCharacter);
	enum class EPalActionType GetCurrentActionType();
	class UPalActionBase* GetCurrentAction();
	void CancelAllAction_Internal();
	void CancelAllAction();
	void CancelActionByType(enum class EPalActionType Type);
	void CancelAction_Internal(const struct FGuid& ActionID);
	void CancelAction(class UPalActionBase* Action);
	void BeginPlay();
	void AllActionFinishDelegate__DelegateSignature(class UPalActionComponent* ActionComponent);
	void ActionStartDelegate__DelegateSignature(class UPalActionBase* Action);
	void ActionNotify__DelegateSignature(class UPalActionBase* Action, class FName NotifyName);
	bool ActionIsEmpty();
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalActionDummyTargetActor
class APalActionDummyTargetActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalActionDummyTargetActor* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class Pal.PalWorldSubsystem
class UPalWorldSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_7D4[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldCreate;                                     // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_7D6[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UWorldSubsystem>>   PrerequisiteWorldSubsystemList;                    // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_7D7[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorldSubsystem* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Pal.PalActionDummyTargetManager
class UPalActionDummyTargetManager : public UPalWorldSubsystem
{
public:
	TArray<class APalActionDummyTargetActor*>    ActionDummyTargetCache;                            // 0x70(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalActionDummyTargetManager* GetDefaultObj();

};

// 0x18 (0x150 - 0x138)
// Class Pal.PalActionOneShotAnimation
class UPalActionOneShotAnimation : public UPalActionBase
{
public:
	uint8                                        Pad_7F3[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActionOneShotAnimation* GetDefaultObj();

	void OnEndMontage(class UAnimMontage* Montage, bool bInterrupted);
};

// 0x38 (0x170 - 0x138)
// Class Pal.PalActionSpawnItem
class UPalActionSpawnItem : public UPalActionBase
{
public:
	class FName                                  SpawnSocketName;                                   // 0x138(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SpawnLocationOffset;                               // 0x140(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SpawnItemRotator;                                  // 0x158(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalActionSpawnItem* GetDefaultObj();

	void WriteBlackboard(struct FPalNetArchive& BlackboardRef, struct FPalStaticItemIdAndNum& ItemInfo);
	void SpawnItemInServer();
	void ReadBlackboard(struct FPalStaticItemIdAndNum* ItemInfo);
};

// 0x28 (0x160 - 0x138)
// Class Pal.PalActionTransportItem
class UPalActionTransportItem : public UPalActionBase
{
public:
	class FName                                  ItemAttachSocketName;                              // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ItemActor;                                         // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_851[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActionTransportItem* GetDefaultObj();

	void WriteBlackboard(struct FPalNetArchive& BlackboardRef, class FName StaticItemId);
	void StartSetupItemActor(class FName StaticItemId);
	void ReadBlackboard(class FName* StaticItemId);
};

// 0x18 (0x150 - 0x138)
// Class Pal.PalActionWazaBase
class UPalActionWazaBase : public UPalActionBase
{
public:
	enum class EPalWazaID                        WazaID;                                            // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_88F[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalSoundPlayer*                       SoundPlayer;                                       // 0x140(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bApplyFullStomachCost;                             // 0x148(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_891[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActionWazaBase* GetDefaultObj();

	void StopAkSound();
	void PlayAkSound(class UAkAudioEvent* AudioEvent);
	enum class EPalWazaID GetWazaID();
	class APalPlayerCharacter* GetRiderPlayer();
};

// 0x8 (0x140 - 0x138)
// Class Pal.PalAction_BeLiftup
class UPalAction_BeLiftup : public UPalActionBase
{
public:
	uint8                                        Pad_8B5[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_BeLiftup* GetDefaultObj();

	void OnStartLifting();
	void OnStartInterpTransform();
	void OnEndInterpTransform();
	void OnDeadOwner_ServerInternal(const struct FPalDeadInfo& DeadInfo);
	void OnAttachedForBP();
};

// 0x18 (0x150 - 0x138)
// Class Pal.PalAction_BeThrown
class UPalAction_BeThrown : public UPalActionBase
{
public:
	class UAnimMontage*                          PlayingMontage;                                    // 0x138(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     NiagaraComponent;                                  // 0x140(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_8BD[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_BeThrown* GetDefaultObj();

	void PlayThrownMontage();
	void PlayThrownFX();
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalStatusBase
class UPalStatusBase : public UObject
{
public:
	bool                                         bIsEndStatus;                                      // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_937[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FStatusDynamicParameter               DynamicParameter;                                  // 0x2C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	enum class EPalStatusID                      StatusId;                                          // 0x38(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_93A[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Duration;                                          // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsNerverEnd;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_93C[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStatusBase* GetDefaultObj();

	void TickStatus(float DeltaTime);
	void SetHalfDurationTimer();
	void OnEndStatus();
	void OnBreakStatus();
	void OnBeginStatus();
	void OnBeginSomeStatus();
	bool IsEndStatus();
	class AActor* GetOwner();
};

// 0x18 (0x60 - 0x48)
// Class Pal.PalAction_DrownCheckBase
class UPalAction_DrownCheckBase : public UPalStatusBase
{
public:
	uint8                                        Pad_949[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_DrownCheckBase* GetDefaultObj();

};

// 0x48 (0x180 - 0x138)
// Class Pal.PalAction_FeedItemToCharacter
class UPalAction_FeedItemToCharacter : public UPalActionBase
{
public:
	uint8                                        Pad_95B[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnSpeed;                                         // 0x148(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_95C[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalAIActionFed*                       TargetCharacterAction;                             // 0x150(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_95E[0x28];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_FeedItemToCharacter* GetDefaultObj();

	void TimeoutStartTargetCharacterApproachAction();
	void SimpleDelegate__DelegateSignature();
	void PlayMontageFeeding();
	void OnNotifiedMontage_OnReachFeeding();
	void OnFinishPlayMontageFeeding();
	void OnCancelByInputGuard();
};

// 0x8 (0x140 - 0x138)
// Class Pal.PalAction_Liftup
class UPalAction_Liftup : public UPalActionBase
{
public:
	float                                        AttachRelativeLocationOffsetZ;                     // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAttachToLeftHand;                               // 0x13C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_97E[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_Liftup* GetDefaultObj();

	void StartRagdollForTargetCharacter();
	void StartInterpTransformForAttachCharacter();
	void PlayWeaponChangeAnime();
	void PlayTargetBeLiftupAction(class APalCharacter* TargetCharacter);
	void PlayStartLiftupMontage();
	void OnTriggerPlayerInteract();
	void OnCompleteStartLiftupMontage();
	void AttachLiftedCharacter();
};

// 0x8 (0x140 - 0x138)
// Class Pal.PalAction_LiftupThrow
class UPalAction_LiftupThrow : public UPalActionBase
{
public:
	float                                        AttachRelativeLocationOffsetZ;                     // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAttachToLeftHand;                               // 0x13C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_988[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_LiftupThrow* GetDefaultObj();

	void PlayWeaponChangeAnime();
	void PlayPlayerThrowMontage();
	void LaunchLiftObject();
};

// 0x18 (0x150 - 0x138)
// Class Pal.PalAction_SleepPlayerBed
class UPalAction_SleepPlayerBed : public UPalActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnGetupTriggerDelegate;                            // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_99C[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAction_SleepPlayerBed* GetDefaultObj();

	void OnGetupTriggerDelegate__DelegateSignature();
	void OnGetupPlayerBedFromModel();
	bool IsSleepLooping();
	void GetupBroadcast();
};

// 0x8 (0x3D0 - 0x3C8)
// Class Pal.PalActivatableWidget
class UPalActivatableWidget : public UCommonActivatableWidget
{
public:
	enum class EPalWidgetInputMode               InputConfig;                                       // 0x3C8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMouseCaptureMode                 GameMouseCaptureMode;                              // 0x3C9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_9A8[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActivatableWidget* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Pal.PalActiveSkill
class UPalActiveSkill : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnCoolTimeUpdate;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCoolStart;                                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCoolFinish;                                      // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         IsCooling;                                         // 0x58(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_9CD[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReuseCoolTimer;                                    // 0x5C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalWazaID                        WazaType;                                          // 0x60(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsStopTimer;                                       // 0x61(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_9CE[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DatabaseCoolTime;                                  // 0x64(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsTransient;                                      // 0x68(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_9CF[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalActiveSkill* GetDefaultObj();

	void OnRep_UpdateCoolTime();
	void OnRep_ChangeCTState();
	void OnCoolTimeUpdateDelegate__DelegateSignature(float CoolRate);
	void OnCoolStateChange__DelegateSignature();
	bool IsCoolTimeFinish();
};

// 0x70 (0x98 - 0x28)
// Class Pal.PalActiveSkillSlot
class UPalActiveSkillSlot : public UObject
{
public:
	class AActor*                                SelfActor;                                         // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, class UPalActiveSkill*>          SkillMap;                                          // 0x30(0x50)(Transient, NativeAccessSpecifierPrivate)
	bool                                         IsEndInit;                                         // 0x80(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_A62[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatContainer                       CoolDownSpeedRateMap;                              // 0x88(0x10)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalActiveSkillSlot* GetDefaultObj();

	void UpdateCoolTime(float DeltaTime);
	void StopCoolTime(int32 SlotID);
	void SetTransient(int32 SlotID, bool IsTransient);
	void SetSkill(int32 SlotID, enum class EPalWazaID WazaType);
	void SetCoolTimeRate(class FName Key, float Rate);
	void RestartCoolTime(int32 SlotID);
	void RemoveSkill(int32 SlotID);
	void OnChangeEquipWaza(class UPalIndividualCharacterParameter* IndividualParameter);
	bool IsValidSkill(int32 SlotID);
	bool IsTransient(int32 SlotID);
	bool IsNearMaxRange(int32 SlotID, class AActor* TargetActor);
	bool IsFarMinRange(int32 SlotID, class AActor* TargetActor);
	bool IsCoolTimeFinish(int32 SlotID);
	void InitObject(class AActor* ActorSelf);
	enum class EPalWazaID GetWazaType(int32 SlotID);
	TMap<int32, class UPalActiveSkill*> GetSkillMap();
	TArray<int32> GetEnableSlotIDs();
	float GetCoolTimeRate(int32 SlotID);
	float GetCoolTime(int32 SlotID);
	int32 FindMostEffectiveSlotID(class AActor* TargetActor);
	int32 ChoiceEnableSlotIDByRandom();
	bool CanUse(int32 SlotID, class AActor* TargetActor);
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalActorChannel
class UPalActorChannel : public UActorChannel
{
public:

	static class UClass* StaticClass();
	static class UPalActorChannel* GetDefaultObj();

};

// 0xA0 (0x130 - 0x90)
// Class Pal.PalAIActionBase
class UPalAIActionBase : public UPawnAction_BlueprintBase
{
public:
	bool                                         bIsAutoStopBehaviorTree;                           // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIActionCategory              AiActionCategory;                                  // 0x91(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_ABE[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalAIActionDynamicParameter          DynamicParameter;                                  // 0x98(0x50)(BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic)
	enum class EAIRequestPriority                DefaultPriority;                                   // 0xE8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_AC0[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStartActionDelegate;                             // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPauseActionDelegate;                             // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnResumeActionDelegate;                            // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishActionDelegate;                            // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAIActionBase* GetDefaultObj();

	void SetWalkSpeed_ForAIAction(enum class EPalMovementSpeedType MoveSpeedType);
	class UPalAIActionBase* SetAIActionClassParameter(TSubclassOf<class UPalAIActionBase> NewActionClass, const struct FPalAIActionDynamicParameter& Parameter);
	bool PushChildAction(class UPawnAction* Action);
	void OnChildActionFinished(class UPawnAction* Action, enum class EPawnActionResult WithResult);
	void OnActionDelegate__DelegateSignature(class UPalAIActionBase* Action);
	void OnActionByDelegate__DelegateSignature(class UPalAIActionBase* Action, class UPawnAction* byAction);
	bool IsPaused();
	bool IsActive();
	class FString GetSimpleName();
	enum class EAIRequestPriority GetRequestPriority();
	class APalAIController* GetPalAIController();
	class UPawnActionsComponent* GetOwnerComponent();
	class AController* GetController();
	class UPalCharacterParameterComponent* GetCharacterParameter();
	class APalCharacter* GetCharacter();
	class UPalAIActionComponent* GetAIActionComponent();
	class UPalActionComponent* GetActionComponent();
	class UPawnAction* CreateActionInstanceFixName(class UObject* WorldContextObject, TSubclassOf<class UPawnAction> ActionClass, class FName ActionName);
	void ActionAbort(class APawn* ControlledPawn);
};

// 0x10 (0x140 - 0x130)
// Class Pal.PalAIActionBaseCampBase
class UPalAIActionBaseCampBase : public UPalAIActionBase
{
public:
	uint8                                        Pad_AF0[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WalkSpeedDefault;                                  // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_AF1[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampBase* GetDefaultObj();

	void StartCombatAction(TSubclassOf<class UPalAIActionCombatBase> CombatActionClass);
	void OnUpdateFullStomach(float Current, float Last);
	void OnTriggerInteract(class AActor* OtherActor, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnClosedWorkerRadialMenu(class UPalHUDDispatchParameterBase* Parameter);
	void NotifyOrderCommand(enum class EPalMapBaseCampWorkerOrderType OrderType);
	void InterruptActionToRecoverHungry(const struct FPalMonsterControllerBaseCampHungryParameter& Parameter);
	struct FGuid GetBaseCampIdBelongTo();
	class UPalBaseCampModel* GetBaseCampBelongTo();
	void FinishCombatAction();
	void ChangeChildAction(class UPalAIActionBaseCampChildBase* Action);
	void ChangeActionToWorker();
	void ChangeActionToFighter();
};

// 0x8 (0x138 - 0x130)
// Class Pal.PalAIActionBaseCampChildBase
class UPalAIActionBaseCampChildBase : public UPalAIActionBase
{
public:
	TWeakObjectPtr<class UPalAIActionBaseCampBase> BaseCampParentAction;                              // 0x130(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampChildBase* GetDefaultObj();

};

// 0x8 (0x138 - 0x130)
// Class Pal.PalAIActionBaseCampCage
class UPalAIActionBaseCampCage : public UPalAIActionBase
{
public:
	uint8                                        Pad_AF9[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampCage* GetDefaultObj();

};

// 0x58 (0x188 - 0x130)
// Class Pal.PalAIActionBaseCampDefenseBase
class UPalAIActionBaseCampDefenseBase : public UPalAIActionBase
{
public:
	uint8                                        Pad_B12[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0x138(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalCharacter*                         SelfActor;                                         // 0x140(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalAICombatModule*                    CombatModule;                                      // 0x148(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWorkType                      CurrentWorkType;                                   // 0x150(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B2C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalWorkAssignHandleId                CurrentWorkAssignId;                               // 0x154(0x18)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWorkDefenseCombatType         DefenseCombatType;                                 // 0x16C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_B30[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalActionBase>            DefenseActionClass;                                // 0x170(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalActionBase>            DefenseWaitActionClass;                            // 0x178(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPalMapObjectDefenseBulletLauncherModel> WeakDefenseModel;                                  // 0x180(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampDefenseBase* GetDefaultObj();

	class APalAIController* GetControllerRef();
};

// 0x8 (0x190 - 0x188)
// Class Pal.PalAIActionBaseCampDefenseGunner
class UPalAIActionBaseCampDefenseGunner : public UPalAIActionBaseCampDefenseBase
{
public:
	uint8                                        Pad_B41[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampDefenseGunner* GetDefaultObj();

	void StopTrigger();
	void OnShootBullet();
};

// 0x0 (0x188 - 0x188)
// Class Pal.PalAIActionBaseCampDefenseWait
class UPalAIActionBaseCampDefenseWait : public UPalAIActionBaseCampDefenseBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampDefenseWait* GetDefaultObj();

};

// 0x30 (0x160 - 0x130)
// Class Pal.PalAIActionBaseCampDodgeWork
class UPalAIActionBaseCampDodgeWork : public UPalAIActionBase
{
public:
	float                                        WalkAroundArrivalRange;                            // 0x130(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WalkAroundNextDistance;                            // 0x134(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                        WalkAroundRandomTime;                              // 0x138(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_B50[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampDodgeWork* GetDefaultObj();

};

// 0x0 (0x140 - 0x140)
// Class Pal.PalAIActionBaseCampFighter
class UPalAIActionBaseCampFighter : public UPalAIActionBaseCampBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampFighter* GetDefaultObj();

	bool TryGetDefenseMapObjectModel(class UPalMapObjectDefenseModelBase** OutModel);
	void RegisterAssignDefenseModelId(struct FGuid& InDefenseMapObjectModelId);
	void ChangeActionWait();
};

// 0x8 (0x140 - 0x138)
// Class Pal.PalAIActionBaseCampFighterChildBase
class UPalAIActionBaseCampFighterChildBase : public UPalAIActionBaseCampChildBase
{
public:
	TWeakObjectPtr<class UPalAIActionBaseCampFighter> WeakParentFighterActionCache;                      // 0x138(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampFighterChildBase* GetDefaultObj();

	class UPalAIActionBaseCampFighter* GetParentFighterAction();
};

// 0x48 (0x178 - 0x130)
// Class Pal.PalAIActionCombatBase
class UPalAIActionCombatBase : public UPalAIActionBase
{
public:
	uint8                                        Pad_BA7[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCombatFinish;                                    // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x148(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalCharacter*                         SelfActor;                                         // 0x150(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalAICombatModule*                    CombatModule;                                      // 0x158(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         NextIsWaza;                                        // 0x160(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_BA8[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NextWazaSlotIndex;                                 // 0x164(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalActionBase>            NextActionClass;                                   // 0x168(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InterruptSkillSlotID;                              // 0x170(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInterruptSkill;                                   // 0x174(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_BAA[0x3];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionCombatBase* GetDefaultObj();

	void StartNextAction_Event(class UPalActionComponent* ActionComponent);
	void SkillSlotSetUp();
	void SetTargetAndNextAction(class AActor* Target);
	bool PreTickFinishCheck();
	void PlayActionWhenDarknessStatus();
	void OnDeadDeledate_Event(const struct FPalDeadInfo& DeadInfo);
	void MoveToTarget();
	bool LineTraceTarget();
	void InterruptAction(int32 SkillSlotID);
	class UPalStaticCharacterParameterComponent* GetStaticParamCompRef();
	class UPalActiveSkillSlot* GetSkillSlotRef();
	class UPalCharacterParameterComponent* GetParamCompRef();
	class APalAIController* GetControllerRef();
	class UPalActionComponent* GetActorActionComponentRef();
	void CombatFinishDelegate__DelegateSignature();
	void ChangeNextAction();
};

// 0x0 (0x178 - 0x178)
// Class Pal.PalAIActionBaseCampFighterCombat
class UPalAIActionBaseCampFighterCombat : public UPalAIActionCombatBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampFighterCombat* GetDefaultObj();

};

// 0x10 (0x188 - 0x178)
// Class Pal.PalAIActionBaseCampFighterCombatGunner
class UPalAIActionBaseCampFighterCombatGunner : public UPalAIActionCombatBase
{
public:
	float                                        FaceAngleRange;                                    // 0x178(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPalMapObjectDefenseBulletLauncherModel> WeakDefenseModel;                                  // 0x17C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_BB0[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampFighterCombatGunner* GetDefaultObj();

};

// 0x0 (0x140 - 0x140)
// Class Pal.PalAIActionBaseCampFighterWait
class UPalAIActionBaseCampFighterWait : public UPalAIActionBaseCampFighterChildBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampFighterWait* GetDefaultObj();

	bool TrySearchEnemy();
	bool TryGetWaitLocation(struct FVector* Location);
};

// 0x10 (0x150 - 0x140)
// Class Pal.PalAIActionBaseCampInUsingAmusement
class UPalAIActionBaseCampInUsingAmusement : public UPalAIActionBaseCampBase
{
public:
	uint8                                        Pad_BBE[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampInUsingAmusement* GetDefaultObj();

	float GetUsingTime();
};

// 0x48 (0x188 - 0x140)
// Class Pal.PalAIActionBaseCampRecoverHungry
class UPalAIActionBaseCampRecoverHungry : public UPalAIActionBaseCampBase
{
public:
	uint8                                        Pad_BC2[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 WantFoodHUDId;                                     // 0x148(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUserWidgetWorldHUD>    WantFoodHUDClass;                                  // 0x158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               WantFoodHUDOffset;                                 // 0x160(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalMonsterControllerBaseCampHungryParameter HungeryParameter;                                  // 0x178(0xC)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_BC4[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampRecoverHungry* GetDefaultObj();

	void ChangeActionEat();
	void ChangeActionApproach();
};

// 0x8 (0x140 - 0x138)
// Class Pal.PalAIActionBaseCampRecoverHungryChildBase
class UPalAIActionBaseCampRecoverHungryChildBase : public UPalAIActionBaseCampChildBase
{
public:
	uint8                                        Pad_BE3[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampRecoverHungryChildBase* GetDefaultObj();

	bool TryGetTargetMapObjectConcreteModel(class UPalMapObjectConcreteModelBase** OutTargetModel);
	void ToggleShowWantFoodHUD(bool bShow);
	bool IsExistEnoughFoodInTarget();
	bool IsAvailableDistance();
	struct FVector GetTargetLocation();
	class UPalAIActionBaseCampRecoverHungry* GetParentRecoverHungryAction();
	void GetHungryParameter(struct FPalMonsterControllerBaseCampHungryParameter* HungeryParameter);
};

// 0x8 (0x148 - 0x140)
// Class Pal.PalAIActionBaseCampRecoverHungryApproachToFoodBox
class UPalAIActionBaseCampRecoverHungryApproachToFoodBox : public UPalAIActionBaseCampRecoverHungryChildBase
{
public:
	uint8                                        Pad_BEA[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampRecoverHungryApproachToFoodBox* GetDefaultObj();

};

// 0x30 (0x170 - 0x140)
// Class Pal.PalAIActionBaseCampRecoverHungryEat
class UPalAIActionBaseCampRecoverHungryEat : public UPalAIActionBaseCampRecoverHungryChildBase
{
public:
	float                                        EatTime;                                           // 0x140(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TurnSpeed;                                         // 0x144(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_BF3[0x28];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampRecoverHungryEat* GetDefaultObj();

	void OnFinishEatingTime();
};

// 0x8 (0x148 - 0x140)
// Class Pal.PalAIActionBaseCampRecoverHungryProductFood
class UPalAIActionBaseCampRecoverHungryProductFood : public UPalAIActionBaseCampRecoverHungryChildBase
{
public:
	uint8                                        Pad_BF6[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampRecoverHungryProductFood* GetDefaultObj();

};

// 0x8 (0x138 - 0x130)
// Class Pal.PalAIActionBaseCampReturnBack
class UPalAIActionBaseCampReturnBack : public UPalAIActionBase
{
public:
	uint8                                        Pad_BF9[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampReturnBack* GetDefaultObj();

};

// 0x10 (0x150 - 0x140)
// Class Pal.PalAIActionBaseCampSleep
class UPalAIActionBaseCampSleep : public UPalAIActionBaseCampBase
{
public:
	uint8                                        Pad_BFA[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampSleep* GetDefaultObj();

};

// 0x58 (0x198 - 0x140)
// Class Pal.PalAIActionBaseCampSleepActively
class UPalAIActionBaseCampSleepActively : public UPalAIActionBaseCampBase
{
public:
	uint8                                        Pad_BFD[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ReservedBedModelInstanceId;                        // 0x148(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalAIActionBaseCampSleepActivelyMode Mode;                                              // 0x158(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C00[0x3F];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampSleepActively* GetDefaultObj();

	void SetParameter(struct FPalAIActionBaseCampSleepActivelyParameter& Parameter);
};

// 0x10 (0x140 - 0x130)
// Class Pal.PalAIActionBaseCampSpawningForWorker
class UPalAIActionBaseCampSpawningForWorker : public UPalAIActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnLandedWorldStaticDelegate;                       // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampSpawningForWorker* GetDefaultObj();

	void SimpleMulticastDelegate__DelegateSignature();
	void OnLanded(struct FHitResult& Hit);
};

// 0x30 (0x160 - 0x130)
// Class Pal.PalAIActionBaseCampTrantrum
class UPalAIActionBaseCampTrantrum : public UPalAIActionBase
{
public:
	float                                        Duration;                                          // 0x130(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RadiusAttackTo;                                    // 0x134(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInt32Interval                        AttackNumRange;                                    // 0x138(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurnSpeedToAttack;                                 // 0x140(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 AttackTargetMapObjectInstanceId;                   // 0x144(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C05[0xC];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampTrantrum* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIActionBaseCampUtility
class UPalAIActionBaseCampUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionBaseCampUtility* GetDefaultObj();

	enum class EAIRequestPriority GetRequestSoftScriptPriority(enum class EPalRequestSoftScriptPriorityAdd AddPriority);
};

// 0x0 (0x130 - 0x130)
// Class Pal.PalAIActionCollectItemToStorage
class UPalAIActionCollectItemToStorage : public UPalAIActionBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionCollectItemToStorage* GetDefaultObj();

};

// 0x0 (0x178 - 0x178)
// Class Pal.PalAIActionCombat_BaseCamp
class UPalAIActionCombat_BaseCamp : public UPalAIActionCombatBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionCombat_BaseCamp* GetDefaultObj();

};

// 0x0 (0x178 - 0x178)
// Class Pal.PalAIActionCombat_Standard
class UPalAIActionCombat_Standard : public UPalAIActionCombatBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionCombat_Standard* GetDefaultObj();

};

// 0x10 (0xF0 - 0xE0)
// Class Pal.PalAIActionComponent
class UPalAIActionComponent : public UPawnActionsComponent
{
public:
	TArray<class UPalAIActionCompositeBase*>     ActionCompositeRoots;                              // 0xE0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAIActionComponent* GetDefaultObj();

	void TerminateCurrentActionByClass(TSubclassOf<class UPalAIActionBase> ActionClass);
	void SetWalkSpeed_ForAIAction(enum class EPalMovementSpeedType MoveSpeedType);
	void SetRootComposite(class UPalAIActionCompositeBase* NewCompositeAction, enum class EAIRequestPriority Priority);
	class UPalAIActionBase* SetActionClassParameter(TSubclassOf<class UPalAIActionBase> NewActionClass, const struct FPalAIActionDynamicParameter& Parameter);
	void SetAction(class UPawnAction* NewAction, enum class EAIRequestPriority Priority, class UObject* Instigator);
	bool IsActionEmpty();
	bool HasAction(TSubclassOf<class UPawnAction>& CheckClass, enum class EAIRequestPriority CheckPriority);
	class UPawnAction* GetCurrentTopParentAction_BP();
	enum class EPalAIActionCategory GetCurrentAIActionCategory();
	class UPawnAction* GetCurrentAction_BP();
	class UPalAIActionCompositeBase* GetCompositeRoot(enum class EAIRequestPriority Priority);
	void CacheControlledPawn_BP();
	void AllCancelPushedAction(class UObject* Instigator);
	void AllCancelActionPriorThanSoftScript(class UObject* Instigator);
	void AllCancelAction_Logic_HardScript_Reaction(class UObject* Instigator);
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalAIActionCompositeBase
class UPalAIActionCompositeBase : public UObject
{
public:
	uint8                                        Pad_C4B[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalAIActionCompositeBase*             Child;                                             // 0x30(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C4C[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalAIActionComponent*                 OwnerComponent;                                    // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIActionCompositeBase* GetDefaultObj();

	void SetChildActionComposite(class UPalAIActionCompositeBase* Composite);
	void SetChildAction(class UPalAIActionBase* Action, class UObject* Instigator);
	bool IsPaused();
	class APawn* GetPawn();
	class UPalAIActionComponent* GetOwnerComponent();
	class AController* GetController();
	class UPalAIActionCompositeBase* GetChild();
	class UPalCharacterParameterComponent* GetCharacterParameter();
	class UPalActionComponent* GetActionComponent();
};

// 0x50 (0x98 - 0x48)
// Class Pal.PalAIActionCompositeBaseCamp
class UPalAIActionCompositeBaseCamp : public UPalAIActionCompositeBase
{
public:
	float                                        WalkSpeedDefault;                                  // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C55[0x4C];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionCompositeBaseCamp* GetDefaultObj();

	void NotifyOrderCommand(enum class EPalMapBaseCampWorkerOrderType OrderType);
	void InterruptActionToSleep();
	void InterruptActionToRecoverHungry(struct FPalMonsterControllerBaseCampHungryParameter& Parameter);
	void ChangeActionToWorker();
	void ChangeActionToFighter();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIActionCompositeOrderCommandInterface
class IPalAIActionCompositeOrderCommandInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalAIActionCompositeOrderCommandInterface* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Pal.PalAIActionCompositeActionDummy
class UPalAIActionCompositeActionDummy : public UPalAIActionCompositeBase
{
public:
	uint8                                        Pad_C62[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionCompositeActionDummy* GetDefaultObj();

	void OnResumeAction(class UPalAIActionBase* Action);
	void OnPauseAction(class UPalAIActionBase* Action, class UPawnAction* PausedBy);
	void OnFinishAction(class UPalAIActionBase* Action);
};

// 0x40 (0x88 - 0x48)
// Class Pal.PalAIActionCompositeWorker
class UPalAIActionCompositeWorker : public UPalAIActionCompositeBase
{
public:
	TSubclassOf<class UPalAIActionBase>          WaitActionClass;                                   // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalAIActionBase>          ApproachActionClass;                               // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalAIActionBase>          WaitForWorkableActionClass;                        // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalAIActionBase>          WorkingActionClass;                                // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalAIActionBase>          CurrentActionClass;                                // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpeedFlagName;                                     // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultWalkSpeed;                                  // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C86[0xC];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionCompositeWorker* GetDefaultObj();

	void UnregisterFixAssignWork();
	bool TryFindNextWork();
	void RegisterFixedAssignWorkAttack(struct FGuid& MapObjectModelInstanceId);
	void RegisterFixedAssignWork(struct FGuid& WorkId);
	void OnTickInWaitAction(float DeltaTime);
	void OnStartAction(class UPalAIActionBase* Action);
	bool IsTargetWorkable();
	bool IsTargetAssignable();
	bool IsAssignedToTarget();
	void ChangeActionWorking();
	void ChangeActionWaitForWorkable();
	void ChangeActionWait();
	void ChangeActionApproachToWorkArea();
};

// 0x8 (0x138 - 0x130)
// Class Pal.PalAIActionWorkerChildBase
class UPalAIActionWorkerChildBase : public UPalAIActionBase
{
public:
	uint8                                        Pad_CA2[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionWorkerChildBase* GetDefaultObj();

	void LookToTarget(float TurnSpeed, float DeltaTime);
	bool IsTargetWorkable();
	bool IsTargetAssignable();
	bool IsAssignedToTarget();
	struct FVector GetWorkLookAtLocation();
	class UPalAIActionCompositeWorker* GetParent();
};

// 0x18 (0xA0 - 0x88)
// Class Pal.PalAIActionCompositeWorkerBaseCamp
class UPalAIActionCompositeWorkerBaseCamp : public UPalAIActionCompositeWorker
{
public:
	uint8                                        Pad_CAA[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalAIActionCombatBase>    CombatActionClass;                                 // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalAIActionBaseCampDefenseBase> DefenseActionClass;                                // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIActionCompositeWorkerBaseCamp* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalAIActionCompositeWorkerModuleBase
class UPalAIActionCompositeWorkerModuleBase : public UObject
{
public:
	class UPalAIActionCompositeWorker*           Owner;                                             // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAIActionCompositeWorkerModuleBase* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalAIActionCompositeWorkerModuleNormal
class UPalAIActionCompositeWorkerModuleNormal : public UPalAIActionCompositeWorkerModuleBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionCompositeWorkerModuleNormal* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalAIActionCompositeWorkerModuleBaseCamp
class UPalAIActionCompositeWorkerModuleBaseCamp : public UPalAIActionCompositeWorkerModuleBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionCompositeWorkerModuleBaseCamp* GetDefaultObj();

	struct FGuid GetBaseCampIdBelongTo();
	class UPalBaseCampModel* GetBaseCampBelongTo();
};

// 0xB8 (0x1E8 - 0x130)
// Class Pal.PalAIActionCoopAssaultrifleMode
class UPalAIActionCoopAssaultrifleMode : public UPalAIActionBase
{
public:
	float                                        SearchEnemyRadius;                                 // 0x130(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchLocationRadiusMax;                           // 0x134(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchLocationRadiusStep;                          // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchLocationDegStep;                             // 0x13C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SearchingLocationRadius;                           // 0x140(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CDE[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class APalCharacter*                         TargetCharacter;                                   // 0x148(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalCharacter*                         ReticleTarget;                                     // 0x150(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               AimStartPoint;                                     // 0x158(0x18)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CE0[0x78];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionCoopAssaultrifleMode* GetDefaultObj();

	void Update(float DeltaTime);
	void SetAimStartPoint(struct FVector& OffsetLocation);
	void SearchForTargetAndShootingLocation();
	void ProgressSeraching(float DeltaTime);
	void Progress_VerifyShootableEnemy();
	void Progress_CollectShootableLocation();
	void OnUpdateShootingLocation(class APalCharacter* Target, struct FVector& ShootLocation);
	void OnRoadBlocked();
	bool IsSearching();
	bool HasReached(struct FVector& Goal);
	class APalCharacter* GetTrainer();
	void GetTargetEnemies(TArray<class APalCharacter*>* Enemies);
	class APalCharacter* GetTargetCharacter();
	class APalCharacter* GetReticleTarget();
	void GetCandidateLocations(float Radius, float DegStep, TArray<struct FPalCoopSkillAssaultrifleModeCandidateLocation>* Results);
	bool FindLocationToShootEnemy(class APalCharacter* Target, struct FPalCoopSkillAssaultrifleModeCandidateLocation* OutLocation);
	void ClearTargetCharacter();
};

// 0x18 (0x148 - 0x130)
// Class Pal.PalAIActionFed
class UPalAIActionFed : public UPalAIActionBase
{
public:
	uint8                                        Pad_CE7[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class APalCharacter*                         ApproachTarget;                                    // 0x138(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CE8[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionFed* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Pal.PalAIActionFunnelCharacterDefault
class UPalAIActionFunnelCharacterDefault : public UPalAIActionCompositeBase
{
public:
	uint8                                        Pad_CF8[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionFunnelCharacterDefault* GetDefaultObj();

	bool ShouldSetSkillAction();
	void SetSkillAction();
	void SetOtomoFollowAction();
	void OnTick_BP(float DeltaTime);
	void CreateSkillActionModule(TSubclassOf<class UPalFunnelSkillModule> FunnelSkillModuleClass);
};

// 0x8 (0x138 - 0x130)
// Class Pal.PalAIActionFunnelSkillBase
class UPalAIActionFunnelSkillBase : public UPalAIActionBase
{
public:
	class UPalFunnelSkillModule*                 Module;                                            // 0x130(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIActionFunnelSkillBase* GetDefaultObj();

	void SetModule(class UPalFunnelSkillModule* InModule);
};

// 0x10 (0x140 - 0x130)
// Class Pal.PalAIActionLiftup
class UPalAIActionLiftup : public UPalAIActionBase
{
public:
	uint8                                        Pad_D01[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionLiftup* GetDefaultObj();

	void OnLanded();
	void CallOnLanded(struct FHitResult& Hit);
};

// 0x8 (0x50 - 0x48)
// Class Pal.PalAIActionOtomoDefault
class UPalAIActionOtomoDefault : public UPalAIActionCompositeBase
{
public:
	uint8                                        Pad_D05[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionOtomoDefault* GetDefaultObj();

	bool ShouldSetCombatAction();
	void SetOtomoWorkActionFixedAssign(class AActor* HitActor);
	void SetOtomoWorkAction();
	void SetOtomoFollowAction();
	void SetOtomoCombatAction();
	void SetOtomoBaseCampAction();
};

// 0x20 (0x158 - 0x138)
// Class Pal.PalAIActionWorkerApproachToWorkArea
class UPalAIActionWorkerApproachToWorkArea : public UPalAIActionWorkerChildBase
{
public:
	uint8                                        Pad_D0D[0x20];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionWorkerApproachToWorkArea* GetDefaultObj();

	void OnReceiveMoveCompleted(const struct FAIRequestID& AIRequestID, enum class EPathFollowingResult Result);
};

// 0x10 (0x140 - 0x130)
// Class Pal.PalAIActionWorkerReaction
class UPalAIActionWorkerReaction : public UPalAIActionBase
{
public:
	class APalCharacter*                         LookTargetCharacter;                               // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_D0F[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionWorkerReaction* GetDefaultObj();

};

// 0x0 (0x138 - 0x138)
// Class Pal.PalAIActionWorkerWait
class UPalAIActionWorkerWait : public UPalAIActionWorkerChildBase
{
public:

	static class UClass* StaticClass();
	static class UPalAIActionWorkerWait* GetDefaultObj();

	void ReturnToDefaultPosition();
	void OnTickForWait(float DeltaTime);
	enum class EPathFollowingRequestResult MoveToLocation(struct FVector& ToLocation);
	bool CalcWalkAroundDestination(float Radius, struct FVector* OutDestination);
};

// 0x18 (0x150 - 0x138)
// Class Pal.PalAIActionWorkerWaitForWorkable
class UPalAIActionWorkerWaitForWorkable : public UPalAIActionWorkerChildBase
{
public:
	uint8                                        Pad_D30[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionWorkerWaitForWorkable* GetDefaultObj();

};

// 0x20 (0x158 - 0x138)
// Class Pal.PalAIActionWorkerWorking
class UPalAIActionWorkerWorking : public UPalAIActionWorkerChildBase
{
public:
	enum class EPalWorkType                      CurrentWorkType;                                   // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D39[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnSpeedToTarget;                                 // 0x13C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D3A[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIActionWorkerWorking* GetDefaultObj();

};

// 0x18 (0x148 - 0x130)
// Class Pal.PalAIAction_LeaveBase
class UPalAIAction_LeaveBase : public UPalAIActionBase
{
public:
	class AActor*                                TargetActor;                                       // 0x130(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalCharacter*                         SelfActor;                                         // 0x138(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalCharacterMovementComponent*        Movement;                                          // 0x140(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAIAction_LeaveBase* GetDefaultObj();

	void InitializeObject(class AActor* CombatTarget, class APalCharacter* SelfCharactor);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIBlackboardBase
class UPalAIBlackboardBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalAIBlackboardBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAICombatModule
class UPalAICombatModule : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalAICombatModule* GetDefaultObj();

	void UpdateBattleState();
	void Setup();
	void OnBattleFinish();
	bool IsReachable_NavMesh_ForActor(class AActor* Target);
	bool IsReachable_NavMesh(const struct FVector& TargetPos);
	bool IsBattleMode();
	class AActor* GetTargetActor();
	bool AIMoveToTargetActor(class AActor* Target);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalAICombatModule_BaseCamp
class UPalAICombatModule_BaseCamp : public UPalAICombatModule
{
public:
	TWeakObjectPtr<class UPalAIActionBaseCampFighter> ParentFighterAction;                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAICombatModule_BaseCamp* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAICombatModule_EnemyNormal
class UPalAICombatModule_EnemyNormal : public UPalAICombatModule
{
public:

	static class UClass* StaticClass();
	static class UPalAICombatModule_EnemyNormal* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Pal.PalAICombatModule_Invader
class UPalAICombatModule_Invader : public UPalAICombatModule
{
public:
	uint8                                        Pad_D82[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAICombatModule_Invader* GetDefaultObj();

	void OnBattleFinish_forDelegate(class AActor* Actor);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAICombatModule_Otomo
class UPalAICombatModule_Otomo : public UPalAICombatModule
{
public:

	static class UClass* StaticClass();
	static class UPalAICombatModule_Otomo* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalAICombatModule_Wild
class UPalAICombatModule_Wild : public UPalAICombatModule
{
public:
	uint8                                        Pad_D8C[0x28];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAICombatModule_Wild* GetDefaultObj();

	void OnBattleFinish_forDelegate(class AActor* Actor);
	bool JudgeReturnCombatStartPosition();
};

// 0x140 (0x4F8 - 0x3B8)
// Class Pal.PalAIController
class APalAIController : public AAIController
{
public:
	TArray<class AActor*>                        TargetPlayers;                                     // 0x3B8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        TargetNPCs;                                        // 0x3C8(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalAICombatModule>        CombatModuleClass;                                 // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalActiveSkillSlot*                   SkillSlot;                                         // 0x3E0(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DebugOrganizationName;                             // 0x3E8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APalCharacter*                         R1AttackTarget;                                    // 0x3F8(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAIActionComponentTickInterval;                  // 0x400(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E31[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsActive;                                         // 0x410(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsSquadBehaviour;                                  // 0x411(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsNotSleepWildLife;                                // 0x412(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E32[0x5];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalSquad*                             MySquad;                                           // 0x418(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalHate*                              HateSystem;                                        // 0x420(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalAIActionComponent*                 AIActionComponent;                                 // 0x428(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalAIBlackboardBase*                  PalAIBlackboard;                                   // 0x430(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E34[0x88];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverwriteBlockDetectionParams;                    // 0x4C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E37[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalPathFollowingBlockDetectionParams BlockDetectionParams;                              // 0x4C4(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalAIBlackboardBase>      PalBlackboardClass;                                // 0x4D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E38[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          DeadBodyDeleteTimerHandle;                         // 0x4E0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDeadBodyTimeDelate;                              // 0x4E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsSelfTimeDelate_FromSpawnTime;                    // 0x4E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E39[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          SelfDeleteTimerHandle;                             // 0x4F0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalAIController* GetDefaultObj();

	void WaitForSeconds(float Time);
	void SimpleMoveToActorWithLineTraceGround(class AActor* GoalActor);
	void ShowHateArrow();
	void ShowActionDebug();
	void SetInitialValue(bool IsSquad, bool NotSleep);
	void SetActiveAI(bool Active);
	void RPCDummy();
	enum class EPathFollowingRequestResult PalMoveToLocation(struct FVector& Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bAllowPartialPaths);
	void OnDeadTimerStart(const struct FPalDeadInfo& Info);
	void OnChangedActiveCharacter(bool bActive);
	void OnChangeChangeImportance(enum class EPalCharacterImportanceType Next);
	void NotifyTalkStart(class APalPlayerCharacter* TalkPlayer);
	void NotifyTalkEnd(class APalPlayerCharacter* TalkPlayer);
	void MoveToLocation_ErrorSupportMove(const struct FVector& GoalLocation);
	void MoveToDirectly(const struct FVector& GoalLocation);
	bool IsOnNavMesh_TargetLocation(const struct FVector& TargetLocation);
	bool IsOnNavMesh();
	bool IsLeader();
	bool IsExistPathForLocation_ForBP_HeightRangeCheck(const struct FVector& Location, float AcceptanceRadius, float UpOffset, float DownOffset, struct FVector* OutGoalLocation);
	bool IsExistPathForLocation_ForBP(const struct FVector& Location, float AcceptanceRadius);
	bool IsActiveAI();
	class APalCharacter* GetSquadLeader();
	class UPalSquad* GetSquad();
	class UPalAIBlackboardBase* GetMyPalBlackboard();
	class UPalAIBlackboardBase* GetLeaderPalBlackboard();
	bool GetIsSquadBehaviour();
	bool GetIsnotSleepWildLife();
	class UPalHate* GetHateSystem();
	class UPalAIActionComponent* GetAIActionComponent();
	bool FindReachablePathLocation(const TArray<struct FVector>& RequestLocationArray, struct FVector* OutGoalLocation);
	bool FindNearestNavmeshPointFromSelf(struct FVector* OutLocation);
	void DeleteSelfDeadBody();
	void CreatePalBlackboard();
	class AActor* CopyTargetFromOtherAI(class AActor* FromAcotr);
	void AddTargetPlayer_ForEnemy(class AActor* PlayerOrPal);
	void AddTargetNPC(class AActor* NPC);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalAIControllerBaseCampStatus
class UPalAIControllerBaseCampStatus : public UObject
{
public:
	uint8                                        Pad_E43[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAIControllerBaseCampStatus* GetDefaultObj();

	struct FGuid GetBaseCampId();
	class UPalBaseCampModel* GetBaseCamp();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIControllerWorkerModule
class UPalAIControllerWorkerModule : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalAIControllerWorkerModule* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIControllerWorkerModuleNormal
class UPalAIControllerWorkerModuleNormal : public UPalAIControllerWorkerModule
{
public:

	static class UClass* StaticClass();
	static class UPalAIControllerWorkerModuleNormal* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIControllerWorkerModuleBaseCamp
class UPalAIControllerWorkerModuleBaseCamp : public UPalAIControllerWorkerModule
{
public:

	static class UClass* StaticClass();
	static class UPalAIControllerWorkerModuleBaseCamp* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIControllerWorkerInterface
class IPalAIControllerWorkerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalAIControllerWorkerInterface* GetDefaultObj();

	TSubclassOf<class UPalAIControllerWorkerModule> GetWorkerModuleClass();
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalAIDamageReactionComponent
class UPalAIDamageReactionComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalAIDamageReactionComponent* GetDefaultObj();

	void FunctionTest();
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalAIResponsePreset
class UPalAIResponsePreset : public UObject
{
public:
	enum class EPalAIResponseType                Discover_Player;                                   // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Discover_Greater;                                  // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Discover_Equal;                                    // 0x2A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Discover_Smaller;                                  // 0x2B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Damaged_Player;                                    // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Damaged_Greater;                                   // 0x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Damaged_Equal;                                     // 0x2E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalAIResponseType                Damaged_Smaller;                                   // 0x2F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAIResponsePreset* GetDefaultObj();

};

// 0x98 (0x138 - 0xA0)
// Class Pal.PalAISensorComponent
class UPalAISensorComponent : public UActorComponent
{
public:
	class AActor*                                SelfPawn;                                          // 0xA0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SightAngleThreshold;                               // 0xA8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SightDistance;                                     // 0xAC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HearingRate;                                       // 0xB0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         HumanAndNoneWeapon;                                // 0xB4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsIgnoreSoundReaction;                             // 0xB5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E9D[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecentMaxSoundLevel;                               // 0xB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E9E[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ResponsedMaxBiologicalGrade;                       // 0xC4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalAIResponsePreset*                  AIResponsePreset;                                  // 0xC8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalAISightResponse*                   AISightResponse;                                   // 0xD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DisableSightFlag;                                  // 0xD8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnFReceiveSoundDelegate;                           // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAISensorComponent* GetDefaultObj();

	void SightCheckAllPlayer(TArray<class APalCharacter*>* InSightPlayers, float RangeRate);
	void SightCheckAllEdibleDeadNPC(TArray<class APalCharacter*>* InSightCharacters);
	void SightCheckAllAliveNPC(TArray<class APalCharacter*>* InSightCharacters);
	void Setup();
	void SetDisableSightFlag(class FName FlagName, bool IsDisable);
	void SetDebugAIResponse(TSubclassOf<class UPalAIResponsePreset> PresetClass);
	enum class EPalAIResponseType SelectResponseBySenses(enum class EPalAIResponseType CurrentBehavior, TArray<class APalCharacter*>& FindCharacters, bool IsDamaged, class APalCharacter** OutTargetCharacter);
	void ResetResponsedMaxBiologicalGrade();
	void ReceiveSoundDelegate__DelegateSignature(const struct FVector& EmitLocation);
	void ReceiveSound(int32 SoundRadius, const struct FVector& EmitLocation, class AActor* Emitter);
	void OnResponseSpecialLookat();
	class APalCharacter* MaximumStrengthEnemy(TArray<class APalCharacter*>& FindCharacters, enum class EPalBiologicalGradeComparedResult* Result);
	bool IsInSightKillerAndDeadBody(class AActor* Killer, class AActor* DeadBody);
	void EnableHearing();
	void DisableHearing();
	void DeadAutoRemoveDelegate(const struct FPalDeadInfo& DeadInfo);
};

// 0xB0 (0xD8 - 0x28)
// Class Pal.PalAISightResponsePreset
class UPalAISightResponsePreset : public UObject
{
public:
	TMap<enum class EPalAISightJudgementType, TSubclassOf<class UPalAIActionBase>> AIActionMap;                                       // 0x28(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AimedByPlayerDelegate;                             // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<enum class EPalAISightJudgementType, FMulticastInlineDelegateProperty_> DelegateMap;                                       // 0x88(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAISightResponsePreset* GetDefaultObj();

	void FindDelegate__DelegateSignature(class APalCharacter* SelfCharacter, class APalCharacter* FoundCharacter);
	void BlueprintDelegateSetup();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAISightResponseTransitionableInterface
class IPalAISightResponseTransitionableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalAISightResponseTransitionableInterface* GetDefaultObj();

	void GetTransitionableJudgementType(TArray<enum class EPalAISightJudgementType>* JudgeTypeList);
};

// 0x58 (0x80 - 0x28)
// Class Pal.PalAISightResponse
class UPalAISightResponse : public UObject
{
public:
	class UPalAISightResponsePreset*             SightResponsePreset;                               // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_EB2[0x50];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAISightResponse* GetDefaultObj();

};

// 0x8 (0x490 - 0x488)
// Class Pal.PalAkComponent
class UPalAkComponent : public UAkComponent
{
public:
	bool                                         PersistAcrossLevelTransition;                      // 0x488(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_EB7[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAkComponent* GetDefaultObj();

};

// 0x30 (0x2C0 - 0x290)
// Class Pal.PalAmbientSoundAreaBase
class APalAmbientSoundAreaBase : public AActor
{
public:
	int32                                        AmbientPriority;                                   // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_ED3[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAkAudioEvent*>                 DayAmbientEvents;                                  // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UAkAudioEvent*>                 NightAmbientEvents;                                // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsOverlappedLocalPlayer;                          // 0x2B8(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_ED5[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalAmbientSoundAreaBase* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class APalPlayerCharacter* PlayerCharacter);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class APalPlayerCharacter* PlayerCharacter);
	class UPrimitiveComponent* GetAreaCollision();
	struct FPalAmbientSoundAreaData GetAmbientSoundAreaData();
};

// 0x18 (0x2A8 - 0x290)
// Class Pal.PalAmbientSoundLineBase
class APalAmbientSoundLineBase : public AActor
{
public:
	class UAkComponent*                          AkComponent;                                       // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         ActivateTrigger;                                   // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalAmbientSoundLineObject*            AmbinetSoundLineObject;                            // 0x2A0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalAmbientSoundLineBase* GetDefaultObj();

};

// 0x28 (0x5A0 - 0x578)
// Class Pal.PalAmbientSoundLineComponent
class UPalAmbientSoundLineComponent : public UBoxComponent
{
public:
	class UAkAudioEvent*                         AmbientEvent;                                      // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableAmbientSound;                             // 0x580(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EE1[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalAmbientSoundLineObject*            AmbinetSoundLineObject;                            // 0x588(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          AkComponent;                                       // 0x590(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_EE2[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAmbientSoundLineComponent* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalAmbientSoundLineObject
class UPalAmbientSoundLineObject : public UObject
{
public:
	uint8                                        Pad_EF8[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USplineComponent*>              SplineComponents;                                  // 0x30(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         ActivateTrigger;                                   // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          AkComponent;                                       // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAmbientSoundLineObject* GetDefaultObj();

	void OnActivateTriggerOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnActivateTriggerLineOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
};

// 0x2C8 (0x610 - 0x348)
// Class Pal.PalAnimInstance
class UPalAnimInstance : public UAnimInstance
{
public:
	FMulticastInlineDelegateProperty_            OnMontageNotifyBeginDelegate;                      // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMontageNotifyEndDelegate;                        // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UAnimInstance>>     ImplementationClassList;                           // 0x368(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FGeneralAnimationParameter            GeneralAnimationParameter;                         // 0x378(0x168)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         IsRotateYawInterpolation;                          // 0x4E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F93[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotateYawInterpolation_Acceleration;               // 0x4E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class UPalBoneInfo*>       BoneListFullBody;                                  // 0x4E8(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, class UPalBoneInfo*>       BoneListOnlySpines;                                // 0x538(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FReserveMontage>               ReservedMontageList;                               // 0x588(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F94[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatContainer                       AdditiveAnimationRate;                             // 0x5A0(0x10)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F96[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        DisableUpperOverrideFlag;                          // 0x5B8(0x50)(Edit, Transient, DisableEditOnInstance, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F97[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimInstance* GetDefaultObj();

	void SetUpperOverrideDisableFlag(class FName FlagName, bool IsDisable);
	void SetAdditiveAnimationRate(class FName FlagName, float Rate);
	void OnNotifyEndReceived(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
	void OnNotifyBeginReceived(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
	void OnMontageNotifyEnd__DelegateSignature(class UAnimMontage* Montage, class FName NotifyName);
	void OnMontageNotifyBegin__DelegateSignature(class UAnimMontage* Montage, class FName NotifyName);
	void OnMontageEndedCallback(class UAnimMontage* Montage, bool bInterrupted);
	void Montage_PlayList(const TArray<struct FReserveMontage>& MontageList);
	class FName GetNearBoneInSpines(const struct FVector& FromPos);
	class FName GetNearBoneInFullBody(const struct FVector& FromPos);
	float GetCurrentMontagePlayTimeToEnd();
	struct FTransform GetBoneTransform(class FName BoneName);
	struct FQuat GetBoneRotationComponentSpace(class FName BoneName);
	struct FQuat GetBoneRotation(class FName BoneName);
	struct FVector GetBonePosition(class FName BoneName);
	class UPalBoneInfo* GetBoneInfo(class FName BoneName);
	void CalcLength(class FName Target, class FName NextBone, float TipLength);
	void BodyInstance_SetSimulate(class FName BoneName, bool SimulateActive);
	void AddSpinesListFromBoneList(class FName BoneName);
	void AddList(class FName BoneName);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalAnimNotifyDynamicParameterBase
class UPalAnimNotifyDynamicParameterBase : public UObject
{
public:
	uint8                                        Pad_FA0[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotifyDynamicParameterBase* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Pal.PalAnimNotifyDynamicParameterAttackCollision
class UPalAnimNotifyDynamicParameterAttackCollision : public UPalAnimNotifyDynamicParameterBase
{
public:
	class UPalHitFilter*                         AttackFilter;                                      // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UShapeComponent*>               TransientShapeComponents;                          // 0x38(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        HitStopCount;                                      // 0x48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FA6[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                MyMesh;                                            // 0x50(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                MyActor;                                           // 0x58(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAnimNotifyDynamicParameterAttackCollision* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Pal.PalAnimNotifyDynamicParameterAvoidTime
class UPalAnimNotifyDynamicParameterAvoidTime : public UPalAnimNotifyDynamicParameterBase
{
public:
	TMap<class UPrimitiveComponent*, enum class ECollisionResponse> AttackResponseMap;                                 // 0x30(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAnimNotifyDynamicParameterAvoidTime* GetDefaultObj();

};

// 0x50 (0xF0 - 0xA0)
// Class Pal.PalAnimNotifyParameterComponent
class UPalAnimNotifyParameterComponent : public UActorComponent
{
public:
	TMap<class FString, class UPalAnimNotifyDynamicParameterBase*> DynamicParameterMap;                               // 0xA0(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAnimNotifyParameterComponent* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Pal.PalAnimNotifyState_AttackCollision
class UPalAnimNotifyState_AttackCollision : public UAnimNotifyState
{
public:
	class FName                                  AttachBoneName;                                    // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableHitStop;                                  // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FB0[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideHitStopTime;                               // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalHitFilter*                         AttackFilter;                                      // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShapeComponent*                       ShapeComponent;                                    // 0x48(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UShapeComponent*>               ShapeComponents;                                   // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_AttackCollision* GetDefaultObj();

	void OnHit(class UPrimitiveComponent* MyHitComponent, class AActor* HitActor, class UPrimitiveComponent* HitComponent, TArray<int32>& FoliageIndex, const struct FVector& HitLocation, int32 HitCount);
};

// 0xA0 (0xD0 - 0x30)
// Class Pal.PalAnimNotifyState_AvoidTime
class UPalAnimNotifyState_AvoidTime : public UAnimNotifyState
{
public:
	TMap<class UPrimitiveComponent*, enum class ECollisionResponse> AttackResponseMap;                                 // 0x30(0x50)(BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UPrimitiveComponent*, enum class ECollisionResponse> BulletResponseMap;                                 // 0x80(0x50)(BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_AvoidTime* GetDefaultObj();

};

// 0x50 (0xC8 - 0x78)
// Class Pal.PalAnimNotifyState_Effect
class UPalAnimNotifyState_Effect : public UAnimNotifyState_TimedNiagaraEffect
{
public:
	TMap<class FName, float>                     UserParameterMap;                                  // 0x78(0x50)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_Effect* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalAnimNotifyState_FacialEye
class UPalAnimNotifyState_FacialEye : public UAnimNotifyState
{
public:
	enum class EPalFacialEyeType                 EyeType;                                           // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoDefaultWhenEnd;                                // 0x31(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FBB[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_FacialEye* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalAnimNotifyState_FacialMouth
class UPalAnimNotifyState_FacialMouth : public UAnimNotifyState
{
public:
	enum class EPalFacialMouthType               MouthType;                                         // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoDefaultWhenEnd;                                // 0x31(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FBC[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_FacialMouth* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalAnimNotifyState_FlyMeshHeight
class UPalAnimNotifyState_FlyMeshHeight : public UAnimNotifyState
{
public:
	bool                                         IsToLand;                                          // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FBD[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_FlyMeshHeight* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalAnimNotifyState_HidePalWeapon
class UPalAnimNotifyState_HidePalWeapon : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_HidePalWeapon* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalAnimNotifyState_LookAtDisable
class UPalAnimNotifyState_LookAtDisable : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_LookAtDisable* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Pal.PalAnimNotifyState_MovementControl
class UPalAnimNotifyState_MovementControl : public UAnimNotifyState
{
public:
	float                                        MovementSpeedRate;                                 // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirControlXYRate;                                  // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawRotatorRate;                                    // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityRate;                                       // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FixedGravityZ;                                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlideAlpha;                                        // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableMovement;                                // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableJump;                                    // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FCA[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_MovementControl* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalAnimNotifyState_WeaponControl
class UPalAnimNotifyState_WeaponControl : public UAnimNotifyState
{
public:
	bool                                         bIsDisableShoot;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableAim;                                     // 0x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableAttachLeftHand;                          // 0x32(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableReload;                                  // 0x33(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableChangeWeapon;                            // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalShooterFlagContainerPriority  Priority;                                          // 0x35(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FCF[0x2];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotifyState_WeaponControl* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalAnimNotify_FacialEye
class UPalAnimNotify_FacialEye : public UAnimNotify
{
public:
	enum class EPalFacialEyeType                 EyeType;                                           // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FD1[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotify_FacialEye* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalAnimNotify_FacialMouth
class UPalAnimNotify_FacialMouth : public UAnimNotify
{
public:
	enum class EPalFacialMouthType               MouthType;                                         // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FD3[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotify_FacialMouth* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class Pal.PalAnimNotify_FootStep
class UPalAnimNotify_FootStep : public UAnimNotify
{
public:
	TSoftClassPtr<class UPalFootStepEffectAssetBase> DefaultEffectAssetClass;                           // 0x38(0x30)(Edit, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalFootStepEffectAssetBase*           EffectAssetCache;                                  // 0x68(0x8)(BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAnimNotify_FootStep* GetDefaultObj();

	void SpawnFootStepEffect(class UObject* WorldObject, enum class EPalLandingType LandingType, enum class EPhysicalSurface PhysicalSurface, struct FVector& Location, struct FRotator& Rotation, class UPalStaticCharacterParameterComponent* StaticParam);
	void SpawnFootStepDecal(class AActor* Owner, enum class EPhysicalSurface PhysicalSurface, enum class EPalFootType FootType, const struct FVector& Location, const struct FVector& CurrentNormal, float LifeSpan, float FadeTime);
	bool GetFloorPosition(class AActor* Owner, const struct FTransform& FootTransform, struct FHitResult* HitResult);
};

// 0x50 (0x120 - 0xD0)
// Class Pal.PalAnimNotify_PlayNiagaraEffect
class UPalAnimNotify_PlayNiagaraEffect : public UAnimNotify_PlayNiagaraEffect
{
public:
	TMap<class FName, float>                     UserParameterMap;                                  // 0xD0(0x50)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAnimNotify_PlayNiagaraEffect* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalAnimNotify_RequestJump
class UPalAnimNotify_RequestJump : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UPalAnimNotify_RequestJump* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Pal.PalAnimNotify_RequestRideShakeAnimation
class UPalAnimNotify_RequestRideShakeAnimation : public UAnimNotify
{
public:
	float                                        ApplyRate;                                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlaySpeedRate;                                     // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAdjustAnimationSpeed;                           // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FF1[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class APalCharacter>          CacheCharacter;                                    // 0x44(0x8)(BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_FF2[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                RateList;                                          // 0x50(0x10)(BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAnimNotify_RequestRideShakeAnimation* GetDefaultObj();

	void OnStartAim();
	void OnEndMotion(class UAnimMontage* Montage, bool bInterrupted);
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalAnimNotify_SendActionEvent
class UPalAnimNotify_SendActionEvent : public UAnimNotify
{
public:
	enum class EPalCurrentActionNotifyType       NotifyType;                                        // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FF5[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotify_SendActionEvent* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class Pal.PalAnimNotify_SpawnActor
class UPalAnimNotify_SpawnActor : public UAnimNotify
{
public:
	TSubclassOf<class AActor>                    SpawnActorClass;                                   // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocationOffset;                               // 0x40(0x18)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotationOffset;                               // 0x58(0x18)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalAnimNotify_SpawnActor* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalAnimNotify_StaminaMeleeAttack
class UPalAnimNotify_StaminaMeleeAttack : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UPalAnimNotify_StaminaMeleeAttack* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalAnimNotify_WeaponNotify
class UPalAnimNotify_WeaponNotify : public UAnimNotify
{
public:
	enum class EWeaponNotifyType                 WeaponNotifyType;                                  // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1001[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAnimNotify_WeaponNotify* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Pal.PalAssetStreamableManager
class UPalAssetStreamableManager : public UObject
{
public:
	uint8                                        Pad_1002[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalAssetStreamableManager* GetDefaultObj();

};

// 0x130 (0x158 - 0x28)
// Class Pal.PalHitFilter
class UPalHitFilter : public UObject
{
public:
	uint8                                        Pad_102F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxHitNum;                                         // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitInterval;                                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalHitLocationCalculator> HitLocationCalculator;                             // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsIntersectionCollision;                          // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1030[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IntersectionNum;                                   // 0x44(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnHitDelegate;                                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOverlapEndDelegate;                              // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1031[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHitFilter* GetDefaultObj();

	void UnbindPrimitiveComponent(class UPrimitiveComponent* Component);
	void SetIntersectionNum(int32 Num);
	void SetAttacker(class AActor* Attacker);
	void ResetFilter();
	void OverlapEndDelegate__DelegateSignature(class UPrimitiveComponent* MyHitComponent, class AActor* OtherHitActor, class UPrimitiveComponent* OtherHitComponent);
	void OnHitDelegate__DelegateSignature(class UPrimitiveComponent* MyHitComponent, class AActor* OtherHitActor, class UPrimitiveComponent* OtherHitComponent, TArray<int32>& FoliageIndex, const struct FVector& HitLocation, int32 HitCount);
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& Hit);
	void BindPrimitiveComponent(class UPrimitiveComponent* Component);
};

// 0x40 (0x198 - 0x158)
// Class Pal.PalAttackFilter
class UPalAttackFilter : public UPalHitFilter
{
public:
	FMulticastInlineDelegateProperty_            OnAttackDelegate;                                  // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalWazaID                        Waza;                                              // 0x168(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalBlowVelocityOwner             VelocityOwner;                                     // 0x169(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1040[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               NativeBlowVelocity;                                // 0x170(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WazaPowerRate;                                     // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1041[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Attacker;                                          // 0x190(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAttackFilter* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalAudioSettingSystem
class UPalAudioSettingSystem : public UObject
{
public:
	uint8                                        Pad_108F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalAudioBus, struct FFloatContainer> BusVolumeMap;                                      // 0x30(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalAudioBus, struct FPalAudioFadeParameter> BussFadeMap;                                       // 0x80(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalAudioSettingSystem* GetDefaultObj();

	void Tick_BP(float DeltaTime);
	void StartAudioFade(enum class EPalAudioBus AudioBus, enum class EPalAudioFadeType FadeType, bool bImmediately);
	void SetAudioBusVolume(enum class EPalAudioBus AudioBus, class FName& Key, float Volume);
	void SetAudioBusMute(enum class EPalAudioBus AudioBus, bool IsMute);
	class FString PalAudioBusToString(enum class EPalAudioBus AudioBus);
	bool IsAudioBusMute(enum class EPalAudioBus AudioBus);
	void Initialize();
	float GetAudioBusVolume(enum class EPalAudioBus AudioBus);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAudioUtility
class UPalAudioUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalAudioUtility* GetDefaultObj();

	void OnPlayerExitSpot(class UObject* WorldContextObject, class APalPlayerCharacter* Player, class APalSpotAreaBase* SpotArea);
	void OnPlayerExitBaseCamp(class UObject* WorldContextObject, class APalPlayerCharacter* Player, class UPalBaseCampModel* BaseCampModel);
	void OnPlayerExitAmbientArea(class UObject* WorldContextObject, class APalPlayerCharacter* Player, class APalAmbientSoundAreaBase* SpotArea);
	void OnPlayerEnterSpot(class UObject* WorldContextObject, class APalPlayerCharacter* Player, class APalSpotAreaBase* SpotArea);
	void OnPlayerEnterBaseCamp(class UObject* WorldContextObject, class APalPlayerCharacter* Player, class UPalBaseCampModel* BaseCampModel);
	void OnPlayerEnterAmbientArea(class UObject* WorldContextObject, class APalPlayerCharacter* Player, class APalAmbientSoundAreaBase* SpotArea);
};

// 0x10 (0x80 - 0x70)
// Class Pal.PalAudioWorldSubsystem
class UPalAudioWorldSubsystem : public UPalWorldSubsystem
{
public:
	int32                                        FadeDuration;                                      // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalSoundPlayer*                       SoundPlayer;                                       // 0x78(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAudioWorldSubsystem* GetDefaultObj();

	void Tick_BP(float DeltaTime);
	void StopSound();
	void SetSwitch(const class FString& SwitchGroup, const class FString& SwitchState);
	void SetStateFlagByName(class FName StateGroup, bool Flg);
	void SetStateFlagByEnum(enum class EPalAudioStateGroup StateGroup, bool Flg);
	void SetStateByName(class FName StateGroup, class FName State);
	void SetStateByEnum(enum class EPalAudioStateGroup StateGroup, enum class EPalAudioState State);
	void SetSoundPlayerLocation(struct FVector& Location);
	void SetRTPCValueByName(class FName& Name, float Value, float InterpolSec);
	void SetRTPCValueByEnum(enum class EPalAudioRTPC RTPC, float Value, float InterpolSec);
	void SetOutputBusVolume(float Volume);
	void PostTriggerByString(const class FString& Trigger);
	void PostTriggerByEnum(enum class EPalAudioTrigger Trigger);
	int32 PlaySound(class UAkAudioEvent* AudioEvent, struct FPalSoundOptions& Options);
	void OnSpawnedLocalPlayerCharacter(class APawn* Pawn, class AController* Controller);
	void OnPlayerExitSpotArea(class APalPlayerCharacter* Player, class APalSpotAreaBase* SpotArea);
	void OnPlayerExitBaseCamp(class APalPlayerCharacter* Player, class UPalBaseCampModel* BaseCampModel);
	void OnPlayerExitAmbientArea(class APalPlayerCharacter* Player, class APalAmbientSoundAreaBase* AmbientSoundArea);
	void OnPlayerEnterSpotArea(class APalPlayerCharacter* Player, class APalSpotAreaBase* SpotArea);
	void OnPlayerEnterBaseCamp(class APalPlayerCharacter* Player, class UPalBaseCampModel* BaseCampModel);
	void OnPlayerEnterAmbientArea(class APalPlayerCharacter* Player, class APalAmbientSoundAreaBase* AmbientSoundArea);
	void OnEndOfEvent();
	void OnAkPostEventCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void InitializeSystem(class AActor* AkOwnerActor);
	void GetSoundPlayerLocation(struct FVector* OutLocation);
	void FadeOutByPlayingId(int32 PlayingID);
	void BeginPlay();
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalAutoDestroyActorHolder
class UPalAutoDestroyActorHolder : public UObject
{
public:
	TArray<TWeakObjectPtr<class AActor>>         HoldActors;                                        // 0x28(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalAutoDestroyActorHolder* GetDefaultObj();

	void AddActor(class AActor* TargetActor);
};

// 0x58 (0x2E8 - 0x290)
// Class Pal.PalBackWeaponBase
class APalBackWeaponBase : public AActor
{
public:
	bool                                         InFirstOrSecondSlot;                               // 0x290(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsEquipHand;                                       // 0x291(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12F1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        HiddenBackWeapon;                                  // 0x298(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalBackWeaponBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampAssignableObjectInterface
class IPalBaseCampAssignableObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBaseCampAssignableObjectInterface* GetDefaultObj();

	TScriptInterface<class IPalMapObjectModelInterface> ToMapObjectModel();
	enum class EPalBaseCampAssignType GetAssignType();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampWorkerDirectionBattleTypeUtility
class UPalBaseCampWorkerDirectionBattleTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerDirectionBattleTypeUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampModuleTransportItemRequirerInterface
class IPalBaseCampModuleTransportItemRequirerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBaseCampModuleTransportItemRequirerInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampModuleTransportItemDepotInterface
class IPalBaseCampModuleTransportItemDepotInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBaseCampModuleTransportItemDepotInterface* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class Pal.PalBaseCampEnemyObserver
class UPalBaseCampEnemyObserver : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnFirstAppearEnemyDelegate;                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEmptyEnemyDelegate;                              // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPassedTimeAfterEmptyEnemyDelegate;               // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 BaseCampId;                                        // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterHandle*> EnemyList;                                         // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	float                                        CampAreaRange;                                     // 0x78(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_133E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CampLocation;                                      // 0x80(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_133F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBaseCampEnemyObserver* GetDefaultObj();

	void OnEndPlayEnemy(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnDeadEnemy(const struct FPalDeadInfo& DeadInfo);
	bool IsBattleMode();
	void BaseCampEnemyDelegate__DelegateSignature();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampFunctionModuleBase
class UPalBaseCampFunctionModuleBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampFunctionModuleBase* GetDefaultObj();

};

// 0x158 (0x1C8 - 0x70)
// Class Pal.PalBaseCampManager
class UPalBaseCampManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_13AD[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WorkerEventClassDirectoryPath;                     // 0xA0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AController>               BaseCampAIControllerClass;                         // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WorkerCapacityNumDefault;                          // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WorkableBoundShapeName;                            // 0xB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DisplayCapacityNum;                                // 0xC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   WarningSanityValueTextId;                          // 0xD0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_13B9[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalBaseCampWorkerEventType, class UPalBaseCampWorkerEventBase*> WorkerEventMap;                                    // 0x130(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	class UDataTable*                            WorkerEventMasterDataTable;                        // 0x180(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            WorkerSickMasterDataTable;                         // 0x188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        WorkerEventTriggerTickMaxCount;                    // 0x190(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UPalAIActionBaseCampDefenseBase>> DefenseAIActionArray;                              // 0x198(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FPalBaseCampSignificanceInfo>  BaseCampSignificanceInfoList;                      // 0x1A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        UpdateIntervalSquaredDistanceFromPlayer;           // 0x1B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BaseCampTickInvokeMaxNumInOneTick;                 // 0x1C4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampManager* GetDefaultObj();

	bool TryGetModel(struct FGuid& BaseCampId, class UPalBaseCampModel** OutModel);
	void RequestDismantalDistanceBaseCamp(struct FGuid& InstanceId);
	void OnUpdateLocationWork_ServerInternal(class UPalWorkBase* Work);
	void OnUnregisteredWork_ServerInternal(class UPalWorkBase* Work);
	void OnRegisteredNewWork_ServerInternal(class UPalWorkBase* Work);
	void OnCreateMapObjectModelInServer(class UPalMapObjectModel* CreatedModel, struct FVector& Location);
	class UPalBaseCampModel* GetNearestBaseCamp(struct FVector& Location);
	class UPalBaseCampModel* GetInRangedBaseCamp(struct FVector& Location, float Margin);
	void GetBaseCampIds(TArray<struct FGuid>* OutIds);
};

// 0x50 (0x78 - 0x28)
// Class Pal.PalBaseCampMapObjectCollection
class UPalBaseCampMapObjectCollection : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnRegisteredMapObjectInstance;                     // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAvailableConcreteModelDelegate;                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotAvailableConcreteModelDelegate;               // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                         MapObjectInstanceIds;                              // 0x58(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13F0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBaseCampMapObjectCollection* GetDefaultObj();

	void OnNotAvailableConcreteModel(class UPalMapObjectConcreteModelBase* Model);
	void OnDisposeMapObject(class UPalMapObjectModel* Model, struct FPalMapObjectDisposeOptions& Options);
	void OnAvailableConcreteModel(class UPalMapObjectConcreteModelBase* Model);
	void MapObjectInstanceDelegate__DelegateSignature(class UPalMapObjectModel* Model);
	void MapObjectConcreteModelDelegate__DelegateSignature(class UPalMapObjectConcreteModelBase* Model);
};

// 0x1A8 (0x1D0 - 0x28)
// Class Pal.PalBaseCampModel
class UPalBaseCampModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateStatusDelegate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisposeDelegate;                                 // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_147A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ID;                                                // 0x58(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BaseCampName;                                      // 0x68(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalBaseCampState                 CurrentState;                                      // 0x78(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform;                                         // 0x80(0x60)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AreaRange;                                         // 0xE0(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 GroupIdBelongTo;                                   // 0xE4(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147D[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            FastTravelLocalTransform;                          // 0x100(0x60)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalBaseCampWorkerDirector*            WorkerDirector;                                    // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalBaseCampMapObjectCollection*       MapObjectCollection;                               // 0x168(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalBaseCampWorkCollection*            WorkCollection;                                    // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalBaseCampEnemyObserver*             EnemyObserver;                                     // 0x178(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPalBaseCampFunctionModuleBase*> ModuleArray;                                       // 0x180(0x10)(Edit, Net, ZeroConstructor, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGuid>                         PlayerUIdsExistsInsideInServer;                    // 0x190(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FGuid                                 OwnerMapObjectInstanceId;                          // 0x1A0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Level_InGuildProperty;                             // 0x1B0(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 LocationId;                                        // 0x1B4(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalBaseCampSignificanceInfo          SignificanceInfo;                                  // 0x1C4(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        ProgressTimeSinceLastTick;                         // 0x1CC(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampModel* GetDefaultObj();

	void UpdateLevel_ServerInternal(int32 PlayerId, int32 NewLevel);
	bool TryGetRandomPositionInside(struct FVector& Origin, float Radius, struct FVector* ToLocation);
	void SimpleDelegate__DelegateSignature(class UPalBaseCampModel* Model);
	void ReflectLevel_InGuildProperty_Internal(int32 NewLevel);
	void OnRep_Level_InGuildProperty(int32 OldLevel);
	void OnPassedTimeAfterEmptyEnemy();
	void OnFirstAppearEnemy();
	void OnDamageInCampActor(const struct FPalDamageResult& DamageResult);
	void OnAddNewWorker(class UPalIndividualCharacterHandle* AddCharacterHandle);
	class UPalBaseCampWorkCollection* GetWorkCollection();
	struct FTransform GetTransform();
	enum class EPalBaseCampState GetState();
	float GetRange();
	struct FGuid GetOwnerMapObjectInstanceId();
	int32 GetLevel();
	struct FGuid GetId();
	struct FGuid GetGroupIdBelongTo();
	class UPalBaseCampEnemyObserver* GetEnemyObserver();
	class FString GetBaseCampName();
	bool FindWorkAssignableObject(class UPalIndividualCharacterHandle* AssignIndividualHandle, struct FGuid& WorkId, bool bFixedAssign, class UPalWorkBase** FoundObject);
	bool FindNearestAssignableObject(class UPalIndividualCharacterHandle* AssignIndividualHandle, struct FTransform& Origin, float Range, bool bFixedAssign, TScriptInterface<class IPalBaseCampAssignableObjectInterface>* FoundObject);
	void BaseCampGuildPalStorageUpdateDelegate__DelegateSignature(class UPalBaseCampModel* Model, class UPalGuildPalStorage* GuildPalStorage);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampEnergyGeneratorInterface
class IPalBaseCampEnergyGeneratorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBaseCampEnergyGeneratorInterface* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalBaseCampModuleEnergy
class UPalBaseCampModuleEnergy : public UPalBaseCampFunctionModuleBase
{
public:
	TArray<class UPalBaseCampModuleEnergy_FunctionBase*> FunctionArray;                                     // 0x28(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleEnergy* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Pal.PalBaseCampModuleEnergy_FunctionBase
class UPalBaseCampModuleEnergy_FunctionBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateEnergyAmountDelegate;                      // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                         EnergyGeneratorConcreteModelIds;                   // 0x38(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGuid>                         EnergyConsumerConcreteModelIds;                    // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	enum class EPalBaseCampModuleEnergyState     CurrentState;                                      // 0x58(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1491[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProvideWaitRemainTime;                             // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleEnergy_FunctionBase* GetDefaultObj();

	void UpdateEnergyAmountDelegate__DelegateSignature(class UPalBaseCampModuleEnergy_FunctionBase* Function);
	void InvokeOnUpdateEnergyAmount(class UPalMapObjectGenerateEnergyModel* Model);
};

// 0x0 (0x60 - 0x60)
// Class Pal.PalBaseCampModuleEnergy_Electric
class UPalBaseCampModuleEnergy_Electric : public UPalBaseCampModuleEnergy_FunctionBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampModuleEnergy_Electric* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Pal.PalBaseCampModuleFacilityReservation
class UPalBaseCampModuleFacilityReservation : public UPalBaseCampFunctionModuleBase
{
public:
	TMap<enum class EPalMapObjectWorkerAvailableFacilityType, struct FPalBaseCampFacilityUsageInfoSet> FacilityUsageInfoSetMap;                           // 0x28(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<struct FPalBaseCampFacilityCountPair> FacilityCounts;                                    // 0x78(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleFacilityReservation* GetDefaultObj();

	void OnStartUseFacility_ServerInternal(class UPalMapObjectConcreteModelBase* Model, class UPalIndividualCharacterHandle* IndividualHandle);
	void OnNotAvailableMapObjectInServer(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void OnFinishUseFacility_ServerInternal(class UPalMapObjectConcreteModelBase* Model);
	void OnAvailableMapObjectInServer(class UPalMapObjectConcreteModelBase* ConcreteModel);
};

// 0x70 (0x98 - 0x28)
// Class Pal.PalBaseCampModuleItemStorage
class UPalBaseCampModuleItemStorage : public UPalBaseCampFunctionModuleBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateAnyItemContainerDelegate;                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPalBaseCampItemContainerInfo> ContainerInfos;                                    // 0x38(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FPalBaseCampItemExistsInfo> RepairKitItemExistsInfos;                          // 0x48(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleItemStorage* GetDefaultObj();

	void OnUpdateItemContainer(class UPalMapObjectItemContainerModule* ItemContainerModule);
	void OnNotAvailableConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void OnAvailableConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void MulticastReturnSelfAndUpdatedContainerDelegate__DelegateSignature(class UPalBaseCampModuleItemStorage* Self, class UPalItemContainer* UpdatedContainer);
	void GetContainerIds(TArray<struct FPalContainerId>* OutContainerIds);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalBaseCampModuleMedical
class UPalBaseCampModuleMedical : public UPalBaseCampFunctionModuleBase
{
public:
	TArray<struct FGuid>                         ReviveWorkIds;                                     // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleMedical* GetDefaultObj();

	void OnReviveCharacter_ServerInternal(class UPalIndividualCharacterParameter* IndividualParameter);
	void OnRemovedWorkerInServer(class UPalIndividualCharacterHandle* IndividualHandle);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalBaseCampModuleObjectMaintenance
class UPalBaseCampModuleObjectMaintenance : public UPalBaseCampFunctionModuleBase
{
public:
	TArray<class UPalBaseCampModuleObjectMaintenance_WayBase*> MaintenanceWayDOs;                                 // 0x28(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleObjectMaintenance* GetDefaultObj();

	void OnRegisteredMapObject_ServerInternal(class UPalMapObjectModel* Model);
	void OnGrantedEffectToMapObject_ServerInternal(class UPalMapObjectModel* Model, class UPalMapObjectModelEffectBase* Effect);
	void OnDisposeMapObject_ServerInternal(class UPalMapObjectModel* Model, struct FPalMapObjectDisposeOptions& Options);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampModuleObjectMaintenance_WayBase
class UPalBaseCampModuleObjectMaintenance_WayBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampModuleObjectMaintenance_WayBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampModuleObjectMaintenance_ExtinguishFire
class UPalBaseCampModuleObjectMaintenance_ExtinguishFire : public UPalBaseCampModuleObjectMaintenance_WayBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampModuleObjectMaintenance_ExtinguishFire* GetDefaultObj();

	void OnTriggerByReachAccumulateTriggerValue(class UPalMapObjectModelEffect_AccumulateTrigger* Effect_AccumulateTrigger, class UPalMapObjectModel* OwnerModel);
};

// 0x50 (0x78 - 0x28)
// Class Pal.PalBaseCampPassiveEffectBase
class UPalBaseCampPassiveEffectBase : public UObject
{
public:
	TMap<class FName, struct FPalBaseCampPassiveEffectMapObjectInfo> MapObjectInfoMapByMapObjectId;                     // 0x28(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampPassiveEffectBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampModulePassiveEffectWorkSpeedApplierInterface
class IPalBaseCampModulePassiveEffectWorkSpeedApplierInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBaseCampModulePassiveEffectWorkSpeedApplierInterface* GetDefaultObj();

};

// 0x118 (0x140 - 0x28)
// Class Pal.PalBaseCampModulePassiveEffect
class UPalBaseCampModulePassiveEffect : public UPalBaseCampFunctionModuleBase
{
public:
	struct FPalFastBaseCampPassiveEffectRepInfoArray RepInfoArray;                                      // 0x28(0x118)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampModulePassiveEffect* GetDefaultObj();

	void OnNotAvailableMapObjectInServer(class UPalMapObjectConcreteModelBase* Model);
	void OnAvailableMapObjectInServer(class UPalMapObjectConcreteModelBase* Model);
};

// 0x58 (0xD0 - 0x78)
// Class Pal.PalBaseCampPassiveEffect_WorkSuitability
class UPalBaseCampPassiveEffect_WorkSuitability : public UPalBaseCampPassiveEffectBase
{
public:
	uint8                                        Pad_1544[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalWorkSuitability, float>  WorkSpeedAdditionalRateMap;                        // 0x80(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampPassiveEffect_WorkSuitability* GetDefaultObj();

};

// 0x20 (0x98 - 0x78)
// Class Pal.PalBaseCampPassiveEffect_WorkHard
class UPalBaseCampPassiveEffect_WorkHard : public UPalBaseCampPassiveEffectBase
{
public:
	uint8                                        Pad_1552[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateWorkHardTypeDelegate;                      // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalBaseCampPassiveEffectWorkHardType WorkHardType;                                      // 0x90(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1554[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBaseCampPassiveEffect_WorkHard* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class UPalBaseCampPassiveEffect_WorkHard* Self);
	void OnRep_WorkHardType();
	enum class EPalBaseCampPassiveEffectWorkHardType GetWorkHardType();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampModuleResourceCollectorTargetInterface
class IPalBaseCampModuleResourceCollectorTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBaseCampModuleResourceCollectorTargetInterface* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Pal.PalBaseCampModuleResourceCollector
class UPalBaseCampModuleResourceCollector : public UPalBaseCampFunctionModuleBase
{
public:
	TMap<struct FGuid, struct FPalBaseCampModuleResourceCollectWorkInfo> MapObjectWorkInfoMap;                              // 0x28(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleResourceCollector* GetDefaultObj();

	void OnRegisteredMapObjectModel(class UPalMapObjectModel* Model);
	void OnRegisteredFoliageModel(TScriptInterface<class IPalMapObjectModelInterface> Model);
	void OnDestroyedMapObjectModel(class UPalMapObjectModel* Model, struct FPalMapObjectDisposeOptions& Options);
	void OnDestroyedFoliageInstance(class UPalFoliageInstance* Instance);
};

// 0xA0 (0xC8 - 0x28)
// Class Pal.PalBaseCampModuleTransportItemDirector
class UPalBaseCampModuleTransportItemDirector : public UPalBaseCampFunctionModuleBase
{
public:
	TMap<struct FGuid, struct FPalBaseCampModuleTransportItemStatus> TransportItemStatusMap;                            // 0x28(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, struct FPalBaseCampModuleTransportItemTarget> TransportTargetMap;                                // 0x78(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampModuleTransportItemDirector* GetDefaultObj();

	void OnUpdateMapObjectContainer(class UPalMapObjectItemContainerModule* ContainerModule);
	void OnUnassignWorkTransportItemTarget(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnUnassignWorkRequirement(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnNotAvailableMapObjectConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void OnAvailableMapObjectConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void OnAssignWorkTransportItemTarget(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnAssignWorkRequirement(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGameStateReplicatorBase
class UPalGameStateReplicatorBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalGameStateReplicatorBase* GetDefaultObj();

};

// 0x198 (0x1C0 - 0x28)
// Class Pal.PalBaseCampReplicator
class UPalBaseCampReplicator : public UPalGameStateReplicatorBase
{
public:
	struct FFastPalBaseCampRepInfoArray          RepInfoArray;                                      // 0x28(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1593[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBaseCampReplicator* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalBaseCampTaskChecker
class UPalBaseCampTaskChecker : public UObject
{
public:
	class UDataTable*                            TaskDataTable;                                     // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampTaskChecker* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampUtility
class UPalBaseCampUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampUtility* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class Pal.PalBaseCampWorkCollection
class UPalBaseCampWorkCollection : public UObject
{
public:
	uint8                                        Pad_15BA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUnassignWorkDelegate;                            // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 BaseCampId;                                        // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGuid>                         WorkIds;                                           // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FPalBaseCampWorkCollectionStashInfo> CannotMoveToWorkInfoMap;                           // 0x70(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkCollection* GetDefaultObj();

	void WorkAssignUpdateDelegate__DelegateSignature(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void WorkAssignRequirementDelegate__DelegateSignature(class UPalWorkBase* Work, struct FPalWorkAssignRequirementParameter& RequirementParameter);
	void OnUnassignWork_ServerInternal(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnRequiredAssign_ServerInternal(class UPalWorkBase* Work, struct FPalWorkAssignRequirementParameter& RequirementParameter);
};

// 0x108 (0x130 - 0x28)
// Class Pal.PalBaseCampWorkerDirector
class UPalBaseCampWorkerDirector : public UObject
{
public:
	uint8                                        Pad_15F4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAddNewWorkerDelegate;                            // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemovedWorkerInServerDelegate;                   // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 BaseCampId;                                        // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            SpawnTransform;                                    // 0x70(0x60)(Edit, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalIndividualCharacterContainer*      CharacterContainer;                                // 0xD0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalMapBaseCampWorkerOrderType    CurrentOrderType;                                  // 0xD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalBaseCampWorkerDirectionBattleType CurrentBattleType;                                 // 0xD9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15F6[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIndividualCharacterSlotsObserver*  SlotObserverForServer;                             // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalBaseCampWorkAssignRequest> RequiredAssignWorks;                               // 0xE8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPalInstanceID>                WaitingWorkerIndividualIds;                        // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        WorkerEventTickCount;                              // 0x108(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPalBaseCampWorkerTaskBase*>    WorkerTasks;                                       // 0x110(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15FC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalBaseCampWorkerDirectorState   State;                                             // 0x121(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15FD[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerDirector* GetDefaultObj();

	void RemovedWorkerDelegate__DelegateSignature(class UPalIndividualCharacterHandle* IndividualHandle);
	void OrderCommand(enum class EPalMapBaseCampWorkerOrderType OrderType);
	void OnUpdateOwnerBaseCampStatus_ServerInternal(class UPalBaseCampModel* OwnerBaseCamp);
	void OnSpawnedCharacterInServer(const struct FPalInstanceID& IndividualId);
	void OnRequiredAssignWork_ServerInternal(class UPalWorkBase* Work, struct FPalWorkAssignRequirementParameter& RequirementParameter);
	void OnRep_CharacterContainer();
	void OnRemovedNewCharacterInServer(struct FPalInstanceID& IndividualId);
	void OnReflectSlotCompleteInServer();
	void OnRaisedPhantomCharacterInServer(const struct FPalInstanceID& IndividualId, int32 PhantomId);
	void OnNotifiedUnassignWork_ServerInternal(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnDeadWorkerInServer_Internal(class APalCharacter* DeadCharacter);
	void OnDeadWorkerInServer(const struct FPalDeadInfo& Info);
	void OnChangeWorldSettings_ServerInternal(struct FPalOptionWorldSettings& PrevSettings, struct FPalOptionWorldSettings& NewSettings);
	void OnAddedNewCharacterInServer(struct FPalInstanceID& IndividualId);
	void GetCharacterHandleSlots(TArray<class UPalIndividualCharacterSlot*>* OutSlots);
	class UPalIndividualCharacterSlot* FindSlotByHandle(class UPalIndividualCharacterHandle* Handle);
	void AddNewWorkerDelegate__DelegateSignature(class UPalIndividualCharacterHandle* NewCharacter);
};

// 0x68 (0x90 - 0x28)
// Class Pal.PalBaseCampWorkerEventBase
class UPalBaseCampWorkerEventBase : public UObject
{
public:
	struct FPalDataTableRowName_BaseCampWorkerEventData MasterDataId;                                      // 0x28(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalLogType                       LogType;                                           // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1611[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalBaseCampWorkerEventMasterData     MasterData;                                        // 0x38(0x28)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UNiagaraSystem>         OverrideSleepFX;                                   // 0x60(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEventBase* GetDefaultObj();

	bool IsTriggerEventBySanity(float SanityValue);
	bool IsTriggerEventByCharacter(class APalCharacter* Character);
	class FString Debug_CreateTextTriggerEventSanity();
	class FText CreateNotifyMessageText(class FText& LocalizedFormatText, class APalCharacter* Character);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBaseCampWorkerEventUtility
class UPalBaseCampWorkerEventUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEventUtility* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_DestroyBuilding
class UPalBaseCampWorkerEvent_DestroyBuilding : public UPalBaseCampWorkerEventBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_DestroyBuilding* GetDefaultObj();

};

// 0x10 (0xA0 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_DodgeWork
class UPalBaseCampWorkerEvent_DodgeWork : public UPalBaseCampWorkerEventBase
{
public:
	TSubclassOf<class UPalAIActionBase>          ActionClass;                                       // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AIActionDuration;                                  // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TerminateSanityValueOver;                          // 0x9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_DodgeWork* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalBaseCampWorkerEvent_DodgeWork_Short
class UPalBaseCampWorkerEvent_DodgeWork_Short : public UPalBaseCampWorkerEvent_DodgeWork
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_DodgeWork_Short* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalBaseCampWorkerEvent_DodgeWork_Sleep
class UPalBaseCampWorkerEvent_DodgeWork_Sleep : public UPalBaseCampWorkerEvent_DodgeWork
{
public:
	int32                                        SleepMinTime;                                      // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SanityValueStillSleeping;                          // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatInterval                        WalkTime_BeforeSleep;                              // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_DodgeWork_Sleep* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_EatTooMuch
class UPalBaseCampWorkerEvent_EatTooMuch : public UPalBaseCampWorkerEventBase
{
public:
	float                                        RecoverSanityTo;                                   // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        EatMaxNum;                                         // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_EatTooMuch* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_Escape
class UPalBaseCampWorkerEvent_Escape : public UPalBaseCampWorkerEventBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_Escape* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_FightWithFriend
class UPalBaseCampWorkerEvent_FightWithFriend : public UPalBaseCampWorkerEventBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_FightWithFriend* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_OverworkDeath
class UPalBaseCampWorkerEvent_OverworkDeath : public UPalBaseCampWorkerEventBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_OverworkDeath* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_Sick
class UPalBaseCampWorkerEvent_Sick : public UPalBaseCampWorkerEventBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_Sick* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_Tantrum
class UPalBaseCampWorkerEvent_Tantrum : public UPalBaseCampWorkerEventBase
{
public:
	TSubclassOf<class UPalAIActionBaseCampTrantrum> ActionClass;                                       // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_Tantrum* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Pal.PalBaseCampWorkerEvent_TurnFoodBox
class UPalBaseCampWorkerEvent_TurnFoodBox : public UPalBaseCampWorkerEventBase
{
public:

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerEvent_TurnFoodBox* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalBaseCampWorkerTaskBase
class UPalBaseCampWorkerTaskBase : public UObject
{
public:
	struct FGuid                                 OwnerBaseCampId;                                   // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerTaskBase* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Pal.PalBaseCampWorkerTask_IgnitionTorchAtNight
class UPalBaseCampWorkerTask_IgnitionTorchAtNight : public UPalBaseCampWorkerTaskBase
{
public:
	TArray<struct FGuid>                         TorchInstanceIds;                                  // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBaseCampWorkerTask_IgnitionTorchAtNight* GetDefaultObj();

	void OnNotAvailableMapObjectInServer(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void OnAvailableMapObjectInServer(class UPalMapObjectConcreteModelBase* ConcreteModel);
};

// 0xA0 (0x110 - 0x70)
// Class Pal.PalBattleManager
class UPalBattleManager : public UPalWorldSubsystem
{
public:
	TMap<class AActor*, struct FActorArray>      EnemyListPerPlayer;                                // 0x70(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16AD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalNPCSpawnerBase>        DebugSpawnerClass;                                 // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFExclamationMarkDelegate;                        // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFQuestionMarkDelegate;                           // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFEmitSoundDelegate;                              // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFEmitSoundOnlyPalmiDelegate;                     // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalBattleManager* GetDefaultObj();

	bool TargetIsPlayerOrPlayersOtomoPal(class AActor* TargetCharacter);
	void SoundReactionStart(class APalCharacter* SelfCharacter);
	void SetUpPlayerMap(class AActor* Player);
	void RemovePlayerMap(class AActor* Player);
	void RemoveEnemyActor_AllPlayer(class AActor* Enemy, enum class EPalPlayerBattleFinishType FinishType);
	void RemoveEnemyActor(class AActor* Player, class AActor* Enemy, enum class EPalPlayerBattleFinishType FinishType);
	void QuestionMarkDelegate__DelegateSignature(class APalCharacter* TargetCharacter);
	bool IsBattleModeAnyPlayer();
	class AActor* GetRandomActor(const TArray<class AActor*>& TargetList);
	class AActor* GetNearestActor(const TArray<class AActor*>& TargetList, const struct FVector& Location);
	bool GetConflictEnemies(class AActor* Player, TArray<class AActor*>* OutEnemyes, bool IgnoreOtomoStopByBall);
	void GetAllPlayerAndOtomo_ForEnemySelf(const TArray<class AActor*>& TargetPlayers, TArray<class AActor*>* OutCharacters);
	void ExclamationMarkDelegate__DelegateSignature(class APalCharacter* TargetCharacter);
	void EnemyNearPlayerListUpdate(class AActor* Enemy, float Distance);
	void EmitSoundOnlyPalmiDelegate__DelegateSignature(int32 SoundLevel);
	void EmitSoundDelegate__DelegateSignature(int32 SoundRadius, const struct FVector& EmitLocation, class AActor* Emitter);
	void EmitSound(class FName SoundRowName, class AActor* Emitter, const struct FVector& EmitLocation, float VolumeRate);
	void AddEnemyActor_PlayerOrOtomo(class AActor* PlayerOrOtomo, class AActor* Enemy);
	void ActionMenaceStart(class APalCharacter* SelfCharacter);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalBiomeAreaTriggerBase
class APalBiomeAreaTriggerBase : public AActor
{
public:
	enum class EPalBiomeType                     BindBiomeType;                                     // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16D4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBiomeAreaTriggerBase* GetDefaultObj();

	void OnOverlap(class AActor* OtherActor, enum class EPalBiomeType BiomeType);
	void OnEndOverlap(class AActor* OtherActor, enum class EPalBiomeType BiomeType);
	enum class EPalBiomeType GetBiomeType();
};

// 0x18 (0xB8 - 0xA0)
// Class Pal.PalBiomeDetectComponent
class UPalBiomeDetectComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnChangedBiome;                                    // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_16E6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBiomeDetectComponent* GetDefaultObj();

	void OnChangedBiomeDelegate__DelegateSignature(class AActor* OverlapActor, class APalBiomeAreaTriggerBase* BiomeTriggerActor);
	void ChangeBiome(class APalBiomeAreaTriggerBase* BiomeTriggerActor);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBlueprintLibrary
class UPalBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalBlueprintLibrary* GetDefaultObj();

	bool NotEqual_PalInstanceIDPalInstanceID(const struct FPalInstanceID& A, const struct FPalInstanceID& B);
	bool EqualEqual_PalInstanceIDPalInstanceID(const struct FPalInstanceID& A, const struct FPalInstanceID& B);
};

// 0x18 (0x590 - 0x578)
// Class Pal.PalBodyPartsBoxComponent
class UPalBodyPartsBoxComponent : public UBoxComponent
{
public:
	enum class EPalBodyPartsType                 BodyPartsType;                                     // 0x578(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1715[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DefaultCollisionProfileName;                       // 0x57C(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BroadcastCollisionProfileName;                     // 0x584(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1717[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBodyPartsBoxComponent* GetDefaultObj();

	void OnRep_BroadcastCollisionProfileName();
};

// 0x20 (0x580 - 0x560)
// Class Pal.PalBodyPartsCapsuleComponent
class UPalBodyPartsCapsuleComponent : public UCapsuleComponent
{
public:
	enum class EPalBodyPartsType                 BodyPartsType;                                     // 0x560(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1723[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DefaultCollisionProfileName;                       // 0x564(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BroadcastCollisionProfileName;                     // 0x56C(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1725[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBodyPartsCapsuleComponent* GetDefaultObj();

	void OnRep_BroadcastCollisionProfileName();
};

// 0x20 (0x580 - 0x560)
// Class Pal.PalBodyPartsSphereComponent
class UPalBodyPartsSphereComponent : public USphereComponent
{
public:
	enum class EPalBodyPartsType                 BodyPartsType;                                     // 0x560(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DefaultCollisionProfileName;                       // 0x564(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BroadcastCollisionProfileName;                     // 0x56C(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_172E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBodyPartsSphereComponent* GetDefaultObj();

	void OnRep_BroadcastCollisionProfileName();
};

// 0xA8 (0x148 - 0xA0)
// Class Pal.PalBodyTemperatureComponent
class UPalBodyTemperatureComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnChangeTemperatureDelegate;                       // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeResistRankDelegate;                        // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeBodyStateDelegate;                         // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FName, struct FPalHeatSourceInfo> HeatSourceInfoMap;                                 // 0xD0(0x50)(NativeAccessSpecifierPrivate)
	int32                                        CurrentTemperature;                                // 0x120(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SelfKeyName;                                       // 0x124(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1790[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          SlipDamageTimer;                                   // 0x130(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentResistRank_Heat;                            // 0x138(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentResistRank_Cold;                            // 0x13C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalBodyTemperatureState          CurrentBodyState;                                  // 0x140(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1793[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBodyTemperatureComponent* GetDefaultObj();

	void RequestReSend_ToServer();
	void RemoveHeatSource(class FName UniqueName);
	void OnUpdatePassiveSkill(enum class EPalPassiveSkillEffectType EffectType, float Value);
	void OnUpdateEquipment(class UPalItemSlot* ItemSlot, enum class EPalPlayerEquipItemSlotType SlotType);
	void OnInitializedPlayer_ForClient(class APalCharacter* Character);
	void OnInitializedPlayer(class APalCharacter* Character);
	void OnEndPassiveSkill(enum class EPalPassiveSkillEffectType EffectType);
	void OnChangeTemperatureDelegate__DelegateSignature(int32 NextTemperature);
	void OnChangeResistRankDelegate__DelegateSignature(int32 NextResistHeat, int32 NextResistCold);
	void OnChangeHour();
	void OnChangeBodyStateDelegate__DelegateSignature(enum class EPalBodyTemperatureState BodyState);
	void CallOnChangeTemperature(int32 Next);
	void CallOnChangeResistRank(int32 Heat, int32 Cold);
	void CallOnChangeBodyState(enum class EPalBodyTemperatureState State);
	void CallAllDelegate();
	void AddHeatSourceInfo(class FName UniqueName, const struct FPalHeatSourceInfo& HeatInfo);
	void AddHeatSource(class FName UniqueName, int32 HeatLevel);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalBoneInfo
class UPalBoneInfo : public UObject
{
public:
	float                                        Length;                                            // 0x28(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x2C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalBoneInfo* GetDefaultObj();

};

// 0x2F8 (0x320 - 0x28)
// Class Pal.PalBossBattleInstanceModel
class UPalBossBattleInstanceModel : public UObject
{
public:
	uint8                                        Pad_17BB[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            FrontWarpPointTransform;                           // 0x80(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                   RepFrontWarpPointtLocation;                        // 0xE0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TopWarpPointTransform;                             // 0x100(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            StartPointTransform;                               // 0x160(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            DeadItemDropTransform;                             // 0x1C0(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalStageInstanceId                   StageInstanceId;                                   // 0x220(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalBossType                      BossType;                                          // 0x234(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APalCutsceneActor>       IntroCutsceneActor;                                // 0x238(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ALevelInstance>          BossRoomLevelInstanceAsset;                        // 0x268(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          BGMAudioEvent;                                     // 0x298(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Level;                                             // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CombatTimeMax;                                     // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBossBattleLevelInstance*           BossBattleLevelInstance;                           // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBossTower*                         BossTower;                                         // 0x2D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalBossBattleState               BossBattleState;                                   // 0x2E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APalPlayerCharacter*>           EntryPlayers;                                      // 0x2E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class APalPlayerCharacter*>           WonPlayers;                                        // 0x2F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FDateTime                             CombatTimeLimit;                                   // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalBossBattleSequencer*               LocalBattleSequencer;                              // 0x310(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataLayerAsset*                       ReservedDataLayerAsset;                            // 0x318(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBossBattleInstanceModel* GetDefaultObj();

	void OnUpdateCombatTimeLimit();
	void OnUpdateBossBattleState();
	void OnRep_EntryPlayers();
	void OnRep_CombatTimeLimit();
	void OnRep_BossBattleState();
	void OnRep_BossBattleLevelInstance();
	void OnChangeEntryPlayerDelegate__DelegateSignature(const TArray<class APalPlayerCharacter*>& EntryPlayers);
	void OnChangeCombatTimeLimitDelegate__DelegateSignature(const struct FDateTime& CombatTimeLimit);
	void OnChangeBossBattleStateDelegate__DelegateSignature(enum class EPalBossBattleState BossBattleState);
	bool IsLevelInstanceLoaded();
	int32 GetLevel();
	enum class EPalBossType GetBossType();
	enum class EPalBossBattleState GetBossBattleState();
};

// 0x18 (0x338 - 0x320)
// Class Pal.PalBossBattleLevelInstance
class APalBossBattleLevelInstance : public ALevelInstance
{
public:
	FMulticastInlineDelegateProperty_            OnBossSpawnedDelegate;                             // 0x320(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsLoaded;                                         // 0x330(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17F1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBossBattleLevelInstance* GetDefaultObj();

	void SpawnBossSpawner(enum class EPalBossType BossType, int32 JoinPlayerNum);
	void ResetBossLocation();
	void OnBossSpawnedDelegate__DelegateSignature(class APalCharacter* SpawnedCharacter);
	struct FTransform GetSequencerTransform();
	struct FTransform GetPlayerStartTransform();
	bool CheckLevelLoaded();
	void BossSpawned(class APalCharacter* SpawnedCharacter);
};

// 0x1A0 (0x210 - 0x70)
// Class Pal.PalBossBattleManager
class UPalBossBattleManager : public UPalWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnLocalBossBattleSuccessDelegate;                  // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCombatStartUIDelegate;                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCombatEndUIAction;                               // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        MAX_TIME_LIMIT;                                    // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlayerRespawnTimeLimit;                            // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BGMFadeDuration;                                   // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_189F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, float>                           MultiPlayerBossHPMap;                              // 0xB0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalBossBattleSequencer>   BossBattleSequencerClass;                          // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EPalBossType, struct FPalBossBattleStaticInfo> BossInfoMap;                                       // 0x108(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<enum class EPalBossType, class UPalBossBattleInstanceModel*> InstanceModelMap;                                  // 0x158(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EPalBossType, class UPalBossBattleSequencer*> BossBattleSequencerMap;                            // 0x1A8(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FGuid                                 GroupGuid;                                         // 0x1F8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalBossType                      DisableSkyBossType_LocalPlayer;                    // 0x208(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBossBattleManager* GetDefaultObj();

	void UnlockAchievement(enum class EPalBossType BossType);
	void UnloadBossBattle_ServerInternal(enum class EPalBossType BossType);
	void OnLocalPlayerBossBattleSuccessDelegate__DelegateSignature(class APalPlayerCharacter* LocalJoinedPlayer, enum class EPalBossType BossType);
	void OnCombatStartUIDelegate__DelegateSignature(class APalBossTower* BossTower);
	void OnCombatEndUIActionDelegate__DelegateSignature(enum class EPalBossBattleCombatResult CombatResult);
	void OnBossBattleCombatStart(enum class EPalBossType BossType);
	void LoadAsyncBossBattle_ServerInternal(enum class EPalBossType BossType);
	struct FTransform GetTopWarpPointTransform(enum class EPalBossType BossType);
	struct FPalBossBattleStaticInfo GetStaticInfo(enum class EPalBossType BossType);
	struct FTransform GetPlayerSpawnTransformForMultiPlayer(int32 Index, const struct FVector& Location, const struct FRotator& Rotate, float Offset);
	int32 GetMaxJoinablePlayerNum();
	bool GetIsServer();
	float GetBossHPMultiPlayerRate(int32 JoinedPlayerNum);
	int32 GetBossAchievementIndex(enum class EPalBossType BossType);
	float GetBattleTimeLimit();
	void EmptyInstanceCleanup();
	void DisableSkyCreator(bool Disable);
	bool CanStartBossBattle(enum class EPalBossType BossType);
	void BossBattleExit(enum class EPalBossType BossType, class APalPlayerCharacter* ExitPlayer);
	void BossBattleEntryCancel(enum class EPalBossType BossType, class APalPlayerCharacter* EntryPlayer);
	void BossBattleEntry(enum class EPalBossType BossType, class APalPlayerCharacter* EntryPlayer);
	void AddGroupCharacter(class UPalIndividualCharacterHandle* AddIndividualHandle);
};

// 0x0 (0x28 - 0x28)
// Class Pal.BossBattleLevelSequenceRootInterface
class IBossBattleLevelSequenceRootInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IBossBattleLevelSequenceRootInterface* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Pal.PalBossBattleSequenceBase
class UPalBossBattleSequenceBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnSequenceFinishDelegate;                          // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalBossBattleSequenceType        NextSequenceType;                                  // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18CB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBossBattleSequenceBase* GetDefaultObj();

	void TickSequence(float DeltaTime);
	void SetupLevelSequenceActor(class ALevelSequenceActor* LevelSequenceActor, class ULevelSequence* LevelSequence, class ALevelInstance* LevelInstance);
	void SequenceFinishDelegate__DelegateSignature(bool IsSuccess);
	void SelfFinish_ForBP();
	void OnBeginSequence();
	void NoticeSequenceEnd_ToServer();
	bool IsServer();
	class UPalBossBattleSequencer* GetOuterSequencer();
	class APalPlayerCharacter* GetJoinedLocalControlPlayer();
	class AActor* GetBossRoomSequenceRootActor(class ALevelInstance* LevelInstance);
	struct FPalBossBattleStaticInfo GetBossBattleStaticInfo();
	void FinishSequence(bool IsSuccess);
};

// 0x100 (0x128 - 0x28)
// Class Pal.PalBossBattleSequencer
class UPalBossBattleSequencer : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnCombatStartDelegate;                             // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        RemainBattleTimer;                                 // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBattleTimerCountDown;                            // 0x3C(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalBossBattleCombatResult        CombatResult;                                      // 0x3D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1943[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalBossBattleSequenceType, TSubclassOf<class UPalBossBattleSequenceBase>> SequenceClassMap;                                  // 0x40(0x50)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<enum class EPalBossBattleSequenceType, class UPalBossBattleSequenceBase*> SequenceMap;                                       // 0x90(0x50)(Transient, NativeAccessSpecifierPrivate)
	class UPalBossBattleSequenceBase*            CurrentSequence;                                   // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalBossBattleInstanceModel*           BossBattleInstanceModel;                           // 0xE8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APalPlayerCharacter*>           InRoomPlayers;                                     // 0xF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class APalPlayerCharacter*>           SequenceEndPlayers;                                // 0x100(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1948[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalBossType                      SelfBossType;                                      // 0x111(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1949[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APalCharacter*                         BossCharacter;                                     // 0x118(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PlayingBGMId;                                      // 0x120(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsClientOnly;                                     // 0x124(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_194D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBossBattleSequencer* GetDefaultObj();

	void Tick_ForBP(float DeltaTime);
	void StopBGM();
	void SetPlayerMoveDisable(class APalPlayerCharacter* Player, bool Disable);
	void SetMutekiAllPlayer(bool bIsMuteki);
	void SetBossCharacter(class APalCharacter* BossActor);
	void SetAllPlayerMoveDisable(bool Disable);
	void RemovePlayerFromInRoomList(class APalPlayerCharacter* Player);
	void RemoveDyingStatus();
	void PlayBGM(class UAkAudioEvent* BGMAudioEvent);
	void OnPlayerRespawn(class APalPlayerCharacter* Player);
	void OnPlayerDeadStopBGM(class APalPlayerCharacter* PlayerCharacter);
	void OnOpeningEnd(bool Success);
	void OnEndingEnd(bool Success);
	void OnDyingDeadEndDelegate(class APalPlayerCharacter* PlayerCharacter);
	void OnCompletedEnd(bool Success);
	void OnCombatFinish(enum class EPalBossBattleCombatResult InCombatResult);
	void OnCombatEnd(bool Success);
	void NoticeClientCombatResult();
	void KillAllPlayer();
	bool IsClientOnly();
	bool IsAllPlayerDead();
	TArray<class APalPlayerCharacter*> GetSequencePlayers();
	float GetRemainTimeSecond();
	class APalPlayerCharacter* GetJoinedLocalPlayer();
	class APalPlayerCharacter* GetJoinedAndServerLocalPlayer();
	TArray<class APalPlayerCharacter*> GetInRoomPlayers();
	enum class EPalBossType GetBossType();
	class APalCharacter* GetBossCharacter();
	class UPalBossBattleInstanceModel* GetBossBattleInstanceModel();
	TArray<class APalPlayerCharacter*> GetAliveOrDyingPlayers();
	void FullRecoveryHPAllPlayer();
	void ForceRespawnPlayer();
	class APalPlayerCharacter* FindFirstCombatTargetForBossAI();
	void BossBattleCombatStart__DelegateSignature(enum class EPalBossType BossType);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalHUDDispatchParameterBase
class UPalHUDDispatchParameterBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnClose;                                           // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameterBase* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Pal.PalWaitInfoWorldHUDParameter
class UPalWaitInfoWorldHUDParameter : public UPalHUDDispatchParameterBase
{
public:
	class APalBossTower*                         BossTower;                                         // 0x38(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsWaiting;                                         // 0x40(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1961[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWaitInfoWorldHUDParameter* GetDefaultObj();

};

// 0x38 (0x408 - 0x3D0)
// Class Pal.PalUserWidget
class UPalUserWidget : public UPalActivatableWidget
{
public:
	bool                                         bSyncPlayerInventory;                              // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1987[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHUDDispatchParameterBase*          Param;                                             // 0x3E8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1989[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalUIActionBindData>          BindedActionHandles;                               // 0x3F8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUserWidget* GetDefaultObj();

	void VisibilityOverride(enum class ESlateVisibility ChangedVisibility);
	void UnregisterActionBinding(struct FPalUIActionBindData& BindingData);
	void RequestInventorySync(bool bOpen);
	struct FPalUIActionBindData RegisterActionBinding_NotConcume(class FName& ActionName, bool IsDisplayActionBar, enum class EInputEvent InputType, FDelegateProperty_ Callback);
	struct FPalUIActionBindData RegisterActionBinding(class FName& ActionName, bool IsDisplayActionBar, enum class EInputEvent InputType, FDelegateProperty_ Callback);
	struct FGuid Push(TSubclassOf<class UPalUserWidgetOverlayUI> WidgetClass, class UPalHUDDispatchParameterBase* Parameter);
	void PlayAkSound(class UAkAudioEvent* AkEvent);
	void OnSetup_AfterCreatedPlayer();
	void OnSetup();
	void OnClosed();
	bool IsSameWidget(struct FGuid& CheckID);
	class UPalHUDDispatchParameterBase* GetParam();
	class UUserWidget* FindParentWidget(TSubclassOf<class UUserWidget> Class);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUserWidgetWorldHUD
class UPalUserWidgetWorldHUD : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUserWidgetWorldHUD* GetDefaultObj();

	void RemoveSelf();
	void OnRequestRemove();
};

// 0x18 (0x420 - 0x408)
// Class Pal.PalBossEntryWaitInfoHUD
class UPalBossEntryWaitInfoHUD : public UPalUserWidgetWorldHUD
{
public:
	bool                                         EnableCountDown;                                   // 0x408(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1994[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APalBossTower*                         BossTower;                                         // 0x410(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             TimeLimitDate;                                     // 0x418(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalBossEntryWaitInfoHUD* GetDefaultObj();

	void UpdateWaitInfo(bool bIsCountDown, const struct FDateTime& TimeLimit);
	void UpdateCountDown();
	void OnCloseHUD();
};

// 0x68 (0x2F8 - 0x290)
// Class Pal.PalBossTower
class APalBossTower : public AActor
{
public:
	uint8                                        Pad_19D4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChangeBossTowerEntryWaitUI;                      // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalBossType                      BossType;                                          // 0x2A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 EntryWaitInfoHUDId;                                // 0x2AC(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalBossBattleInstanceModel*           InstanceModel;                                     // 0x2C0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDateTime                             CombatTimeLimit;                                   // 0x2C8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 LocationInstanceId;                                // 0x2D0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APalPlayerCharacter*>           InDoorPlayerList;                                  // 0x2E0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          TimerHandle;                                       // 0x2F0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalBossTower* GetDefaultObj();

	bool WriteBossDefeatRecord_ServerInternal(class APalPlayerCharacter* TargetPlayer);
	void ShowWaitInfo(const struct FVector& TargetLocation, const struct FVector& DisplayOffset, bool IsWaiting);
	void RequestBossBattleStart(class APalPlayerCharacter* Player);
	void RequestBossBattleEntry(class APalPlayerCharacter* Player);
	void RemoveInDoorPlayer(class APalPlayerCharacter* Player);
	void OnRep_InstanceModel();
	void OnChangeEntryPlayer(const TArray<class APalPlayerCharacter*>& EntryPlayers);
	void OnChangeCombatTimeLimit(const struct FDateTime& NewCombatTimeLimit);
	void OnChangeBossTowerEntryWaitUI__DelegateSignature(bool bIsCountDown, const struct FDateTime& TimeLimit);
	void OnChangeBossBattleStateBP(enum class EPalBossBattleState NewState);
	void OnChangeBossBattleState(enum class EPalBossBattleState NewBossBattleState);
	bool IsEntered(class APalPlayerCharacter* Player);
	struct FTransform GetTopWarpPoint();
	TArray<class APalPlayerCharacter*> GetStartablePlayers();
	struct FTransform GetFrontWarpPoint();
	TArray<class APalPlayerCharacter*> GetForceWarpTargets();
	struct FTransform GetDeadItemDropPoint();
	class FName GetBossBattleRowName();
	void CloseWaitInfo();
	void AddInDoorPlayer(class APalPlayerCharacter* Player);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalBotBuilderLocationBase
class APalBotBuilderLocationBase : public AActor
{
public:
	int32                                        BuilderIndex;                                      // 0x290(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsBuilded;                                        // 0x294(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19E9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBotBuilderLocationBase* GetDefaultObj();

};

// 0x20 (0x2B0 - 0x290)
// Class Pal.PalBoxSpawnerPlacementTool
class APalBoxSpawnerPlacementTool : public AActor
{
public:
	struct FVector                               BoxExtent;                                         // 0x290(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BoxComp;                                           // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalBoxSpawnerPlacementTool* GetDefaultObj();

};

// 0x60 (0x100 - 0xA0)
// Class Pal.PalBuilderComponent
class UPalBuilderComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePossessMaterials;                          // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartBuildingMode_Local;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndBuildingMode_Local;                           // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        InstallDistanceNormalFromOwner;                    // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstallableRange;                                  // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      OwnerCamera;                                       // 0xD8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalBuildObjectInstallChecker*         InstallChecker;                                    // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalDismantleObjectChecker*            DismantleChecker;                                  // 0xE8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A38[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuilderComponent* GetDefaultObj();

	void RequestBuild_ToServer(class FName BuildObjectId, struct FVector& Location, struct FQuat& Rotation, TArray<struct FPalNetArchive>& ExtraParameterArchives, const struct FPalBuildRequestDebugParameter& DebugParameter);
	void ReceiveBuildResult_ToRequestClient(enum class EPalMapObjectOperationResult Result);
	void OnExitBaseCamp(class UPalBaseCampModel* BaseCampModel);
	void OnEnterBaseCamp(class UPalBaseCampModel* BaseCampModel);
	void MulticastReturnSelfDelegate__DelegateSignature(class UPalBuilderComponent* Self);
	bool IsInstallAtReticle();
	bool IsExistsMaterialForBuildObject(struct FPalBuildObjectData& BuildObjectData);
	bool IsExecuting();
	bool IsEnableDismantle();
	enum class EPalMapObjectOperationResult IsEnableBuild();
	class APalBuildObject* GetDismantleTargetObject();
	void CollectItemInfoEnableToUseMaterial(const TArray<class FName>& StaticItemIds, TArray<struct FPalStaticItemIdAndNum>* OutItemInfos);
};

// 0x110 (0x3A0 - 0x290)
// Class Pal.PalMapObject
class APalMapObject : public AActor
{
public:
	uint8                                        Pad_1A76[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnNotifiedShowStatusHUDDelegate;                   // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifiedShowBuildProgressHUDDelegate;            // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetConcreteModelDelegate;                        // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocationOffset;                               // 0x2D0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalMapObjectConcreteModelBase> ConcreteModelClass;                                // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TScriptInterface<class IPalInteractiveObjectComponentInterface>> InteractComps;                                     // 0x2F0(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UPalMapObjectDamageReactionComponent*  DamageReaction;                                    // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMapObjectVisualEffectComponent*    VisualEffect;                                      // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnableIfOverlapped;                            // 0x310(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLevelSpawnObject;                                 // 0x311(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A7A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AllowOverlapCollisionPresetNames;                  // 0x318(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bSpawnSlipAboveIfAnyOverlap;                       // 0x328(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShakeOnDamaged;                                   // 0x329(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalMapObjectDestroyFXType        DestroyFXType;                                     // 0x32A(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowOutlineInTargettingReticle;                   // 0x32B(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowOutlineNearPlayer;                            // 0x32C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoDestroyByOverlapSpawning;                     // 0x32D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInDoorObject;                                     // 0x32E(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBaseObject;                                       // 0x32F(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 HPHUDId;                                           // 0x330(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalMapObjectDamagableType        DamagableType;                                     // 0x340(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A82[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ModelInstanceId;                                   // 0x344(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalMapObjectModel*                    MapObjectModel;                                    // 0x358(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnmanagedInLocal;                                 // 0x360(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A85[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUserWidgetWorldHUD>    IndicatorWidgetClass;                              // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPalMapObjectMeshVisibleData>  MeshVisibleDataSet;                                // 0x370(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	enum class EPalMapObjectChangeMeshFXType     ChangeMeshFXType;                                  // 0x380(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 OpenWidgetId;                                      // 0x384(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWorkLocationGroupRaycastStartOffsetOrigin;        // 0x394(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldPlayDestroyFX;                              // 0x395(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A8C[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalMapObject* GetDefaultObj();

	void TryGetConcreteModel(enum class EPalMapObjectGetModelOutPinType* OutputPin, class UPalMapObjectConcreteModelBase** ConcreteModel);
	void ToggleBuildProgressHUD__DelegateSignature(enum class EPalHUDDisplayType DisplayType);
	void SetIgnoreSave_ServerInternal(bool bIgnore);
	void ReturnSelf__DelegateSignature(class APalMapObject* Self, enum class EPalHUDDisplayType DisplayType);
	void OnUpdatedEnableTickByModel(class UPalMapObjectModel* Model);
	void OnRep_MapObjectModel();
	void OnInteractEnd(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnInteractBegin(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnDisposeModel_ServerInternal(class UPalMapObjectModel* DisposeModel, struct FPalMapObjectDisposeOptions& Options);
	void OnDamaged(class UPalMapObjectModel* TargetModel, struct FPalDamageInfo& DamageInfo);
	void OnCloseParameter(class UPalHUDDispatchParameterBase* Parameter);
	class UPalMapObjectModel* GetModel();
	struct FGuid GetGroupIdBelongTo();
	void DisposeSelf_ServerInternal();
	void CallOrRegisterOnSetConcreteModel(FDelegateProperty_ Delegate);
	void BroadcastShouldPlayDestroyFX();
	void BP_OnSetConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
};

// 0x1D0 (0x570 - 0x3A0)
// Class Pal.PalBuildObject
class APalBuildObject : public APalMapObject
{
public:
	uint8                                        Pad_1ADD[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChangeState;                                     // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ADF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalBuildObjectInstallStrategy    InstallStrategy;                                   // 0x3E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InstallCapacitySlopeAngle;                         // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InstallCapacitySinkRateByHeight;                   // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalBuildObjectVisualControlComponent* VisualCtrl;                                        // 0x3F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BuildObjectId;                                     // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShapeComponent*                       OverlapCheckCollision;                             // 0x408(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FComponentReference                   OverlapCheckCollisionRef;                          // 0x410(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FBox                                  LocalBounds;                                       // 0x438(0x38)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UPalBuildObjectOverlapChecker*         OverlapChecker;                                    // 0x470(0x8)(Edit, ZeroConstructor, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMeshComponent*>                AllMeshes;                                         // 0x478(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           VirtualMeshCollisions;                             // 0x488(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	enum class EPalBuildObjectState              CurrentState;                                      // 0x498(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 WorldHUDId;                                        // 0x49C(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 buildProgressWorldHUDId;                           // 0x4AC(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WorldHUDDisplayOffset;                             // 0x4C0(0x18)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WorldHUDDisplayRange;                              // 0x4D8(0x4)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               buildProgressHUDDisplayOffset;                     // 0x4E0(0x18)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             buildProgressHUDDisplayOffsetScreen;               // 0x4F8(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        buildProgressHUDDisplayRange;                      // 0x508(0x4)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AEE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         BuildCompleteSEOverride;                           // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildProgressVisualRate;                           // 0x518(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDismantleTargetInLocal;                           // 0x51C(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AF4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UPrimitiveComponent*, struct FPalBuildObjectMeshDefaultSetting> DefaultMeshSettingMap;                             // 0x520(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalBuildObject* GetDefaultObj();

	void PlayBuildCompleteFX_ToALL();
	void OnUpdateHp(class UPalMapObjectModel* DamagedModel);
	void OnUpdateBuildWorkAmount(class UPalWorkProgress* WorkProgress);
	void OnTriggerInteractBuilding(class AActor* OtherActor, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnTickRepairCompleteAnimation();
	void OnTickBuildCompleteAnimation();
	void OnStartTriggerInteractBuilding(class AActor* OtherActor, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnRep_CurrentState();
	void OnRep_BuildProgressVisualRate();
	void OnNotAvailable_BlueprintImpl();
	void OnFinishBuildWork_ServerInternal(class UPalBuildProcess* BuildProcess);
	void OnEndTriggerInteractBuilding(class AActor* OtherActor, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnDamage(class UPalMapObjectModel* DamagedModel, struct FPalDamageInfo& DamageInfo);
	void OnChangeStateDelegate__DelegateSignature(enum class EPalBuildObjectState State);
	void OnBeginInteractBuilding(class AActor* OtherActor, TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject);
	void OnAvailable_BlueprintImpl();
	bool IsAvailable();
	class UShapeComponent* GetBuildWorkableBoundsShape();
};

// 0x0 (0x570 - 0x570)
// Class Pal.PalBuildObjectBaseCampPoint
class APalBuildObjectBaseCampPoint : public APalBuildObject
{
public:

	static class UClass* StaticClass();
	static class APalBuildObjectBaseCampPoint* GetDefaultObj();

	struct FTransform GetWorkerSpawnLocalTransform();
	struct FTransform GetFastTravelLocalTransform();
};

// 0x50 (0x5C0 - 0x570)
// Class Pal.PalBuildObjectBreedFarm
class APalBuildObjectBreedFarm : public APalBuildObject
{
public:
	struct FComponentReference                   ChestInteractRef;                                  // 0x570(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FComponentReference                   WalkAroundVolumeRef;                               // 0x598(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalBuildObjectBreedFarm* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Pal.PalBuildObjectDataMap
class UPalBuildObjectDataMap : public UObject
{
public:
	TMap<class FName, struct FPalBuildObjectData> BuildObjectDataIdMap;                              // 0x28(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B1E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectDataMap* GetDefaultObj();

	struct FPalBuildObjectData GetByMapObjectId(class FName MapObjectId);
	struct FPalBuildObjectData GetById(class FName ID);
	void GetBuildObjectDataMapForType(enum class EPalBuildObjectTypeA TypeA, TArray<struct FPalBuildObjectData>* OutArray);
	void GetBuildObjectDataArrayForTypeAByTypeB(enum class EPalBuildObjectTypeA TypeA, TArray<struct FPalBuildObjectDataSetTypeB>* OutArray);
};

// 0x18 (0x588 - 0x570)
// Class Pal.PalBuildObjectDefenseBase
class APalBuildObjectDefenseBase : public APalBuildObject
{
public:
	TSubclassOf<class UPalAIActionBaseCampDefenseBase> DefenseAIActionClass;                              // 0x570(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         BulletItemId;                                      // 0x578(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MagazineSize;                                      // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B23[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBuildObjectDefenseBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBuildObjectDataUtility
class UPalBuildObjectDataUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalBuildObjectDataUtility* GetDefaultObj();

	int32 ToSortPriorityTypeB(enum class EPalBuildObjectTypeB TypeB);
	int32 ToSortPriorityTypeA(enum class EPalBuildObjectTypeA TypeA);
	int32 ToInt(enum class EPalBuildObjectTypeA TypeA);
	enum class EPalBuildObjectTypeA ToBuildObjectTypeA(int32 Value);
	void MaterialInfos(struct FPalBuildObjectData& BuildObjectData, TArray<struct FPalItemRecipeMaterialInfo>* MaterialInfos);
};

// 0x28 (0x598 - 0x570)
// Class Pal.PalBuildObjectFarmBlockV2
class APalBuildObjectFarmBlockV2 : public APalBuildObject
{
public:
	struct FPalDataTableRowName_FarmCropData     CropDataId;                                        // 0x570(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        GrowupFX;                                          // 0x578(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalMapObjectFarmCrop*                 CropActor;                                         // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B47[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBuildObjectFarmBlockV2* GetDefaultObj();

	void OnUpdateState_ServerInternal(enum class EPalFarmCropState LastCropState, enum class EPalFarmCropState NextCropState);
};

// 0x10 (0x580 - 0x570)
// Class Pal.PalBuildObjectGenerateEnergy
class APalBuildObjectGenerateEnergy : public APalBuildObject
{
public:
	enum class EPalEnergyType                    GenerateEnergyType;                                // 0x570(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B4D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GenerateEnergyRateByWorker;                        // 0x574(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxEnergyStorage;                                  // 0x578(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B4E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBuildObjectGenerateEnergy* GetDefaultObj();

	void OnUpdateWorkAssigned_ServerInternal(class UPalWorkBase* Work);
	void OnStartGenerate();
	void OnEndGenerate();
	void BroadcastStartGenerate();
	void BroadcastEndGenerate();
};

// 0x20 (0x2B0 - 0x290)
// Class Pal.PalBuildObjectInstallChecker
class APalBuildObjectInstallChecker : public AActor
{
public:
	class APalBuildObject*                       TargetBuildObject;                                 // 0x290(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UShapeComponent*                       OverlapCheckComponent;                             // 0x298(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalBuildObjectOverlapChecker*         OverlapChecker;                                    // 0x2A0(0x8)(Edit, ZeroConstructor, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalBuildObjectInstallStrategyBase*    InstallStrategy;                                   // 0x2A8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalBuildObjectInstallChecker* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalBuildObjectInstallStrategyBase
class UPalBuildObjectInstallStrategyBase : public UObject
{
public:
	class APalBuildObject*                       TargetBuildObject;                                 // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B55[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyBase* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyAttachToObjectBase
class UPalBuildObjectInstallStrategyAttachToObjectBase : public UPalBuildObjectInstallStrategyBase
{
public:

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyAttachToObjectBase* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyAttachToCeil
class UPalBuildObjectInstallStrategyAttachToCeil : public UPalBuildObjectInstallStrategyAttachToObjectBase
{
public:

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyAttachToCeil* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Pal.PalMapObjectModelConnectorBase
class UPalMapObjectModelConnectorBase : public UObject
{
public:
	int32                                        SupportedLevel;                                    // 0x28(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B59[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalMapObjectModelConnectInfo         ConnectInfoAnyPlace;                               // 0x30(0x18)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorBase* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Pal.PalMapObjectModelConnectorAttach
class UPalMapObjectModelConnectorAttach : public UPalMapObjectModelConnectorBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorAttach* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Pal.PalMapObjectModelConnectorAttachToCeil
class UPalMapObjectModelConnectorAttachToCeil : public UPalMapObjectModelConnectorAttach
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorAttachToCeil* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyAttachToWall
class UPalBuildObjectInstallStrategyAttachToWall : public UPalBuildObjectInstallStrategyAttachToObjectBase
{
public:

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyAttachToWall* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Pal.PalMapObjectModelConnectorAttachToWall
class UPalMapObjectModelConnectorAttachToWall : public UPalMapObjectModelConnectorAttach
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorAttachToWall* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalBuildObjectInstallStrategySinkableNormal
class UPalBuildObjectInstallStrategySinkableNormal : public UPalBuildObjectInstallStrategyBase
{
public:

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategySinkableNormal* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyBaseCampPoint
class UPalBuildObjectInstallStrategyBaseCampPoint : public UPalBuildObjectInstallStrategySinkableNormal
{
public:
	class APalBuildObjectBaseCampPoint*          TargetBuildObjectCache;                            // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyBaseCampPoint* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyFloor
class UPalBuildObjectInstallStrategyFloor : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B60[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyFloor* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyFoundation
class UPalBuildObjectInstallStrategyFoundation : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B62[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyFoundation* GetDefaultObj();

};

// 0x60 (0xA8 - 0x48)
// Class Pal.PalMapObjectModelConnectorFoundation
class UPalMapObjectModelConnectorFoundation : public UPalMapObjectModelConnectorBase
{
public:
	struct FPalMapObjectModelConnectInfo         FrontConnectInfo;                                  // 0x48(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         BackConnectInfo;                                   // 0x60(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         LeftConnectInfo;                                   // 0x78(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         RightConnectInfo;                                  // 0x90(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorFoundation* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyGroundWall
class UPalBuildObjectInstallStrategyGroundWall : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B64[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyGroundWall* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyNormal
class UPalBuildObjectInstallStrategyNormal : public UPalBuildObjectInstallStrategyBase
{
public:

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyNormal* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyPalStorage
class UPalBuildObjectInstallStrategyPalStorage : public UPalBuildObjectInstallStrategySinkableNormal
{
public:
	class APalBuildObjectPalStorage*             TargetPalStorageCache;                             // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyPalStorage* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyRoof
class UPalBuildObjectInstallStrategyRoof : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B6F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyRoof* GetDefaultObj();

};

// 0x60 (0xA8 - 0x48)
// Class Pal.PalMapObjectModelConnectorRoof
class UPalMapObjectModelConnectorRoof : public UPalMapObjectModelConnectorBase
{
public:
	struct FPalMapObjectModelConnectInfo         FrontConnectInfo;                                  // 0x48(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         BackConnectInfo;                                   // 0x60(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         LeftConnectInfo;                                   // 0x78(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         RightConnectInfo;                                  // 0x90(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorRoof* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyStairs
class UPalBuildObjectInstallStrategyStairs : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B7C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyStairs* GetDefaultObj();

};

// 0x30 (0x78 - 0x48)
// Class Pal.PalMapObjectModelConnectorStair
class UPalMapObjectModelConnectorStair : public UPalMapObjectModelConnectorBase
{
public:
	struct FPalMapObjectModelConnectInfo         UpConnectInfo;                                     // 0x48(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         DownConnectInfo;                                   // 0x60(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorStair* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyWall
class UPalBuildObjectInstallStrategyWall : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B86[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyWall* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class Pal.PalBuildObjectInstallStrategyWallV2
class UPalBuildObjectInstallStrategyWallV2 : public UPalBuildObjectInstallStrategyBase
{
public:
	class AActor*                                HitActorCache;                                     // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBuildObject*                       HitBuildObjectCache;                               // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildObjectInstallStrategyWallV2* GetDefaultObj();

};

// 0x30 (0x78 - 0x48)
// Class Pal.PalMapObjectModelConnectorWallV2
class UPalMapObjectModelConnectorWallV2 : public UPalMapObjectModelConnectorBase
{
public:
	struct FPalMapObjectModelConnectInfo         UpConnectInfo;                                     // 0x48(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FPalMapObjectModelConnectInfo         DownConnectInfo;                                   // 0x60(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectModelConnectorWallV2* GetDefaultObj();

};

// 0x28 (0x598 - 0x570)
// Class Pal.PalBuildObjectMonsterFarm
class APalBuildObjectMonsterFarm : public APalBuildObject
{
public:
	struct FComponentReference                   WalkAroundVolumeRef;                               // 0x570(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalBuildObjectMonsterFarm* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Pal.PalBuildObjectOverlapChecker
class UPalBuildObjectOverlapChecker : public UObject
{
public:
	uint8                                        Pad_1BBB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UShapeComponent*                       Collision;                                         // 0x30(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalBuildObject*                       Owner;                                             // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APalBuildObject*>               OverlapBuildObjects;                               // 0x40(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                       OverlapOtherObjects;                               // 0x50(0x10)(Edit, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPrivate)
	class AActor*                                OverlappedActor;                                   // 0x60(0x8)(Edit, ZeroConstructor, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          AllowOverlapCollisionPresetNames;                  // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBuildObjectOverlapChecker* GetDefaultObj();

	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x148 (0x6B8 - 0x570)
// Class Pal.PalBuildObjectPalStorage
class APalBuildObjectPalStorage : public APalBuildObject
{
public:
	FMulticastInlineDelegateProperty_            OnOverlapBeginCageArea;                            // 0x570(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOverlapEndCageArea;                              // 0x580(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOverlapBeginCageWalls;                           // 0x590(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOverlapEndCageWalls;                             // 0x5A0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	float                                        BaseCampAreaRange;                                 // 0x5B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FComponentReference                   AccessPointObjectRef;                              // 0x5B8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FComponentReference                   AccessPointMovableRangeRef;                        // 0x5E0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FComponentReference                   AccessPointInteractRef;                            // 0x608(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FComponentReference                   ChestObjectRef;                                    // 0x630(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FComponentReference                   ChestMovableRangeRef;                              // 0x658(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FComponentReference                   ChestInteractRef;                                  // 0x680(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                  ChestWorkableBoundsName;                           // 0x6A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChestSlotNum;                                      // 0x6B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BE6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalBuildObjectPalStorage* GetDefaultObj();

	void PlaySpawnCharacterFX(class APalCharacter* TargetActor);
	void OverlapAreaDelegate__DelegateSignature(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp);
	void OnSpawnCharacter(const struct FPalInstanceID& IndividualId, int32 PhantomId);
	struct FTransform GetWorkerSpawnLocalTransform();
	struct FTransform GetFastTravelLocalTransform();
	struct FTransform GetDisplayCharacterSpawnLocalTransform();
	class USceneComponent* GetChestObject();
	class UBoxComponent* GetChestMovableRange();
	class UShapeComponent* GetCageAreaShape();
	class UStaticMeshComponent* GetAccessPointObject();
	class UBoxComponent* GetAccessPointMovableRange();
};

// 0xC0 (0x160 - 0xA0)
// Class Pal.PalBuildObjectVisualControlComponent
class UPalBuildObjectVisualControlComponent : public UActorComponent
{
public:
	TMap<class UMeshComponent*, struct FPalBuildObjectMaterialArray> NormalMaterialMapCache;                            // 0xA0(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UDecalComponent*, class UMaterialInterface*> DecalNormalMaterialMapCache;                       // 0xF0(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1BF7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UNiagaraComponent*                     DamageNiagaraComp;                                 // 0x158(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalBuildObjectVisualControlComponent* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Pal.PalBuildOperator
class UPalBuildOperator : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnCompleteBuildInServerDelegate;                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FBuildingSurfaceMaterialSet           BuildingSurfaceMaterialSet;                        // 0x38(0x38)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UPalBuildObjectDataMap*                DataMap;                                           // 0x70(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APalBuildObject*>               BuildObjects;                                      // 0x78(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalBuildOperator* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Pal.PalBuildProcess
class UPalBuildProcess : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateStateDelegate;                             // 0x28(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishBuildDelegate;                             // 0x38(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	enum class EPalBuildProcessState             State;                                             // 0x48(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C1B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalWorkProgress*                      BuildWork;                                         // 0x50(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C1C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBuildProcess* GetDefaultObj();

	void UpdateStateDelegate__DelegateSignature(class UPalBuildProcess* BuildProcess);
	void OnRep_StateChanged();
	void OnRep_BuildWork();
	void OnReflectFinishBuildWork(class UPalWorkBase* Work);
	void OnFinishWorkInServer(class UPalWorkBase* Work);
	bool IsCompleted();
	class UPalWorkProgress* GetWorkProgress();
};

// 0xD8 (0x368 - 0x290)
// Class Pal.PalBullet
class APalBullet : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnDestroyDelegate;                                 // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class USphereComponent*                      CollisionComp;                                     // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovement;                                // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalPlayerDamageCameraShakeCategory PlayerDamageCameraShake;                           // 0x2B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsHitFriend;                                      // 0x2B1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CB0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaponDamage;                                      // 0x2B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          Handle;                                            // 0x2B8(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDamageable;                                      // 0x2C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         AISoundEmitable;                                   // 0x2C1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CB1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SneakAttackRate;                                   // 0x2C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DeleteTime;                                        // 0x2C8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DamageDecayStartRate;                              // 0x2CC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LifeTimer;                                         // 0x2D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalDamageAnimationReactionType   WeaponBulletDamageReactionType;                    // 0x2D4(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CB3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalPassiveSkillEffect>        SkillEffectList;                                   // 0x2D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class EPhysicalSurface, struct FBulletHoleDecalInfo> BulletHoleDecalsMap;                               // 0x2E8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FBulletHoleDecalInfo                  DefaultBulletHoleDecals;                           // 0x338(0x30)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalBullet* GetDefaultObj();

	void SetWeaponDamage(int32 Damage);
	void SetSneakAttackRate(float Rate);
	void SetSkillEffectList(TArray<struct FPalPassiveSkillEffect>& InList);
	void SetDeleteTime(float DeleteSecound, float DecayStartRate);
	void SetDamageable(bool Damageable);
	bool SetBulletHoleDecal(struct FHitResult& Hit, float LifeSpan, float FadeTime, float FadeScreenSize);
	void OnHitToPalEnemy(class UPrimitiveComponent* HitComp, class APalCharacter* OtherCharacter, class UPrimitiveComponent* OtherComp, struct FHitResult& Hit);
	void OnHitToPalCharacter(class UPrimitiveComponent* HitComp, class APalCharacter* OtherCharacter, class UPrimitiveComponent* OtherComp, struct FHitResult& Hit);
	void OnHitToActor(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FHitResult& Hit);
	void OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FHitResult& Hit);
	void OnDestroy(class UPrimitiveComponent* HitComp, class AActor* OtherCharacter, class UPrimitiveComponent* OtherComp, struct FHitResult& Hit);
	void OnBlock(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnBeginOverlap(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& Hit);
	bool IsDestroy(class UPrimitiveComponent* HitComp, class AActor* OtherCharacter, class UPrimitiveComponent* OtherComp, struct FHitResult& Hit);
	int32 GetWeaponDamage();
	float GetSneakAttackRate();
	float GetParameterWithPassiveSkillEffect(float OriginalValue, enum class EPalPassiveSkillEffectType EffectType);
	float GetDecayDamageRate();
	void DestroyBulletDelegate__DelegateSignature(class UPrimitiveComponent* HitComp, class AActor* OtherCharacter, class UPrimitiveComponent* OtherComp, struct FHitResult& Hi);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBulletCreator
class UPalBulletCreator : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalBulletCreator* GetDefaultObj();

	class APalBullet* SpawnBullet(class UObject* WorldContextObject, TSubclassOf<class APalBullet> bulletClass, struct FTransform& SpawnTransform, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner, class APawn* Instigato);
	class APalBullet* CreateBullet(class UObject* WorldContextObject, class APalWeaponBase* Weapon, TSubclassOf<class APalBullet> bulletClass, struct FTransform& SpawnTransform, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner, class APawn* Instigator);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalBulletModifierComponent
class UPalBulletModifierComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalBulletModifierComponent* GetDefaultObj();

	void Initialize(class APalBullet* Bullet);
};

// 0x8 (0x580 - 0x578)
// Class Pal.PalBurnBoxComponent
class UPalBurnBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_1D15[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalBurnBoxComponent* GetDefaultObj();

	void EndOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BeginOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0xE8 (0x1D0 - 0xE8)
// Class Pal.PalCameraShakeBase
class UPalCameraShakeBase : public UCameraShakeBase
{
public:
	class UCurveFloat*                           CurveAsset;                                        // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OscillationDuration;                               // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OscillationBlendInTime;                            // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OscillationBlendOutTime;                           // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FROscillator                          RotOscillation;                                    // 0xFC(0x24)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVOscillator                          LocOscillation;                                    // 0x120(0x24)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFOscillator                          FOVOscillation;                                    // 0x144(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        OscillatorTimeRemaining;                           // 0x150(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D1C[0x7C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCameraShakeBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalCameraShakePattern
class UPalCameraShakePattern : public UCameraShakePattern
{
public:

	static class UClass* StaticClass();
	static class UPalCameraShakePattern* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Pal.PalCaptureBallEffectSettingDataAsset
class UPalCaptureBallEffectSettingDataAsset : public UDataAsset
{
public:
	TMap<enum class EPalSizeType, struct FPalCaptureBallEffectSettingData> EffectSettingDataArray;                            // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalCaptureBallEffectSettingDataAsset* GetDefaultObj();

	struct FPalCaptureBallEffectSettingData GetEffectSettingData(enum class EPalSizeType PalSizeType);
};

// 0x38 (0x2C8 - 0x290)
// Class Pal.PalCapturedCage
class APalCapturedCage : public AActor
{
public:
	uint8                                        Pad_1D51[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FieldKeyName;                                      // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APalAIController>          ControllerClass;                                   // 0x2A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnRange;                                        // 0x2A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DespawnRange;                                      // 0x2AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnedPalId;                                      // 0x2B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SpawnedPalLevel;                                   // 0x2B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRequestedInteract;                               // 0x2BC(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDisableInteractive;                              // 0x2BD(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsInSpawnedRange;                                  // 0x2BE(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D59[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIndividualCharacterHandle*         SpawnedPalHandle;                                  // 0x2C0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalCapturedCage* GetDefaultObj();

	void SpawnPal(class FName InPalID, int32 InPalLevel);
	void SetOverrideKeyName(class FName Key);
	void SetDisableInteractive();
	void RequestInteract(class APalPlayerCharacter* Attacker);
	void OnCreateHandle(const struct FPalInstanceID& ID);
	void LotteryAndSpawnPal();
	class APalCharacter* GetSpawnedPal();
	enum class EPalInteractiveObjectIndicatorType GetIndicatorType();
	class FName GetCampSpawnerName();
};

// 0x28 (0x2B8 - 0x290)
// Class Pal.PalCaptureJudgeObject
class APalCaptureJudgeObject : public AActor
{
public:
	uint8                                        Pad_1D92[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalCaptureJudgeObject* GetDefaultObj();

	void OnSuccessFinish();
	void OnFailedFinish();
	void OnFailedByTest(class APalCharacter* Character, const struct FCaptureResult& Result);
	void OnFailedByMP(class APalCharacter* Character, const struct FCaptureResult& Result);
	void OnCaptureSuccess(class APalCharacter* Character, const struct FCaptureResult& Result);
	void ChallengeCapture_ToServer(class APalCharacter* Character, float CapturePower);
	void ChallengeCapture(class APalCharacter* Character, float CapturePower);
	void CaptureResult_ToALL(class APalCharacter* Character, const struct FCaptureResult& Result);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalCaptureReactionComponent
class UPalCaptureReactionComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalCaptureReactionComponent* GetDefaultObj();

};

// 0x1E0 (0x7F8 - 0x618)
// Class Pal.PalCharacter
class APalCharacter : public ACharacter
{
public:
	float                                        UpdateGroundInterval;                              // 0x618(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E67[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalActionComponent*                   ActionComponent;                                   // 0x620(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCharacterParameterComponent*       CharacterParameterComponent;                       // 0x628(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalStaticCharacterParameterComponent* StaticCharacterParameterComponent;                 // 0x630(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalDamageReactionComponent*           DamageReactionComponent;                           // 0x638(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalStatusComponent*                   StatusComponent;                                   // 0x640(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalShooterSpringArmComponent*         CameraBoom;                                        // 0x648(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCharacterCameraComponent*          FollowCamera;                                      // 0x650(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalNetworkMulticastGateComponent*     MulticastGateComponent;                            // 0x658(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalLookAtComponent*                   LookAtComponent;                                   // 0x660(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalNavigationInvokerComponent*        NavInvokerComponent;                               // 0x668(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalFootIKComponent*                   FootIKComponent;                                   // 0x670(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalVisualEffectComponent*             VisualEffectComponent;                             // 0x678(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalPassiveSkillComponent*             PassiveSkillComponent;                             // 0x680(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalHeadUpDisplayComponent*            HUDComponent;                                      // 0x688(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalAnimNotifyParameterComponent*      AnimNotifyComponent;                               // 0x690(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCharacterAroundInfoCollectorComponent* AroundInfoCollectorComponent;                      // 0x698(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeActiveActorDelegate;                       // 0x6A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRollingDelegate;                                 // 0x6B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRollingFinishDelegate;                           // 0x6C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompleteSyncPlayerFromServer_InClient;           // 0x6D0(0x10)(Edit, ZeroConstructor, Transient, EditConst, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeBattleModeDelegate;                        // 0x6E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeImportanceDelegate;                        // 0x6F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCapturedDelegate;                                // 0x700(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsBattleMode;                                     // 0x710(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsTalkMode;                                       // 0x711(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPalActiveActor;                                 // 0x712(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsLocalInitialized;                               // 0x713(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDisable_ChangeTickInterval_ByImportance;        // 0x714(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E8F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          GroundCheckTimerHandle;                            // 0x718(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SpawnLocation_ForServer;                           // 0x720(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        IsDisableChangeTickInterval;                       // 0x738(0x50)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	enum class EPalCharacterImportanceType       ImportanceType;                                    // 0x788(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E93[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          CheckIndividualParameterReplicateTimerHandle;      // 0x790(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  RootCollisionProfileName;                          // 0x798(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E97[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalCharacterCompleteDelegatePriority, class UPalCharacterOnCompleteInitializeParameterWrapper*> OnCompleteInitializeParameterDelegateMap;          // 0x7A8(0x50)(Edit, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalCharacter* GetDefaultObj();

	void UpdateGroundRayCast();
	void SetVisibleHandAttachMesh(bool Active);
	void SetVisibleCharacterMesh(bool Active);
	void SetDisableChangeIntervalByImportance(class FName FlagName, bool IsDisable);
	void SetActiveCollisionMovement(bool Active);
	void SetActiveActorStayVisible(bool Active);
	void SetActiveActor(bool Active);
	void RPCDummy();
	void RollingDelegate__DelegateSignature();
	void ReviveCharacter_ToServer(const struct FFixedPoint& HP);
	void ReviveCharacter(const struct FFixedPoint& HP);
	void ResetTickInterval();
	void RequestJump();
	void Play2Montage(class UAnimMontage* FirstMontage, class UAnimMontage* NextMontage);
	void OnTeleport_ToClient(struct FVector& Location, struct FQuat& Rotation);
	void OnRep_RootCollisionProfileName();
	void OnRep_IsPalActiveActor(bool PrevIsActiveActor);
	void OnOverlapEndByAroundInfo(class AActor* OtherActor);
	void OnOverlapBeginByAroundInfo(class AActor* OtherActor);
	void OnCompleteSyncPlayerFromServer_InClient__DelegateSignature();
	void OnCompleteInitializeParameter__DelegateSignature(class APalCharacter* InCharacter);
	void OnChangeWetnessStatus(bool IsSwim);
	void OnChangeImportance__DelegateSignature(enum class EPalCharacterImportanceType NextType);
	void OnChangeBattleMode__DelegateSignature(bool bIsBattleMode);
	void OnChangeActiveActor__DelegateSignature(bool bIsActive);
	void OnCaptured__DelegateSignature(class APalCharacter* SelfCharacter, class APalCharacter* Attacker);
	bool IsInitialized();
	bool IsCooping();
	void GetVisual_ExceptMainMesh_SyncAnyway(TArray<class USceneComponent*>* OutComponent);
	bool GetTalkMode();
	class UPalCharacterMovementComponent* GetPalCharacterMovementComponent();
	TSoftObjectPtr<class UNiagaraSystem> GetOverrideSleepFX();
	class USkeletalMeshComponent* GetOverrideFaceMesh();
	class UPalCharacterOnCompleteInitializeParameterWrapper* GetOnCompleteInitializeParameterDelegate(enum class EPalCharacterCompleteDelegatePriority Priority);
	class UPalSkeletalMeshComponent* GetMainMesh();
	class USkeletalMeshComponent* GetHandAttachMesh();
	class UPalCharacterParameterComponent* GetCharacterParameterComponent();
	bool GetBattleMode();
	bool GetActiveActorFlag();
	class UPalActionComponent* GetActionComponent();
	void ChangeWantFood_ToAll(bool IsWantFood, bool IsExistFood);
	void ChangeTalkModeFlag_ToAll(bool IsTalk);
	void ChangeBattleModeFlag_ToAll(bool IsBattle);
	void ChangeBattleModeFlag(bool IsBattle);
	void BroadcastOnCompleteInitializeParameter();
	void BindFonctionToOnCompleteInitializeParameter(enum class EPalCharacterCompleteDelegatePriority Priority, FDelegateProperty_ Callback);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalCharacterOnCompleteInitializeParameterWrapper
class UPalCharacterOnCompleteInitializeParameterWrapper : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnCompleteInitializeParameterDelegate;             // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalCharacterOnCompleteInitializeParameterWrapper* GetDefaultObj();

	void Broadcast(class APalCharacter* Character);
};

// 0x30 (0x590 - 0x560)
// Class Pal.PalCharacterAroundInfoCollectorComponent
class UPalCharacterAroundInfoCollectorComponent : public USphereComponent
{
public:
	FMulticastInlineDelegateProperty_            OnOverlapBeginDelegate;                            // 0x560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOverlapEndDelegate;                              // 0x570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                         MapObjectModelIds;                                 // 0x580(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCharacterAroundInfoCollectorComponent* GetDefaultObj();

	void OverlapDelegate__DelegateSignature(class AActor* OtherActor);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x1A0 (0xBD0 - 0xA30)
// Class Pal.PalCharacterCameraComponent
class UPalCharacterCameraComponent : public UCameraComponent
{
public:
	float                                        WalkFOV;                                           // 0xA30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintFOV;                                         // 0xA34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintFOVInterpSpeed;                              // 0xA38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostProcessInterpTime;                             // 0xA3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldFocalDistance_NoAim;                   // 0xA40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldDepthBlurAmount_NoAim;                 // 0xA44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldDepthBlurRadius_NoAim;                 // 0xA48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldFstop_NoAim;                           // 0xA4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldFocalDistance_Aim;                     // 0xA50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldDepthBlurAmount_Aim;                   // 0xA54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldDepthBlurRadius_Aim;                   // 0xA58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DepthOfFieldFstop_Aim;                             // 0xA5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPalWeaponType, struct FPalCameraDOFSetting> DefaultWeaponDOFSetting;                           // 0xA60(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class APalWeaponBase>, struct FPalCameraDOFSetting> UniqueWeaponDOFSetting;                            // 0xAB0(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         bIsDynamicDOFFocalDistance;                        // 0xB00(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1ED7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DynamicDOFFocalDistanceSpeed;                      // 0xB04(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DynamicDOFFocalDistanceMAX;                        // 0xB08(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableSpeedBlur;                                // 0xB0C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    DynamicSpeedBlurMaterial;                          // 0xB10(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedBlurInterpSpeed;                              // 0xB18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedBlurSpeed;                                 // 0xB1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedBlurSpeed;                                 // 0xB20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedBlurAlpha;                                 // 0xB24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableAimBlur;                                  // 0xB28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EDF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    DynamicAimBlurMaterial;                            // 0xB30(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendInAimBlurInterpTime;                          // 0xB38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutAimBlurInterpTime;                         // 0xB3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFOVInterpTime;                                  // 0xB40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimFOV;                                            // 0xB44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateSpeedRate;                                   // 0xB48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EE4[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynamicSpeedBlurMaterialDynamic;                   // 0xBB8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              DynamicAimBlurMaterialDynamic;                     // 0xBC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1EE5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCharacterCameraComponent* GetDefaultObj();

	void OnStartAim();
	void OnEndAim();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalCharacterContainerDefine
class UPalCharacterContainerDefine : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalCharacterContainerDefine* GetDefaultObj();

};

// 0x100 (0x170 - 0x70)
// Class Pal.PalCharacterContainerManager
class UPalCharacterContainerManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_1F0A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPalContainerId, class UPalIndividualCharacterContainer*> ContainerMap_InServer;                             // 0x80(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F0D[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPalContainerId, class UPalIndividualCharacterContainer*> LocalContainerMap;                                 // 0x120(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCharacterContainerManager* GetDefaultObj();

	bool TryGetContainer(struct FPalContainerId& ContainerId, class UPalIndividualCharacterContainer** Container);
	class UPalIndividualCharacterSlot* GetLocalSlot(struct FPalContainerId& ContainerId, int32 SlotIndex);
	class UPalIndividualCharacterContainer* GetLocalContainer(struct FPalContainerId& ContainerId);
	class UPalIndividualCharacterContainer* GetContainer(struct FPalContainerId& ContainerId);
};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalCharacterImportanceManager
class UPalCharacterImportanceManager : public UObject
{
public:
	uint8                                        Pad_1F1F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APalPlayerCharacter*>           PlayerList;                                        // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class APalPlayerCharacter*>           PlayerList_ForOutsideGet;                          // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EPalCharacterImportanceType, struct FCharacterListForImportanceManager> CharacterMap;                                      // 0x50(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<class APalNPCSpawnerBase*>            SpawnerList;                                       // 0xA0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F21[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCharacterImportanceManager* GetDefaultObj();

	void GetImportantNPC(TArray<class APalCharacter*>* OutArray);
	void GetAllPlayer(TArray<class APalCharacter*>* OutArray);
	void GetAllPalCharacter(TArray<class APalCharacter*>* OutArray);
	void GetAllNPC(TArray<class APalCharacter*>* OutArray);
};

// 0x60 (0x100 - 0xA0)
// Class Pal.PalCharacterLiftupObjectComponent
class UPalCharacterLiftupObjectComponent : public UActorComponent
{
public:
	uint8                                        Pad_1F31[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsLifting;                                        // 0xAA(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F32[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableLiftup;                                     // 0xB4(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F33[0x4B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCharacterLiftupObjectComponent* GetDefaultObj();

	void SetEnable(bool bInEnable);
	void OnOverlapEndCageAreaWalls();
	void OnHitOwnerMainMesh(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	bool IsLifting();
	struct FGuid GetLastLiftRequestedPlayerUId();
	void BroadcastSetBeingThrown(bool bInBeingThrown);
};

// 0x1D0 (0x240 - 0x70)
// Class Pal.PalCharacterManager
class UPalCharacterManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_1FC8[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnIndividualParameterSynced;                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalActionBase>            AttackNearBaseClass;                               // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalActionBase>            AttackFarBaseClass;                                // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FPalInstanceID, class UPalIndividualCharacterParameter*> IndividualParameterMap;                            // 0xE8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FPalInstanceID, TWeakObjectPtr<class UPalIndividualCharacterHandle>> WeakIndividualHandleMap;                           // 0x138(0x50)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterHandle*> InitializeWaitingHandles;                          // 0x188(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterHandle*> NoHoldHandles;                                     // 0x198(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<struct FPalInstanceID, class UPalIndividualCharacterHandleReference*> CachedRefenrenceOnlyHandles;                       // 0x1A8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FF4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPalIndividualCharacterHandle*> CreatingHandles;                                   // 0x200(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterHandle*> SpawningActorHandles;                              // 0x210(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterHandle*> ReserveDestroyActorHandles;                        // 0x220(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterParameter*> CachedIndividualParameterList;                     // 0x230(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCharacterManager* GetDefaultObj();

	void SpawnPhantomByHandle(class UPalIndividualCharacterHandle* Handle, const struct FNetworkActorSpawnParameters& SpawnParameter, FDelegateProperty_ SpawnCallback);
	class UPalIndividualCharacterHandle* SpawnNewCharacterWithInitializeParameterCallback(const struct FPalIndividualCharacterSaveParameter& InitParameter, const struct FNetworkActorSpawnParameters& SpawnParameter, enum class EPalCharacterCompleteDelegatePriority InitializeParameterCallbackPriority, FDelegateProperty_ InitializeParameterCallback, FDelegateProperty_ SpawnCallback);
	class UPalIndividualCharacterHandle* SpawnNewCharacter(const struct FPalIndividualCharacterSaveParameter& InitParameter, const struct FNetworkActorSpawnParameters& SpawnParameter, FDelegateProperty_ SpawnCallback);
	void SpawnCharacterByHandleWithInitializeParameterCallback(class UPalIndividualCharacterHandle* Handle, const struct FNetworkActorSpawnParameters& SpawnParameter, enum class EPalCharacterCompleteDelegatePriority InitializeParameterCallbackPriority, FDelegateProperty_ InitializeParameterCallback, FDelegateProperty_ SpawnCallback);
	void SpawnCharacterByHandle(class UPalIndividualCharacterHandle* Handle, const struct FNetworkActorSpawnParameters& SpawnParameter, FDelegateProperty_ SpawnCallback);
	void RaiseToMainActor(class UPalIndividualCharacterHandle* Handle, int32 PhantomId, FDelegateProperty_ Callback);
	void OnCreateIndividualID(const struct FPalInstanceID& ID);
	void IndividualPhantomIDCallback__DelegateSignature(const struct FPalInstanceID& ID, int32 PhantomId);
	void IndividualIDCallback__DelegateSignature(const struct FPalInstanceID& ID);
	class UPalIndividualCharacterHandleReference* GetIndividualHandleReference(const struct FPalInstanceID& ID);
	class UPalIndividualCharacterHandle* GetIndividualHandleFromCharacterParameter(class UPalIndividualCharacterParameter* Parameter);
	class UPalIndividualCharacterHandle* GetIndividualHandle(const struct FPalInstanceID& ID);
	class UPalIndividualCharacterParameter* GetIndividualCharacterParameter(struct FPalInstanceID& IndividualId);
	void DespawnPhantomByHandle(class UPalIndividualCharacterHandle* Handle, int32 PhantomId, FDelegateProperty_ SpawnCallback);
	void DespawnCharacterByHandle(class UPalIndividualCharacterHandle* Handle, FDelegateProperty_ SpawnCallback);
	class UPalIndividualCharacterHandle* CreateIndividualByFixedID(const struct FPalInstanceID& ID, const struct FPalIndividualCharacterSaveParameter& InitParameter, FDelegateProperty_ SpawnCallback);
	class UPalIndividualCharacterHandle* CreateIndividual(const struct FPalIndividualCharacterSaveParameter& InitParameter, FDelegateProperty_ SpawnCallback);
	void CharacterParameterAddedDelegate__DelegateSignature(const struct FPalInstanceID& InstanceId);
	void CharacterHandleDelegate__DelegateSignature(class UPalIndividualCharacterHandle* CharacterHandle);
};

// 0x148 (0x170 - 0x28)
// Class Pal.PalCharacterManagerReplicator
class UPalCharacterManagerReplicator : public UPalGameStateReplicatorBase
{
public:
	struct FFastCharacterParameterRepInfoArray   CharacterParameterInfosFast;                       // 0x28(0x148)(Net, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCharacterManagerReplicator* GetDefaultObj();

	void OnPreReplicatedRemoveItem(struct FCharacterParameterRepInfo& Item);
	void OnPostReplicatedChangeItem(struct FCharacterParameterRepInfo& Item);
	void OnPostReplicatedAddItem(struct FCharacterParameterRepInfo& Item);
	void OnPep_CharacterParameterInfos();
};

// 0x788 (0x1680 - 0xEF8)
// Class Pal.PalCharacterMovementComponent
class UPalCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	FMulticastInlineDelegateProperty_            OnMovementModeChangedDelegate;                     // 0xEF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJumpDelegate;                                    // 0xF08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFlyDelegate;                                     // 0xF18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLandedDelegate;                                  // 0xF28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeCrouchDelegate;                            // 0xF38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeSprintDelegate;                            // 0xF48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeSlidingDelegate;                           // 0xF58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeSwimmingDelegate;                          // 0xF68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterWaterDelegate;                              // 0xF78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitWaterDelegate;                               // 0xF88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJumpDisableDelegate;                             // 0xF98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        DyingMaxSpeed;                                     // 0xFA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FatigueMaxSpeed;                                   // 0xFAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintMaxSpeed;                                    // 0xFB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintMaxAcceleration;                             // 0xFB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawRate;                                     // 0xFB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderMaxSpeed;                                    // 0xFBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderAirControl;                                  // 0xFC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderGravityScale;                                // 0xFC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingStartSpeed;                                 // 0xFC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingMaxSpeed;                                   // 0xFCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingAddRate;                                    // 0xFD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingSubRate;                                    // 0xFD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingYawRate;                                    // 0xFD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableSkySliding;                               // 0xFDC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClimbMaxSpeed;                                     // 0xFE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingMaxSpeed;                                   // 0xFE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastLandedTransformCacheNum;                       // 0xFE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUseLastLandedCache;                             // 0xFEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, float>                           OverrideJumpZVelocityMap;                          // 0xFF0(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, float>                     MaxAccelerationMultiplierMap;                      // 0x1040(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     WalkSpeedMultiplierMap;                            // 0x1090(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     YawRotatorMultiplierMap;                           // 0x10E0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     GravityZMultiplierMap;                             // 0x1130(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     AirControlXYMultiplierMap;                         // 0x1180(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     SlideAlphaMultiplierMap;                           // 0x11D0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        MoveDisableFlag;                                   // 0x1220(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        InputDisableFlag;                                  // 0x1270(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        JumpDisableFlag;                                   // 0x12C0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DriveMoveFlag;                                     // 0x1310(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        PysicsAccelerationFlag;                            // 0x1360(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FVector                               ClientLocation;                                    // 0x13B0(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        CrouchDisableFlag;                                 // 0x13D0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        SlidingDisableFlag;                                // 0x1420(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        GliderDisableFlag;                                 // 0x1470(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        SplintDisableFlag;                                 // 0x14C0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	bool                                         bRequestCrouch;                                    // 0x1510(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequestSprint;                                    // 0x1511(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22E0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastLandingInputVelocity;                          // 0x1518(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       LastLandingLocationCache;                          // 0x1530(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        StepDisableFlag;                                   // 0x1540(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<enum class EPalWalkableFloorAnglePriority, float> WalkableFloorAngleOverridesMap;                    // 0x1590(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	float                                        SlowWalkSpeed_Default;                             // 0x15E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WalkSpeed_Default;                                 // 0x15E4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RunSpeed_Default;                                  // 0x15E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RideSprintSpeed_Default;                           // 0x15EC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TransportSpeed_Default;                            // 0x15F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TemporaryAccelerationTimeCount;                    // 0x15F4(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsFlyDashMode;                                     // 0x15F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsGrapplingMoving;                                // 0x15F9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22E7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultMaxStepHeight;                              // 0x15FC(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalCharacterMovementCustomMode   CustomMovementMode_ForReplicate;                   // 0x1600(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22E9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InWaterRate;                                       // 0x1604(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashSwimMaxSpeed;                                  // 0x1608(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpableInWaterDepth;                              // 0x160C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEnterWaterFlag                   EnteredWaterFlag;                                  // 0x1610(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22ED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaterPlaneZ;                                       // 0x1614(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WaterPlaneZPrev;                                   // 0x1618(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WaitTimeToSwimInFalling;                           // 0x161C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDashSwim;                                       // 0x1620(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22F2[0x5F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCharacterMovementComponent* GetDefaultObj();

	void SetYawRotatorMultiplier(class FName FlagName, float Rate);
	void SetWalkSpeedMultiplier(class FName FlagName, float Speed);
	void SetWalkSpeedByType(class FName FlagName, enum class EPalMovementSpeedType MoveSpeedType);
	void SetWalkableFloorAngleOverrides(enum class EPalWalkableFloorAnglePriority Priority, float Angle);
	void SetupDatabaseSpeedByCharacterId(class APalCharacter* InCharacter, class FName CharaID);
	void SetupDatabaseSpeed(class APalCharacter* InCharacter);
	void SetStepDisableFlag(class FName FlagName, bool IsDisable);
	void SetSplintDisbleFlag(class FName FlagName, bool Disable);
	void SetSlidingDisbleFlag(class FName FlagName, bool Disable);
	void SetSlideAlphaMultiplier(class FName FlagName, float Rate);
	void SetPysicsAccelerationFlag(class FName FlagName, bool IsEnable);
	void SetMoveDisableFlag(class FName FlagName, bool IsDisable);
	void SetMaxAccelerationMultiplier(class FName FlagName, float Speed);
	void SetJumpDisableFlag(class FName FlagName, bool IsDisable);
	void SetInputDisableFlag(class FName FlagName, bool IsDisable);
	void SetGravityZMultiplier(class FName FlagName, float Rate);
	void SetGrapplingMoving(bool IsMoving);
	void SetGliderDisbleFlag(class FName FlagName, bool Disable);
	void SetForceMaxAccel(bool bIsEnable);
	void SetFlyDashMode_ToServer(bool IsDash);
	void SetDriveMoveFlag(class FName FlagName, bool IsEnable);
	void SetDisableLeftHandAttachFlag(bool IsDisable);
	void SetDashSwimming_ToServer(bool _isDash);
	void SetDashSwimming(bool _isDash);
	void SetCustomMovementMode(enum class EPalCharacterMovementCustomMode NewCustomMode);
	void SetCrouchDisbleFlag(class FName FlagName, bool Disable);
	void SetAirControlXYMultiplier(class FName FlagName, float Rate);
	void ResetLastLandingLocationCache();
	void RequestTemporaryAcceleration();
	void RemoveWalkableFloorAngleOverrides(enum class EPalWalkableFloorAnglePriority Priority);
	void OnRep_CustomMovementMode_ForReplicate();
	void OnMovementModeChangedDelegate__DelegateSignature(class UPalCharacterMovementComponent* Component, enum class EMovementMode PrevMode, enum class EMovementMode NewMode, enum class EPalCharacterMovementCustomMode PrevCustomMode, enum class EPalCharacterMovementCustomMode NewCustomMode);
	void OnLandedDelegate__DelegateSignature(class UPalCharacterMovementComponent* Component, struct FHitResult& Hit);
	void OnJumpDisable__DelegateSignature();
	void OnJumpDelegate__DelegateSignature(class UPalCharacterMovementComponent* Component);
	void OnFlyDelegate__DelegateSignature(class UPalCharacterMovementComponent* Component);
	void OnExitWater__DelegateSignature();
	void OnExitWater();
	void OnEnterWater__DelegateSignature();
	void OnEnterWater();
	void OnDeactivated(class UActorComponent* Component);
	void OnChangeSwimming__DelegateSignature(bool IsInSwimming);
	void OnChangeSprint__DelegateSignature(class UPalCharacterMovementComponent* Component, bool IsInSprint);
	void OnChangeSliding__DelegateSignature(class UPalCharacterMovementComponent* Component, bool IsInSliding);
	void OnChangeCrouch__DelegateSignature(class UPalCharacterMovementComponent* Component, bool IsInCrouch);
	void OnChangeCrouch(class UPalCharacterMovementComponent* Component, bool IsInCrouch);
	void MergeLastLandingLocationCache(class UPalCharacterMovementComponent* MovementComponent);
	void Jump();
	bool IsStepDisabled();
	bool IsSprint();
	bool IsSliding();
	bool IsRequestSliding();
	bool IsPysicsAcceleration();
	bool IsMoveDisabled();
	bool IsJumpDisabled();
	bool IsInputDisabled();
	bool IsGrapplingMoving();
	bool IsGliding();
	bool IsFallingFromSwimming();
	bool IsEnteredWater();
	bool IsEnableSkySliding();
	bool IsDriveMove();
	bool IsDashSwimming();
	bool IsClimbing();
	float GetYawRotatorMultiplier();
	struct FVector GetWaterPlaneNormal();
	struct FVector GetWaterPlaneLocation();
	float GetWalkSpeedMultiplier();
	float GetWalkableFloorAngleByPriority();
	struct FVector GetVelocity();
	float GetSlideAlphaMultiplier();
	float GetMaxAccelerationMultiplier();
	struct FVector GetLastLandingLocationFromLastOfCache();
	struct FVector GetLastLandingLocation();
	float GetInWaterRate();
	float GetGravityZMultiplier();
	float GetDefaultRunSpeed();
	enum class EPalCharacterMovementCustomMode GetCustomMovementMode();
	float GetAirControlXYMultiplier();
	void CheckReturnToNavWakl();
	bool CanSliding();
	bool CanGainSP();
	bool CanDashSwimming();
};

// 0x5D0 (0x670 - 0xA0)
// Class Pal.PalCharacterParameterComponent
class UPalCharacterParameterComponent : public UActorComponent
{
public:
	bool                                         bIsCooping;                                        // 0xA0(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableSendReticleTarget;                        // 0xA1(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableMuteki;                                   // 0xA2(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFixedPoint64                         LeanBackPoint;                                     // 0xA8(0x8)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint64                         LeanBackMaxPoint;                                  // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint64                         StunPoint;                                         // 0xB8(0x8)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint64                         StunMaxPoint;                                      // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsSPOverheat;                                      // 0xC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHyperArmor;                                     // 0xC9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDebugMuteki;                                    // 0xCA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalElementType                   ElementType1;                                      // 0xCB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalElementType                   ElementType2;                                      // 0xCC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverrideTarget;                                  // 0xCD(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2481[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OverrideTargetLocation;                            // 0xD0(0x18)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APalCharacter*                         Trainer;                                           // 0xE8(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APalCharacter*                         OtomoPal;                                          // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 ReticleTargetActor;                                // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalIndividualCharacterHandle*         IndividualHandle;                                  // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalIndividualCharacterParameter*      IndividualParameter;                               // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsStun;                                            // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableSpeedCollision;                            // 0x111(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCanSneakAttacked;                                // 0x112(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFriendBulletIgnore;                              // 0x113(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BiologicalGrade;                                   // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPredator;                                        // 0x118(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEdible;                                          // 0x119(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2485[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HiddenCollisionOverlapCount;                       // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BurnCollisionOverlapCount;                         // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LavaCollisionOverlapCount;                         // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2487[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalElementType                   DamageUpElement_ByElementStatus;                   // 0x129(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalElementType                   DamageDownElement_ByElementStatus;                 // 0x12A(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDarknessRandomAttack;                            // 0x12B(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttackUp;                                          // 0x12C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefenseUp;                                         // 0x130(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2489[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalAdditionalEffectType, struct FPalStatusAccumulate> StatusAccumulateMap;                               // 0x138(0x50)(Transient, NativeAccessSpecifierPublic)
	bool                                         IsSleepAction;                                     // 0x188(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WildPalDrinkWaterPoint;                            // 0x190(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisableOtomoReturnEffect;                        // 0x1A8(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            GroundHitResult;                                   // 0x1B0(0xE8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_248E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsUseGroundRayCast;                               // 0x29C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_248F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        DisableGroundRayCast;                              // 0x2A0(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FFixedPoint64                         SP;                                                // 0x2F0(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGuid                                 BaseCampDefenseModelId;                            // 0x2F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalMapBaseCampWorkerOrderType    BaseCampWorkerOrderType;                           // 0x308(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBaseCampWorkerAttackableFriend;                   // 0x309(0x1)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2496[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FPalMapObjectAppearanceData> UnreachableMapObjectInfos;                         // 0x310(0x50)(Transient, NativeAccessSpecifierPublic)
	struct FPalCharacterParameter_Work           Work;                                              // 0x360(0x78)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	struct FPalWorkAssignHandleId                WorkAssignId;                                      // 0x3D8(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalWorkType                      WorkType;                                          // 0x3F0(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 BaseCampWalkAroundExcludeMapObjectInstanceId;      // 0x3F4(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PossessStaticItemId;                               // 0x404(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeingRescued;                                     // 0x40C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DyingHP;                                           // 0x410(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DyingMaxHP;                                        // 0x414(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalItemContainer*                     ItemContainer;                                     // 0x418(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsCapturedProcessing;                              // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdatePossessItemDelegate;                       // 0x428(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateWorkAssignIdDelegate;                      // 0x438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSPOverheatDelegate;                              // 0x448(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeTrapLegHoldDelegate;                       // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeTrapMovingPanelDelegate;                   // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                               TrapDirection;                                     // 0x478(0x18)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FPalInstanceID, int32>           DamageMap;                                         // 0x490(0x50)(Transient, NativeAccessSpecifierPublic)
	bool                                         CanDropItem;                                       // 0x4E0(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        DisableNaturalHealing_Component;                   // 0x4E8(0x50)(Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_24A7[0x100];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         TrapLegHoldList;                                   // 0x638(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>         TrapMovingPanelList;                               // 0x648(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UPalOtomoAttackStopJudgeByBallList*    OtomoAttackStopJudge;                              // 0x658(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalMapObjectAppearanceDataWithId> UnreachableMapObjectRepInfoArray;                  // 0x660(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalCharacterParameterComponent* GetDefaultObj();

	void ZeroDyingHP_ToServer();
	void ZeroDyingHP();
	void UpdateWorkAssignIdDelegate__DelegateSignature(class UPalCharacterParameterComponent* Parameter);
	void UpdateParameterDelegate__DelegateSignature(class UPalCharacterParameterComponent* Parameter);
	void SubDyingHP(float SubHP);
	void SPOverheatDelegate__DelegateSignature();
	void SetupBiologicalGradeFromDatabase();
	void SetTrainer(class APalCharacter* InTrainer);
	void SetSP(const struct FFixedPoint64& NewSP);
	void SetReticleTarget_ToServer(class AActor* Actor);
	void SetOverrideTargetLocation_ToServer(const struct FVector& TargetLocation);
	void SetOverrideTargetLocation(const struct FVector& TargetLocation);
	void SetMuteki(class FName FlagName, bool IsEnable);
	void SetMP(const struct FFixedPoint64& NewMP);
	void SetMaxSP(const struct FFixedPoint64& NewMaxSP);
	void SetMaxMP(const struct FFixedPoint64& NewMaxMP);
	void SetMaxHP(const struct FFixedPoint64& NewMaxHP);
	void SetIsOverrideTarget_Innner(bool IsOverride);
	void SetIsOverrideTarget(bool IsOverride);
	void SetIsCapturedProcessing(bool IsCaptureProcess);
	void SetHP(const struct FFixedPoint64& NewHP);
	void SetEnableSendReticleTarget(class FName FlagName, bool IsEnable);
	void SetElementTypeFromDatabase(class APalCharacter* InCharacter);
	void SetDisableNaturalHealing_Component(class FName Key, bool Disable);
	void SetDisableCreateUNKO(class FName FlagName, bool IsDisable);
	void SetCoopingFlag(bool IsEnable);
	void ReviveFromDying();
	void ResetSP();
	void ResetDyingHP();
	void RemoveTrapMovingPanel(class AActor* TrapActor);
	void RemoveTrapLegHold(class AActor* TrapActor);
	void OnSlipDamage(int32 Damage);
	void OnRep_Trainer();
	void OnRep_PossessStaticItemId();
	void OnRep_ItemContainer();
	void OnRep_IndividualParameter();
	void OnInitializedCharacter(class APalCharacter* OwnerCharacter);
	void OnInitialize_AfterSetIndividualParameter(class APalCharacter* Character);
	void OnDamage(const struct FPalDamageResult& DamageResult);
	void OnChangeTrapDelegate__DelegateSignature(bool IsExist);
	bool IsOtomo();
	bool IsMuteki();
	bool IsLive();
	bool IsInHiddenCollision();
	bool IsHyperArmor();
	bool IsHittingLava();
	bool IsDyingHPZero();
	bool IsDyingHPMax();
	bool IsDying();
	bool IsDead();
	bool IsCooping();
	bool IsAssignedToAnyWork();
	bool IsAssignedFixed();
	bool HasFloorPhysMaterial();
	bool HasElementType(enum class EPalElementType ElementType);
	struct FGuid GetWorkId();
	class UPalWorkAssign* GetWorkAssign();
	class UPalWorkBase* GetWork();
	struct FFixedPoint64 GetSP();
	int32 GetShotAttack();
	float GetSanity();
	float GetRadius();
	struct FVector GetOverrideTargetLocation_ConsiderRide();
	class UPalOtomoAttackStopJudgeByBallList* GetOtomoAttackStopJudge();
	void GetNickname(class FString* OutName);
	struct FFixedPoint64 GetMP();
	int32 GetMeleeAttack();
	struct FFixedPoint64 GetMaxSP();
	float GetMaxSanity();
	struct FFixedPoint64 GetMaxMP();
	struct FFixedPoint64 GetMaxHP();
	float GetMaxFullStomach();
	struct FGuid GetMapObjectInstanceIdApproachTo();
	int32 GetLevel();
	int32 GetLegHoldResistLevel();
	bool GetIsCapturedProcessing();
	class UPalIndividualCharacterParameter* GetIndividualParameter();
	struct FFixedPoint64 GetHP();
	struct FHitResult GetHitGroundResult();
	float GetFullStomach();
	enum class EPhysicalSurface GetFloorPhisicalSurface();
	struct FVector GetFloorLocation();
	int32 GetDefense();
	int32 GetCraftSpeed_WorkSuitability(enum class EPalWorkSuitability WorkSuitability);
	int32 GetCraftSpeed();
	struct FGuid GetBaseCampId();
	void AddTrapMovingPanel(class AActor* TrapActor);
	void AddTrapLegHold(class AActor* TrapActor);
	void AddDyingHP(float AddHP);
};

// 0x78 (0xE8 - 0x70)
// Class Pal.PalCharacterParameterStorageSubsystem
class UPalCharacterParameterStorageSubsystem : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_24C8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStoredParameterDelegate_ForServer;               // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemovedParameterDelegate_ForServer;              // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FPalCharacterStoredParameterId, struct FPalCharacterStoredParameterInfo> StoredParameterInfoMap;                            // 0x98(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCharacterParameterStorageSubsystem* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class Pal.PalShopBase
class UPalShopBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateAnyProduct;                                // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 MyShopID;                                          // 0x38(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MyShopName;                                        // 0x48(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalShopProductBase*>           ProductArray;                                      // 0x50(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalShopProductBase*> ProductMap_ForServer;                              // 0x60(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          RestockTimerHandle_ForServer;                      // 0xB0(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalShopBase* GetDefaultObj();

	void UpdateAnyProductDelegate__DelegateSignature();
	void OnUpdateAnyProductStock(int32 NowStock);
	void OnUpdateAnyProductMaxStock(int32 MaxStock);
	void OnTimerTrigger_Restock();
	void OnRep_ProductArray();
	void OnRep_MyShopName();
	void GetId(struct FGuid* OutID);
	void GetAllProduct(TArray<class UPalShopProductBase*>* OutProductArray);
};

// 0x10 (0xC8 - 0xB8)
// Class Pal.PalCharacterShop
class UPalCharacterShop : public UPalShopBase
{
public:
	TArray<class UPalShopProduct_LostPal*>       LocalLostPalProductArray;                          // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCharacterShop* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalCharacterStatusOperation
class UPalCharacterStatusOperation : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalCharacterStatusOperation* GetDefaultObj();

	TMap<class FName, int32> GetReturnItemsForResetCharacterStatusAll(class UObject* WorldContextObject, class UPalIndividualCharacterParameter* TargetIndividualParameter);
	int32 GetRequiredRelicCountForLocalPlayer(class UObject* WorldContextObject);
	int32 GetRequiredMoneyCountForResetLocalPlayer(class UObject* WorldContextObject);
	int32 GetRequiredMoneyCountForResetCharacterStatusAll(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* TargetHandle);
	int32 GetRequiredMoneyCountForResetCharacterStatus(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* TargetHandle, enum class EPalCharacterStatusOperationName StatusName);
	void GetRequiredItemCountForCharacterStatus(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* TargetHandle, enum class EPalCharacterStatusOperationName StatusName, class FName* OutStaticItemId, int32* OutItemNum);
	int32 GetCurrentStatusRank(class UPalIndividualCharacterParameter* TargetIndividualParameter, enum class EPalCharacterStatusOperationName StatusName);
	int32 GetCurrentLocalPlayerStatusPoint(class UObject* WorldContextObject, class FName StatusName);
};

// 0x0 (0x38 - 0x38)
// Class Pal.PalHUDDispatchParameter_CharacterStatusOperator
class UPalHUDDispatchParameter_CharacterStatusOperator : public UPalHUDDispatchParameterBase
{
public:

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_CharacterStatusOperator* GetDefaultObj();

	void GetCharacterStatusOperationResultText(class UObject* WorldContextObject, enum class EPalCharacterStatusOperationResult Type, class FText* OutText);
	void BindReceiveRequestResultDelegate(class UObject* WorldContextObject, FDelegateProperty_ Delegate);
};

// 0x40 (0xC8 - 0x88)
// Class Pal.PalCheatManager
class UPalCheatManager : public UCheatManager
{
public:
	uint8                                        Pad_2787[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalDebugWindowSetting*                DebugWindowSetting;                                // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DebugProgressPresetDataTable;                      // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APalDebug_SpawnInfoReporter> SpawnerInfoReporterClass;                          // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APalImGui*                             PalImGui;                                          // 0xA8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalStatPalCount*                      PalCountSystem;                                    // 0xB0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalDebug_SpawnInfoReporter*           SpawnInfoReporter;                                 // 0xB8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_278B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCheatManager* GetDefaultObj();

	void WorkerEventLog();
	void WorkerEventInterval(float Interval);
	void WildPalCombatStart();
	void WazaCoolTimeFastMode();
	void VisitorTravel();
	void UpdateBaseCampWorkerSlotNum(int32 SlotNum);
	void UpdateBaseCampTickInvokeMaxNumInOneTick(int32 Value);
	void UpdateBaseCampLevelMax();
	void UnlockTechnologyByLvCap(int32 Lv);
	void UnlockOneTechnology(class FName TechnologyName);
	void UnlockMap(class FName RegionId);
	void UnlockAllRecipeTechnology();
	void UnlockAllCategoryTechnology();
	void UnlockAchievement(const class FString& AchievementId, int32 Progress);
	void UNKO();
	void TriggerBaseCampWorkerEvent(enum class EPalBaseCampWorkerEventType EventType);
	void ToggleVisibleFoliageChunk();
	void ToggleShowReticleLocation();
	void ToggleShowDropItemHitEventLog();
	void ToggleRevision_BP();
	void ToggleRevision();
	void TogglePartnerSkillNoDecrease();
	void ToggleLoadingScreen();
	void ToggleHUD();
	void ToggleBuildInstallCheckLookToCamera();
	void ToggleBaseCampWorkerSanityDetail();
	void TimeStopForBP();
	void TeleportToSafePoint();
	void TeleportToNearestPlayer();
	void TeleportToNearestCamp();
	void TeleportToLocationByClipboard();
	void TeleportToLocation(float X, float Y, float Z);
	void TeleportToLastLandingLocation();
	void TeleportToDungeonEntranceRandom();
	void TeleportToDungeonEntranceByRandomScattered();
	void TeleportToDungeonEntranceByIndex(int32 Index);
	void TeleportToDungeonEntranceByDataLayer(class FName DataLayerName);
	void TeleportToCurrentDungeonTreasureBox();
	void TeleportToCurrentDungeonGoal();
	void TeleportToBotLocation(int32 botIndex);
	void TeleportToBotCamp(int32 botIndex);
	void TeleportToBossTower(enum class EPalBossType BossType);
	void TeleportNearestPlayerToMe();
	void StringToPlayerUID(const class FString& Str);
	void StopTimerDropItem();
	void StopOtomoMovement();
	void StopOtomoAI();
	void StartWildPalCombat();
	void StartTraceAllOption();
	void StartDismantlingMode();
	void StartBuildMode(class FName BuildObjectId);
	void SpectatorOnForBP();
	void SpectatorOn();
	void SpectatorOffForBP();
	void SpectatorOff();
	void SpawnPalEggBreedFarm(class FName MonsterId, float Range);
	void SpawnMonsterForPlayer(class FName& CharacterID, int32 Num, int32 Level);
	void SpawnMonster(class FName CharacterID, int32 Level);
	void SleepAllEnemy();
	void SkipCutscene();
	void ShutdownRemoteServer();
	void ShowTargetLocalPlayerEnemyList();
	void ShowSpawnerInfo();
	void ShowPlayers();
	void ShowPlayerMoveSpeed();
	void ShowPalEggStatus();
	void ShowPalCount();
	void ShowObjectNameGround();
	void ShowObjectNameForward();
	void ShowMovementMode();
	void ShowMapObjectStatus();
	void ShowMapObjectFoliageStatus();
	void ShowMapObjectConnector();
	void ShowLocalSaveData();
	void ShowLaunchArguments();
	void ShowInviteCode();
	void ShowInvaderDeubgLog();
	void ShowHateArrow();
	void ShowFloorLocation();
	void ShowDialog(class FText Msg);
	void ShowDefenseAttackTarget();
	void ShowDefenseAttackableRange();
	void ShowDebugWorkAssignTarget();
	void ShowDebugWorkAssign();
	void ShowDebugWanted();
	void ShowDebugCrime();
	void ShowCharacterStatus();
	void ShowBuildObjectInstallCheck();
	void ShowAlert(class FText Msg);
	void ShowAISound();
	void ShowActionName();
	void ShowActionAndStatus_ToServer();
	void ShowActionAndStatus();
	void SetWorldPartitionLoadParameter(float Range, bool bIsActivated);
	void SetVoiceID(int32 VoiceID);
	void SetSunLightShadowDistance(float InDistance);
	void SetSanityToBaseCampPal(float Sanity);
	void SetPlayerSP(int32 NewSP);
	void SetPlayerHP(int32 NewHP);
	void SetPlayerCameraBoomLengthRate(float Rate);
	void SetPassive_PlayerWeapon(class FName FirstPassive, class FName SecondPassive, class FName ThirdPassive);
	void SetPalWorldTimeScale(float Rate);
	void SetPalWorldTime(int32 Hour);
	void SetPalEggStatusRange(float Range);
	void SetPaldexComplete(bool IsComplete);
	void SetOtomoPalWorkSpeedRank(int32 Rank);
	void SetOtomoPalRank(int32 Rank);
	void SetOtomoPalHPRank(int32 Rank);
	void SetOtomoPalDefenceRank(int32 Rank);
	void SetOtomoPalAttackRank(int32 Rank);
	void SetMultiplayRestriction(bool bRestriction);
	void SetMapObjectStatusRange(float Range);
	void SetLoadingSceneVisible(bool IsVisible);
	void SetInventoryItemDurability(float Percent);
	void SetGameTime_NextNight_SecondsAgo(int32 SecondsAgo);
	void SetGameTime_NextNight();
	void SetGameTime_NextDay_SecondsAgo(int32 SecondsAgo);
	void SetGameTime_NextDay();
	void SetFPSForServer(float Fps);
	void SetForceLocationTeleport(bool bForceLocationTeleport);
	void SetDisableInteractReticleTarget(bool bIsEnable);
	void SetDebugRespawnPointForPlayer(class APalPlayerCharacter* Character, const struct FVector& Location);
	void SetDebugFullStomachDecreaseRate(float Rate);
	void SetCharacterName(const class FString& Name);
	void SetCharacterMakeColor(const struct FColor& Color);
	void SetCharacterMakeAllRed();
	void SetCharacterMakeAllNormal();
	void SetCharacterMakeAllMin();
	void SetCharacterMakeAllMax();
	void SetCharacterMakeAllGreen();
	void SetCharacterMakeAllBlue();
	void SetBaseCampWorkerHpSingle(float Percentage);
	void SetBaseCampWorkerHp(float Percentage);
	void SetAlwaysGrantPassiveSkillMode(bool Flag);
	void SetActivity(const class FString& ConnStr, int32 MaxPlayer, int32 CurrentPlayer);
	void SendChatToBroadcast(const class FString& Text);
	void SaikyoGamePreset();
	void RideIKEnable();
	void RideIKDisable();
	void RespawnPlayer();
	void RerollCharacterMake();
	void RequestLogTreasureBoxLocalPlayerAround();
	void RequestFillSlotChestToInventory();
	void RequestFillSlotChestFromInventory();
	void RepairEquipment();
	void RandomizePassive_PlayerWeapon();
	void PrintInventoryDynamicItemLog();
	void PrintGameTime();
	void Ping(const class FString& Address);
	void ParallelForUpdateActiveTiles();
	void PalmiTargetEnemny();
	void OrderBaseCampWorker(enum class EPalMapBaseCampWorkerOrderType OrderType);
	void OpenTitleForBP();
	void OpenTitle();
	void OpenPrivateServerForBP();
	void OpenPrivateServer();
	void OpenMultiBattleMapForBP();
	void OpenMultiBattleMap();
	void OpenDefaultMap();
	void OnPingComplete(class UPingIP* PingIP, const class FString& Address, int32 TimeMS);
	void NotDecreaseWeaponItem();
	void NotConsumeMaterialsInCraft();
	void NotConsumeMaterialsInBuild();
	void MutekiForPlayer();
	void MutekiForFriend();
	void MutekiALL();
	void ManyUNKO();
	void LoginNative();
	void LoginEOS();
	void LogBaseCampInfo();
	void KillPlayer();
	void KillGuildFriend();
	void KillBaseCampWorkerSingle();
	void KillBaseCampWorker();
	void KillAllFriend();
	void KillAllEnemy();
	void KickPlayer(const class FString& PlayerUIdORSteamId, class FText KickReason);
	void JumpToClientStartLocation();
	void JoinInviteCode(const class FString& InviteCode);
	void JoinClientPlayerToServerGuild();
	bool IsShowCharacterStatus();
	bool IsNotDecreaseWeaponItem();
	bool IsNotConsumeMaterialsInBuild();
	bool IsMutekiForPlayer();
	bool IsMutekiForFriend();
	bool IsMutekiALL();
	bool IsIgnoreBuildRestrictionBaseCamp();
	bool IsFixedSP();
	bool IsDisableEnemyEyeSight();
	bool IsCaptureSuccessAlways();
	bool IsCaptureFailAlways();
	void IsAllStreamingCompleted();
	bool IsActionName();
	void InvaderMarchRandom();
	void InvaderMarch();
	void InstallVirtualBaseCamp();
	void InsightsTraceStopForServer();
	void InsightsTraceStopForLocal();
	void InsightsTraceStartForServer();
	void InsightsTraceStartForLocal();
	void InitInventory(class FName StaticItemId, int32 Count);
	void IgnoreRestrictedByItemsForPartnerSkill();
	void IgnoreBuildRestrictionBaseCamp();
	void HPOneAllCharacter();
	void HideTutorialQuest_BP();
	void HideTutorialQuest();
	void GetRelic(int32 Count);
	void GetPlanerPal();
	void GetPalEgg(class FName CharacterID);
	void GetItemWithPassiveSkill(class FName StaticItemId, int32 Count, class FName PassiveSkillId);
	void GetItemWithPassive(class FName StaticItemId, int32 Count);
	void GetItemToLoadoutWithPassive(class FName StaticItemId, int32 Count);
	void GetItemToLoadout(class FName StaticItemId, int32 Count);
	void GetItem(class FName StaticItemId, int32 Count);
	void GenerateCombiMonster();
	void FullPowerForPlayer();
	void ForceUpdateBaseCampWorkerEvent();
	void ForceSpawnRarePal();
	void ForceReportCriminal();
	void ForceReloadPlayerParameter();
	void ForceReleaseWanted();
	void ForceLowerSpecSetting();
	void ForceExitStageAllPlayer();
	void ForceExitStage();
	void ForceDisableTimerLight();
	void ForceDisablePalMeshCollision();
	void FootIKEnable();
	void FootIKDisable();
	void FixedUseEagleForGlider();
	void FixedSP();
	void FixedActionRandomSeed();
	void ExitGuildPlayer(const class FString& GuildName, class APalPlayerCharacter* Player);
	void ExitGuildLocalPlayer(const class FString& GuildName);
	void EnterGuildPlayer(const class FString& GuildName, class APalPlayerCharacter* Player);
	void EnterGuildLocalPlayer(const class FString& GuildName);
	void EnterGroup(const class FString& GroupName, const struct FPalInstanceID& IndividualId);
	void EnableStatUnit();
	void EnableStatPlayerInfo();
	void EnableStatPalnet();
	void EnableCommandToServer();
	void EnableCollectServerPalCount();
	void EasyGamePreset();
	void DropItems(class FName StaticItemId, int32 Num, int32 DropCount);
	void DropItemByTimer(class FName StaticItemId, int32 Num, float Interval);
	void DropItem(class FName StaticItemId, int32 Num);
	void DrawDebugRangeBaseCamp(float LifeTime);
	void DrawDebugLimitVolume(enum class EPalLimitVolumeFlag Flag, float Range, float Duration);
	void DisposeGuild(const class FString& GuildName);
	void DismantleBaseCampFirst();
	void DismantleBaseCampByBaseCampId(struct FGuid& BaseCampId);
	void DisableScreenMessage();
	void DisableEnemyEyeSight();
	void DeleteWorldAndShutdownRemoteServer();
	void DeletePlayerAndQuitGame();
	void DebugWindow();
	void DebugSaveWorldOptionData(const class FString& WorldName);
	void DebugSaveWorldData(const class FString& SaveName);
	void DebugSaveLocalWorldData(const class FString& SaveName);
	void DebugSaveFullWorldData(const class FString& WorldName);
	void DebugDeleteEnemyCampSaveData();
	void DebugChangeAutoSaveTimespan(float SaveSpan);
	void DebugAutoSave();
	void DebugAutoRun();
	void CreateGuildWithAdmin(const class FString& GuildName, struct FGuid& AdminPlayerUId);
	void CreateGuildAndEnterLocalPlayer(const class FString& GuildName);
	void CreateGuild(const class FString& GuildName);
	void CountPalCharacter();
	void CopyWorldDirectoryName();
	void CopyPlayerLocation();
	void CommandToServer(const class FString& Command);
	void CleatDebugInfoText();
	void CheckFoliageChunkStatus(bool bShowInstanceDetail, bool bShowGridDetail);
	void ChangePassive_PlayerWeapon(int32 Index, class FName SkillName);
	void ChangeHUDScale(float Scale);
	void CauseServerCrash();
	void CauseEnsure();
	void CauseCrash();
	void CaptureSuccessAlways();
	void CaptureNewMonster(class FName CharacterID);
	void CaptureFailAlways();
	void CaptureAllMonsters();
	void CaptureAllEnemy();
	void BuildNotConsumeMaterials();
	void BuildDebugBaseCamp(class FName Mode);
	void BotOn();
	void BotOff();
	void ApplyDebugGameProgress(class FName PresetName);
	void AddTechnologyPoints(int32 AddPoints);
	void AddPlayerExp(int32 AddExp);
	void AddPartyExp(int32 AddExp);
	void AddOneStatusPlayer();
	void AddOneStatusOtomo();
	void AddOneStatusEnemy();
	void AddMoney(int64 AddValue);
	void AddMapObjectEffectVisualAround_Burn(float Range);
	void AddMapObjectEffectVisualAround(float Range, enum class EPalMapObjectVisualEffectType EffectType);
	void AddGameTime_Minutes(int32 Minutes);
	void AddGameTime_Hours(int32 Hours);
	void AddExpForALLPlayer(int32 AddExp);
	void AddBossTechnologyPoints(int32 AddPoints);
	void AddBaseCampEnergyAmount(enum class EPalEnergyType EnergyType, float Amount);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalClimbingComponent
class UPalClimbingComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalClimbingComponent* GetDefaultObj();

	void StartClimb(struct FHitResult& Result);
	void ForceCancelClimb();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalCombiMonsterParameter
class UPalCombiMonsterParameter : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalCombiMonsterParameter* GetDefaultObj();

};

// 0x14F0 (0x1640 - 0x150)
// Class Pal.PalComboBoxString
class UPalComboBoxString : public UWidget
{
public:
	TArray<class FString>                        DefaultOptions;                                    // 0x150(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                SelectedOption;                                    // 0x160(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FComboBoxStyle                        WidgetStyle;                                       // 0x170(0x660)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FTableRowStyle                        ItemStyle;                                         // 0x7D0(0xD50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMargin                               ContentPadding;                                    // 0x1520(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MaxListHeight;                                     // 0x1530(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasDownArrow;                                      // 0x1534(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableGamepadNavigationMode;                       // 0x1535(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateFontInfo                        Font;                                              // 0x1538(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           ForegroundColor;                                   // 0x1598(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsFocusable;                                      // 0x15AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           OnGenerateWidgetEvent;                             // 0x15B0(0x10)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGenerateTopWidgetEvent;                          // 0x15C0(0x10)(Edit, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectionChanged;                                // 0x15D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOpening;                                         // 0x15E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E2[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalComboBoxString* GetDefaultObj();

	void SetSelectedOption(const class FString& Option);
	void SetSelectedIndex(int32 Index);
	bool RemoveOption(const class FString& Option);
	void RefreshOptions();
	void OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, enum class ESelectInfo SelectionType);
	void OnOpeningEvent__DelegateSignature();
	bool IsOpen();
	class FString GetSelectedOption();
	int32 GetSelectedIndex();
	int32 GetOptionCount();
	class FString GetOptionAtIndex(int32 Index);
	int32 FindOptionIndex(const class FString& Option);
	void ClearSelection();
	void ClearOptions();
	void AddOption(const class FString& Option);
};

// 0x0 (0x1510 - 0x1510)
// Class Pal.PalCommonBoundActionButton
class UPalCommonBoundActionButton : public UCommonBoundActionButton
{
public:

	static class UClass* StaticClass();
	static class UPalCommonBoundActionButton* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalCommonScrollListBase
class UPalCommonScrollListBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalCommonScrollListBase* GetDefaultObj();

	void MoveItem(int32 Num, class UPalItemSlot* MoveItemSlot, struct FPalContainerId& TargetContainerId);
};

// 0x0 (0x158 - 0x158)
// Class Pal.PalCommonUIActionRouter
class UPalCommonUIActionRouter : public UCommonUIActionRouterBase
{
public:

	static class UClass* StaticClass();
	static class UPalCommonUIActionRouter* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalContainerBase
class UPalContainerBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnDisposeContainerDelegate;                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalContainerId                       ID;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalContainerOperationRestrictType OperationRestrictType;                             // 0x48(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalContainerBase* GetDefaultObj();

	bool IsEmpty();
	struct FPalContainerId GetId();
	void DisposeContainerDelegate__DelegateSignature();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalContainerUtility
class UPalContainerUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalContainerUtility* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalCoopClimbPlayer
class UPalCoopClimbPlayer : public UObject
{
public:
	class APalCharacter*                         Player;                                            // 0x28(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalAnimInstance*                      PlayerAnime;                                       // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<enum class EHumanBone>                BoneChain;                                         // 0x38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        CurrentIndex;                                      // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2805[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TargetWorldTf;                                     // 0x50(0x60)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Progress;                                          // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         Complete;                                          // 0xB4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2806[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            StartStandAnimeDelegate;                           // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2807[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCoopClimbPlayer* GetDefaultObj();

	struct FTransform UpdateTransform(const struct FTransform& Climber, float ProgressSpeed, float LeapPosSpeed, float LeapRotateSpeed, float DeltaTime);
	void StartStandAnimeDelegate__DelegateSignature();
	void InitializeNode(enum class EHumanBone EntryBone, class APalCharacter* PlayerCharacter, const struct FTransform& Climber);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalCoopSkillModuleBase
class UPalCoopSkillModuleBase : public UObject
{
public:
	enum class EPalLogType                       ExecuteLog;                                        // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2810[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APalCharacter*                         OwnerCharacter;                                    // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCoopSkillModuleBase* GetDefaultObj();

	void Start();
	void SetTrainerCoopFlag(bool IsCoop);
	void OnTick(float DeltaTime);
	void OnStartSkill();
	void OnSkillOverheat();
	void OnInitialized();
	void Initialize(class UPalPartnerSkillParameterComponent* PartnerSkillComponent);
	int32 GetOwnerRank();
	class APalCharacter* GetOwner();
	void AddSkillLog();
	void Abort();
};

// 0x18 (0x50 - 0x38)
// Class Pal.PalCoopSkillModuleAssignPassiveSkill
class UPalCoopSkillModuleAssignPassiveSkill : public UPalCoopSkillModuleBase
{
public:
	TArray<struct FPalCoopSkillModuleAssignPassiveSkillNames> AssignSkillNamesPerRank;                           // 0x38(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  PassiveSkillAssignFlagName;                        // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCoopSkillModuleAssignPassiveSkill* GetDefaultObj();

	void RemovePassiveSkills();
	void AssignPassiveSkills(TArray<struct FPalDataTableRowName_PassiveSkillData>& AssignSkillName);
	void AssignPassiveSkill(class FName& SkillName);
};

// 0x70 (0x98 - 0x28)
// Class Pal.PalCoopSkillSearchBase
class UPalCoopSkillSearchBase : public UObject
{
public:
	TArray<float>                                SearchRangeMaxByRank;                              // 0x28(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                ExtendRangePerSecByRank;                           // 0x38(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SearchOrigin;                                      // 0x48(0x18)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SearchRangeMax;                                    // 0x60(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ExtendRangePerSec;                                 // 0x64(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ElapsedTime;                                       // 0x68(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SkillRank;                                         // 0x6C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 CalledPlayerUId;                                   // 0x70(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsRunning;                                        // 0x80(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_283B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalCoopSkillSearchResultParameter> SearchResultParameters;                            // 0x88(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchBase* GetDefaultObj();

	void Tick(float DeltaTime, class UPalCoopSkillSearchLocationRegister* LocationRegister);
	void Terminate();
	void Start(struct FVector& Origin, int32 Rank, struct FGuid& RequestPlayerUId);
	void OnRemoveLocationForCompass_BP(struct FGuid& LocationId, class UPalLocationBase* Location);
	void OnRemoveLocationForCompass(struct FGuid& LocationId, class UPalLocationBase* Location);
	void OnAddedLocationForCompass_BP(struct FGuid& LocationId, class UPalLocationBase* Location);
	void OnAddedLocationForCompass(struct FGuid& LocationId, class UPalLocationBase* Location);
	bool IsRunning();
	bool IsFinished();
	float GetSearchRangeMax();
	float GetSearchRangeByRank(int32 Rank);
	int32 GetRank();
	struct FVector GetOrigin();
	float GetExtendSearchRangePerSec();
	float GetExtendRangePerSecByRank(int32 Rank);
	float GetCurrentSearchRadius();
	void End();
	void ClearSearchResultParameters();
	void AddSearchResultParameter(struct FPalCoopSkillSearchResultParameter& ResultParameter);
};

// 0x0 (0x98 - 0x98)
// Class Pal.PalCoopSkillSearchCharacter
class UPalCoopSkillSearchCharacter : public UPalCoopSkillSearchBase
{
public:

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchCharacter* GetDefaultObj();

	void SearchMonsters(struct FVector& Origin, float SearchRadius, struct FGuid& RequestPlayerUId);
};

// 0x0 (0x98 - 0x98)
// Class Pal.PalCoopSkillSearchDungeonPortal
class UPalCoopSkillSearchDungeonPortal : public UPalCoopSkillSearchBase
{
public:

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchDungeonPortal* GetDefaultObj();

	void SearchDungeonPortal(struct FVector& Origin, float SearchRadius, struct FGuid& RequestPlayerUId);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalCoopSkillSearchEffectController
class UPalCoopSkillSearchEffectController : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchEffectController* GetDefaultObj();

	void Tick(float DeltaTime);
	void Start(struct FVector& Origin, float RadiusFrom, float RadiusTo, float ExtRadiusPerSec);
	bool IsRunning();
	bool IsFinished();
	void End();
};

// 0xB8 (0xE0 - 0x28)
// Class Pal.PalCoopSkillSearchLocationRegister
class UPalCoopSkillSearchLocationRegister : public UObject
{
public:
	TArray<struct FGuid>                         RegisteredLocationIds;                             // 0x28(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, float>                    RegisteredLocationElapsedSec;                      // 0x38(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	float                                        LocationDisplayTimeSec;                            // 0x88(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2852[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchLocationRegister* GetDefaultObj();

	void UnregisterMapObjectLocationsFromCompass(struct FGuid& Guiid);
	void RegisterMapObjectLocationsToCompass(struct FPalCoopSkillSearchResultParameter& ResultParameter);
};

// 0x0 (0x98 - 0x98)
// Class Pal.PalCoopSkillSearchMapObject
class UPalCoopSkillSearchMapObject : public UPalCoopSkillSearchBase
{
public:

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchMapObject* GetDefaultObj();

	void SearchMapObjects(TArray<class FName>& SearchMapObjIds, struct FVector& Origin, float SearchRadius, struct FGuid& RequestPlayerUId);
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalCoopSkillSearchSystem
class UPalCoopSkillSearchSystem : public UObject
{
public:
	uint8                                        Pad_286E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalCoopSkillSearchEffectController> EffectControllerClass;                             // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalCoopSkillSearchLocationRegister*   LocationRegister;                                  // 0x38(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalCoopSkillSearchEffectController*   EffectController;                                  // 0x40(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalCoopSkillSearchBase*>       SearchObjects;                                     // 0x48(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCoopSkillSearchSystem* GetDefaultObj();

	void StartSearchEffect(struct FPalCoopSkillSearchEffectParameter& EffectParam);
	class UPalCoopSkillSearchBase* CreateSearchObject(TSubclassOf<class UPalCoopSkillSearchBase> SearchClass);
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalCopyMeshVisualEffect
class APalCopyMeshVisualEffect : public AActor
{
public:
	class UCapsuleComponent*                     RootCapsule;                                       // 0x290(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalPoseableMeshComponent*             PoseableSkeletalMeshComponent;                     // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalCopyMeshVisualEffect* GetDefaultObj();

	void Setup(class USkeletalMeshComponent* MeshComponent);
	TArray<class UMaterialInstanceDynamic*> GetMainMeshMaterials();
	class USkinnedMeshComponent* GetMainMesh();
	void GetAllMesh(TArray<class USceneComponent*>* OutComponent);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalCryComponentBase
class UPalCryComponentBase : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalCryComponentBase* GetDefaultObj();

};

// 0x28 (0x430 - 0x408)
// Class Pal.PalCustomPrimitiveWidget
class UPalCustomPrimitiveWidget : public UPalUserWidget
{
public:
	class USlateBrushAsset*                      SlateBrush;                                        // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalUMGCustomVertexData>       VertexData;                                        // 0x410(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                VertexIndexes;                                     // 0x420(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalCustomPrimitiveWidget* GetDefaultObj();

	void UpdateVertexData(int32 Index, struct FPalUMGCustomVertexData& InVertexData);
	void PushVertexData(struct FPalUMGCustomVertexData& InVertexData);
	void DrawVertexData(struct FPaintContext& Context);
};

// 0x8 (0x310 - 0x308)
// Class Pal.PalCutsceneActor
class APalCutsceneActor : public ALevelSequenceActor
{
public:
	float                                        OpeningFadeOutDelay;                               // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpeningFadeOutTime;                                // 0x30C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalCutsceneActor* GetDefaultObj();

	void OnPrePlayCutscene();
	void OnFinishedCutscene();
};

// 0x48 (0xE8 - 0xA0)
// Class Pal.PalCutsceneComponent
class UPalCutsceneComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnPlayCutsceneDelegate;                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishCutsceneDelegate;                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APalCutsceneActor*                     CutsceneActor;                                     // 0xC0(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHUDDispatchParameter_FadeWidget*   FadeParam;                                         // 0xD0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalCutsceneComponent* GetDefaultObj();

	void StopCutsceneToServer();
	void StopCutscene();
	void StartFadeOut();
	class APalCutsceneActor* SpawnCutsceneActor(TSubclassOf<class APalCutsceneActor> CutsceneActorClass, const struct FVector& Location, const struct FRotator& Rotation, class AActor* Owner);
	void PlayCutsceneToServer();
	void PlayCutscene(class APalCutsceneActor* InCutsceneActor, bool IsAutoDestroy);
	void OnFinished();
	void OnEndFadeOut();
	bool IsPlayingCutscene();
	void CutsceneFinishDelegate__DelegateSignature(bool bIsSkipped);
	void CutsceneDelegate__DelegateSignature();
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalDamageDisplayCanvas
class UPalDamageDisplayCanvas : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalDamageDisplayCanvas* GetDefaultObj();

	int32 CalcDisplayDamage(struct FPalDamageInfo& DamageInfo, class AActor* Defender, float* OutSpecialDamageRate, int32* WeakCount);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalHitEffectSlot
class UPalHitEffectSlot : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalHitEffectSlot* GetDefaultObj();

	void PlayHitEffect(struct FPalDamageInfo& Info);
	void Initialize();
};

// 0x28 (0xC8 - 0xA0)
// Class Pal.PalDamageExplodeComponent
class UPalDamageExplodeComponent : public UActorComponent
{
public:
	uint8                                        Pad_28FF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExplosionDelayTime;                                // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2900[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDamageDelegate_Ex;                               // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         IsExploded;                                        // 0xC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2903[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDamageExplodeComponent* GetDefaultObj();

	void SpawnExplosionActor_Delay(class AActor* Attacker, float DelayTime);
	void SpawnExplosionActor(class AActor* Attacker);
	void OnDamageDelegate_Ex__DelegateSignature(const struct FPalDamageInfo& DamageInfo);
	void ForceExplode(class AActor* Attacker);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalDamageInfoUtility
class UPalDamageInfoUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalDamageInfoUtility* GetDefaultObj();

	float GetSpecialAttackRate(struct FPalDamageInfo& DamageInfo, enum class EPalSpecialAttackRateType Type);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalDamagePopUpManager
class UPalDamagePopUpManager : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnAddDamagePopupDelegate;                          // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDamagePopUpManager* GetDefaultObj();

	void AddDamagePopupDelegate__DelegateSignature(struct FPalDamageInfo& DamageInfo, class AActor* Defender);
	void AddDamagePopUp(struct FPalDamageInfo& DamageInfo, class AActor* Defender);
};

// 0xD8 (0x178 - 0xA0)
// Class Pal.PalDamageReactionComponent
class UPalDamageReactionComponent : public UActorComponent
{
public:
	uint8                                        Pad_2938[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDamageDelegate;                                  // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDamageDelegate_Always;                           // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDeadDelegate;                                    // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDyingDeadEndDelegate;                            // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMentalDamageDelegate;                            // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSleepDelegate;                                   // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDamageReactionDelegate;                          // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEachDamageReactionDelegate;                      // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSlipDamageDelegate;                              // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCaptureStartDelegate;                            // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNooseTrapDelegate;                               // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalHitEffectSlot>         DamageEffectSlotClass;                             // 0x158(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalHitEffectSlot*                     EffectSlot;                                        // 0x160(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                RateList;                                          // 0x168(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDamageReactionComponent* GetDefaultObj();

	void SlipDamageAndBlowWhenDead(int32 Damage, const struct FVector& Velocity);
	void SlipDamage(int32 Damage, bool ShieldIgnore);
	void ProcessDeath_ToServer();
	void ProcessDamage_ToServer(struct FPalDamageInfo& Info);
	void PopupDamageBySlipDamage_ToALL(int32 Damage);
	void PlayEachDamageReaction(const struct FPalEachDamageRactionInfo& EachReactionInfo);
	void PlayDamageReaction(const struct FPalDamageRactionInfo& ReactionInfo);
	void PlayAddDamageMotion(enum class EPalDamageAnimationReactionType ReactionType);
	void OnSlipDamageDelegate__DelegateSignature(int32 Damage);
	void OnSleepDelegate__DelegateSignature(int32 LastDamage);
	void OnNooseTrapDelegate__DelegateSignature(class AActor* TrapActor, const struct FVector& FixLocation);
	void OnMentalDamageDelegate__DelegateSignature(const struct FPalDamageResult& DamageResult);
	void OnHitNooseTrap(class AActor* TrapActor, const struct FVector& FixLocation);
	void OnEndDamageMotion(class UAnimMontage* Montage, bool bInterrupted);
	void OnEachDamageReactionDelegate__DelegateSignature(const struct FPalEachDamageRactionInfo& EachReactionInfo);
	void OnDyingDeadEndDelegate_ToALL();
	void OnDyingDeadEnd__DelegateSignature(class APalPlayerCharacter* PlayerCharacter);
	void OnDeadDelegate__DelegateSignature(const struct FPalDeadInfo& DeadInfo);
	void OnDamageReactionDelegate__DelegateSignature(const struct FPalDamageRactionInfo& ReactionInfo);
	void OnDamageDelegate__DelegateSignature(const struct FPalDamageResult& DamageResult);
	void OnCaptureStartDelegate__DelegateSignature();
	void ForceDamageDelegateForCaptureBall(class AActor* Attacker);
	void DeathDamage_ForSelfDestruct(const struct FVector& Velocity, enum class EPalWazaID WazaID);
	void CallOnDamageDelegateAlways(const struct FPalDamageResult& DamageResult);
	void CallDeadDelegate_ToALL(const struct FPalDeadInfo& DeadInfo);
	void ApplyDamageForMP(const struct FPalDamageResult& DamageResult);
	void ApplyDamageForHP(const struct FPalDamageResult& DamageResult);
	void ApplyDamageForDyingHP(const struct FPalDamageResult& DamageResult);
	void AddDeadImplus(const struct FPalDamageResult& DamageResult);
};

// 0x20 (0x428 - 0x408)
// Class Pal.PalDamageText
class UPalDamageText : public UPalUserWidget
{
public:
	struct FVector2D                             RandomPositionMin;                                 // 0x408(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             RandomPositionMax;                                 // 0x418(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDamageText* GetDefaultObj();

};

// 0x138 (0x160 - 0x28)
// Class Pal.PalDatabaseCharacterParameter
class UPalDatabaseCharacterParameter : public UObject
{
public:
	TMap<class FName, TSubclassOf<class UPalAIResponsePreset>> AIResponsePresetMap;                               // 0x28(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FName, TSubclassOf<class UPalAISightResponsePreset>> AISightResponsePresetMap;                          // 0x78(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalPettingPresset>        PettingPressetClass;                               // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PlayerParameterDataTable;                          // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            MonsterParameterDataTable;                         // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            HumanParameterDataTable;                           // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            DropItemDataTable;                                 // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            MonsterNameDataTable;                              // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            HumanNameDataTable;                                // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            CharacterIconDataTable;                            // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BPClassDataTable;                                  // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PartnerSkillDataTable;                             // 0x110(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PalSizeParameterDataTable;                         // 0x118(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PalCapturedCageDataTable;                          // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PalStatusEffectFoodDataTable;                      // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PalCombiUniqueDataTable;                           // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29D4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                TalentMagnificationList;                           // 0x140(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UPalPettingPresset*                    PettingPressetInstance;                            // 0x150(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalCombiMonsterParameter*             CombiMonsterParameter;                             // 0x158(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDatabaseCharacterParameter* GetDefaultObj();

	void UpdateApplyDatabaseToIndividualParameter(class UPalIndividualCharacterParameter* IndividualParameter);
	bool SetupSaveParameter(class FName CharacterID, int32 Level, struct FGuid& OwnerPlayerUId, struct FPalIndividualCharacterSaveParameter* OutParameter);
	int32 HigherLevelOtomoFromTrainer(class UPalIndividualCharacterParameter* IndividualCharacterParameter);
	void GetWorkSuitabilityRank(class FName RowName, TMap<enum class EPalWorkSuitability, int32>* WorkSuitabilities);
	void GetWorkSuitabilityMaterialSubTypes(class FName RowName, TArray<enum class EPalMapObjectMaterialSubType>* MaterialSubTypes);
	void GetWorkSuitability(class FName RowName, TArray<enum class EPalWorkSuitability>* WorkSuitabilities);
	enum class EPalWeaponType GetWeaponType(class FName RowName);
	bool GetWeaponEquip(class FName RowName);
	int32 GetViewingDistance_cm(class FName RowName);
	int32 GetViewingAngle_Degree(class FName RowName);
	enum class EPalTribeID GetTribe(class FName RowName);
	int32 GetSupportBySaveParameter(struct FPalIndividualCharacterSaveParameter& SaveParameter);
	int32 GetSupport(class UPalIndividualCharacterParameter* IndividualParameter);
	enum class EPalSizeType GetSize(class FName RowName);
	int32 GetShotAttackBySaveParameter(struct FPalIndividualCharacterSaveParameter& SaveParameter);
	int32 GetShotAttack(class UPalIndividualCharacterParameter* IndividualParameter);
	int32 GetRarity(class FName RowName);
	float GetPriceRate(class FName RowName);
	void GetPrefixNameMsgID(class FName& CharacterID, class FName* OutMsgID);
	class UPalPettingPresset* GetPettingPreset();
	void GetPassiveSkill(class FName RowName, TArray<class FName>* PassiveSkill);
	void GetPartnerSkillMsgID(class FName& CharacterID, class FName* OutMsgID);
	enum class EPalOrganizationType GetOrganizationType(class FName RowName);
	bool GetNocturnal(class FName RowName);
	int32 GetMeleeAttackBySaveParameter(struct FPalIndividualCharacterSaveParameter& SaveParameter);
	int32 GetMeleeAttack(class UPalIndividualCharacterParameter* IndividualParameter);
	void GetLocalizedCharacterName(class FName& CharacterID, class FText* OutText);
	bool GetIsTowerBoss(class FName RowName);
	bool GetIsPal(class FName RowName);
	bool GetIsBoss(class FName RowName);
	int32 GetHPBySaveParameter(struct FPalIndividualCharacterSaveParameter& SaveParameter);
	int32 GetHP(class UPalIndividualCharacterParameter* IndividualParameter);
	float GetHearingRate(class FName RowName);
	enum class EPalGenusCategoryType GetGenusCategory(class FName RowName);
	int32 GetFoodAmount(class FName RowName);
	float GetExpRatio(class FName RowName);
	void GetElementType(class FName RowName, enum class EPalElementType* Element1, enum class EPalElementType* Element2);
	bool GetDropItemData(class FName& CharacterID, int32 Level, struct FPalDropItemDatabaseRow* OutData);
	int32 GetDefenseBySaveParameter(struct FPalIndividualCharacterSaveParameter& SaveParameter);
	int32 GetDefense(class UPalIndividualCharacterParameter* IndividualParameter);
	TArray<struct FPalWorkSuitabilityInfo> GetCraftSpeeds(class UPalIndividualCharacterParameter* IndividualParameter);
	int32 GetCraftSpeedBySaveParameter(struct FPalIndividualCharacterSaveParameter& SaveParameter);
	int32 GetCraftSpeed(class UPalIndividualCharacterParameter* IndividualParameter);
	struct FSoftObjectPath GetCharacterIconTexturePath(class FName CharacterID);
	TSoftObjectPtr<class UTexture2D> GetCharacterIconTextureByTribeID(enum class EPalTribeID TribeID);
	TSoftObjectPtr<class UTexture2D> GetCharacterIconTexture(class FName CharacterID);
	float GetCaptureRateCorrect(class FName RowName);
	class FName GetBPClassName(class FName RowName);
	TSoftClassPtr<class APalCharacter> GetBPClass(class FName RowName);
	enum class EPalBattleBGMType GetBattleBGM(class FName RowName);
	bool FindPalSizeParameter(enum class EPalSizeType CharacterSize, struct FPalSizeParameterDataRow* RowData);
	int32 CalcCorrectedLevel(int32 TrainerLevel, int32 TargetCharacterLevel, class UObject* WorldContextObject);
};

// 0x60 (0x88 - 0x28)
// Class Pal.PalDataTableRowIdMapper
class UPalDataTableRowIdMapper : public UObject
{
public:
	TArray<class UDataTable*>                    DataTables;                                        // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, int32>                     RowNameHashMap;                                    // 0x38(0x50)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalDataTableRowIdMapper* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalDeadBodyManager
class UPalDeadBodyManager : public UObject
{
public:
	TArray<class UPalIndividualCharacterHandle*> DeadPalList;                                       // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDeadBodyManager* GetDefaultObj();

	void GetDeadPalList(TArray<class UPalIndividualCharacterHandle*>* OutArray);
};

// 0x60 (0x88 - 0x28)
// Class Pal.PalDeathPenaltyManager
class UPalDeathPenaltyManager : public UObject
{
public:
	float                                        StageDeathPenaltyRayStartHeight;                   // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StageDeathPenaltyChestRadius;                      // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StageDeathPenaltySpaceWidth;                       // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StageDeathPenaltySpaceDepth;                       // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FPalDeathPenaltyList> DeathPenaMap;                                      // 0x38(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDeathPenaltyManager* GetDefaultObj();

	void DropDeathPenaltyChest(class APalPlayerCharacter* Player);
};

// 0x10 (0x40 - 0x30)
// Class Pal.PalDebugInfoGameInstanceSubsystem
class UPalDebugInfoGameInstanceSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_29EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFont*                                 FontObject;                                        // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDebugInfoGameInstanceSubsystem* GetDefaultObj();

};

// 0x450 (0x478 - 0x28)
// Class Pal.PalDebugSetting
class UPalDebugSetting : public UObject
{
public:
	bool                                         bEnableCommandToServer;                            // 0x28(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalLanguageType                  EditorPlayTextLanguageType;                        // 0x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRequiredLoadPlayerSaveData;                      // 0x2A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F1[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DefaultLoadPlayerSaveDataName;                     // 0x30(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRequiredLoadWorldSaveData;                       // 0x40(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DefaultLoadWorldSaveDataName;                      // 0x48(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRequiredLoadLocalWorldSaveData;                 // 0x58(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FGuid>                    EditorPlayerSaveDataOverwriteMap;                  // 0x60(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	class FString                                PlayerAutoSaveDataName;                            // 0xB0(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WorldAutoSaveDataName;                             // 0xC0(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontAutoSaveInMulti;                              // 0xD0(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EditorSaveDirectoryName;                           // 0xD4(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoSaveSpan;                                      // 0xDC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoSaveEnable;                                    // 0xE0(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoSetTruePalMainStats;                          // 0xE1(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalDataTableRowName_GameProgressPreset PlayerDefaultPreset;                               // 0xE4(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerLevel;                                       // 0xEC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ForceFixLevelForWildPal;                           // 0xF0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ForceFixTalent;                                    // 0xF4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalDebugOtomoPalInfo>         DefaultOtomoPal;                                   // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FPalDebugPalCaptureInfo>       DefaultCapturePalInfos;                            // 0x108(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                        DefaultCapturePalRandomNum;                        // 0x118(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalDebugItemCreateInfo>       DefaultItem;                                       // 0x120(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FPalDebugItemCreateInfo>       DefaultLoadoutItem;                                // 0x130(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                        PlayStart_PalWorldTime;                            // 0x140(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DebugRate_PalWorldTime;                            // 0x144(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreOverWeightMove;                             // 0x148(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableReticleShoot;                            // 0x149(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEquipDefaultWeapon;                               // 0x14A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGetAllBulletItems;                                // 0x14B(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreItemDurabilityDecrease;                     // 0x14C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotConsumeMaterialsInRepair;                      // 0x14D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMutekiALL;                                      // 0x14E(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMutekiForPlayer;                                // 0x14F(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMutekiForFriend;                                // 0x150(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableDeathPenalty;                              // 0x151(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreRespawnTimer;                               // 0x152(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableDyingCountdown;                          // 0x153(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFixedSP;                                        // 0x154(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisiablePlayerShield;                             // 0x155(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFullPowerForPlayer;                             // 0x156(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCaptureSuccessAlways;                           // 0x157(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCaptureFailAlways_BounceBall;                   // 0x158(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowActionName;                                 // 0x159(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowCharacterStatus;                            // 0x15A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowCharacterTickInfo;                          // 0x15B(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWazaCoolTimeFast;                               // 0x15C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowUseRootMotion;                              // 0x15D(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableClimbing;                                 // 0x15E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableFallDamage;                              // 0x15F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowPlayerFallHeight;                           // 0x160(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowGroundObjectName;                           // 0x161(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowForwardObjectName;                          // 0x162(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableStatus_Darkness;                           // 0x163(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsIgnoreBuildRestrictionBaseCamp;                 // 0x164(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalMovementSpeedType             ConfirmTransportItemBaseSpeedType;                 // 0x165(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConfirmTransportItemSpeedMultipleRate;             // 0x168(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotConsumeMaterialsInBuild;                       // 0x16C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BuildRequiredWorkAmount;                           // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableEnemyEyeSight;                           // 0x174(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableNPCDrawRaycastDebug;                      // 0x175(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHideScreenMessage;                              // 0x176(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHungerDisable;                                  // 0x177(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAllRecipeUnlock;                                // 0x178(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotDecreaseWeaponItem;                            // 0x179(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotRequiredBulletWhenReload;                      // 0x17A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowReticleLocation;                              // 0x17B(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAutoAimInfo;                                  // 0x17C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableMouseAutoAim;                             // 0x17D(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29FD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MouseSensitivityRate;                              // 0x180(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureFPS;                                        // 0x184(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableDropItem;                                // 0x188(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDropItemHitEvent;                             // 0x189(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrintLogGroupsWhenGroupOperated;                  // 0x18A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSoundRangeVisual;                               // 0x18B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsToggleHUDWhenEject;                             // 0x18C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLookAtDisable;                                  // 0x18D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPalBoxInLevelBelongingToServerPlayer;             // 0x18E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateGameInstanceViewActor;                      // 0x18F(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFixedLightingControllerTime;                    // 0x190(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A00[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LightingControllerTimeIfFixed;                     // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowFloorLocation;                              // 0x198(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowGroundTilt;                                 // 0x199(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableShiftKey;                                // 0x19A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpawnAlwaysFromSpawner;                          // 0x19B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisableSpawner;                                  // 0x19C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A02[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideSpawnRadius;                               // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverrideDespawnRadius;                             // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPlayerCompleteSTEALTH;                          // 0x1A8(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowEnemyHate;                                  // 0x1A9(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowEnemyHateArrow;                             // 0x1AA(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowTargetLocalPlayerList;                      // 0x1AB(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowMovementMode;                               // 0x1AC(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowOrganization;                               // 0x1AD(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanAccessToOtherGuildMapObject;                   // 0x1AE(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFirstBuildPalBox;                                 // 0x1AF(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkExtraRate;                                     // 0x1B0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableFootIK;                                  // 0x1B4(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBuildInstallCheckLookToCamera;                    // 0x1B5(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBuildFXDebugLog;                                  // 0x1B6(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDamageTextStack;                                  // 0x1B7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFootStepNotify_DebugDisplay;                      // 0x1B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipBossCutscene;                                 // 0x1B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowRangeDistributeExpAround;                     // 0x1BA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotDropOtomoAtPlayerDeath;                        // 0x1BB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotDropItemsAtPlayerDeath;                        // 0x1BC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableDebugMoveSpeed;                             // 0x1BD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceToggleDash;                                  // 0x1BE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugAutoRun;                                     // 0x1BF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawPlayerInDoor;                                 // 0x1C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A07[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerPalStoragePage;                              // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowPlayerMoveSpeed;                               // 0x1C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSwimming_DebugDisplay;                            // 0x1C9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSwimming_NoDecreaseSP;                            // 0x1CA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPartnerSkill_DebugDisplay;                        // 0x1CB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPartnerSkill_NoDecrease;                          // 0x1CC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A09[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PartnerSkill_CooldownSpeedRate;                    // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PartnerSkill_IgnoreRestrictedByItems;              // 0x1D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotConsumeMaterialsInCraft;                       // 0x1D5(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSelectableRecipeWhenNothingMaterials;             // 0x1D6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreWorkableElementType;                        // 0x1D7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreWorkableGenusCategories;                    // 0x1D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebugWorkAssign;                              // 0x1D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebugWorkAssignTarget;                        // 0x1DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceRunInWork;                                   // 0x1DB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bContinueSpeedInTransportWork;                     // 0x1DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotInterruptTransportingWork;                     // 0x1DD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrintLogWorkerEventDetail;                        // 0x1DE(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A0D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseCampWorkerEventTriggerInterval;                // 0x1E0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreBaseCampTask;                                // 0x1E4(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBaseCampSpawnLevelMax;                            // 0x1E5(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBaseCampWorkerSanityDetail;                       // 0x1E6(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A0F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseCampWorkerEatTime;                             // 0x1E8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBaseCampShowCannotTransportTarget;                // 0x1EC(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A11[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalArrowSettings                     BaseCampCannotTransportTargetArrowSettings;        // 0x1F0(0xC)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bBaseCampMoveModeTeleportForce;                    // 0x1FC(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A12[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FallBackDefense;                                   // 0x200(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugLogWorldSecurity;                            // 0x204(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugLogEnableCriminal;                           // 0x205(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugLogEnableWanted;                             // 0x206(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugLogEnableCriminalPlayer;                     // 0x207(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebugWantedSpawnerSphere;                     // 0x208(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTransportGrantedMonsterToPalBox;                  // 0x209(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvaderDisable;                                   // 0x20A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A13[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugSpawnWildPal_DistanceFromPlayer;              // 0x20C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalStatusID                      DebugAddStatus;                                    // 0x210(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisplayDebug_PassiveSkill;                      // 0x211(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPassiveSkillStatus;                           // 0x212(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A16[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowPassiveSkillStatusRange;                       // 0x214(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnorePalPassiveSkill;                            // 0x218(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A17[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalDataTableRowName_PassiveSkillData> PalPassiveSkillOverride;                           // 0x220(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bGrantPassiveSkillAlways;                          // 0x230(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A18[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPalDataTableRowName_PalMonsterData, struct FPalDebugAttachPassiveSkillInfo> PassiveSkill_AttachSkill;                          // 0x238(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	bool                                         bPassiveSkill_CollectItem_10Sec;                   // 0x288(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPassiveSkill_LifeSteal_DisplayRecoverHp;          // 0x289(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLogMapObjectFailedSpawn;                          // 0x28A(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMapObjectStatus;                              // 0x28B(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMapObjectFoliageStatus;                       // 0x28C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A19[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowMapObjectStatusRange;                          // 0x290(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisablePalFoliageComponentBeginPlay;              // 0x294(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMapObjectSpawnerStatus;                       // 0x295(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMapObjectEffect;                           // 0x296(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDetectMapObjectInDoor;                        // 0x297(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDamageToMapObjectFromSameGroup;                // 0x298(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A1B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MapObjectHpOverride;                               // 0x29C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FoliageRespawnIntervalOverrideSeconds;             // 0x2A0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVisibleFoliageChunk;                              // 0x2A4(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPalEggStatus;                                 // 0x2A5(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A1F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowPalEggStatusRange;                             // 0x2A8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHideAllHUD;                                     // 0x2AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsNowHUDHide;                                     // 0x2AD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceCreateDispatchParameterByHUDService;         // 0x2AE(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDebugMapIcon;                                 // 0x2AF(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHideUIForPV;                                    // 0x2B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCompletePaldex;                                 // 0x2B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseFixedPositionPlayerUI;                         // 0x2B2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceShowHPGauge;                                 // 0x2B3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFixedRandomSeed;                                // 0x2B4(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A21[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionRandomSeed;                                  // 0x2B8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAvailableBuildObjectInDevelop;                    // 0x2BC(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowBuildObjectInstallCheck;                      // 0x2BD(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A22[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPalMapObjectOperationResult> IgnoreInstallErrors;                               // 0x2C0(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugInstallConnection;                       // 0x2D0(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseEagleForGlider;                                // 0x2D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEquipDefaultGlider;                               // 0x2D2(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A23[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExtraHpRegenRateInSleepingBed;                     // 0x2D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableLamp;                                 // 0x2D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableTimerLight;                           // 0x2D9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableTickOptimization;                     // 0x2DA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableDamagePopup;                          // 0x2DB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowTickOptimizationType;                       // 0x2DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreFastTravelLock;                             // 0x2DD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A28[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalAudioBus, float>         AudioBusVolumes;                                   // 0x2E0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	TMap<enum class EPalAudioBus, bool>          AudioBusMute;                                      // 0x330(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	bool                                         bIsShowPostAkEvent;                                // 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalSoundDebugModel>       SoundDebugModelClass;                              // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMuteForPlayerSoundOnly;                         // 0x390(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayPlaySoundId;                               // 0x391(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayFootStepSound;                                // 0x392(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          IgnoreSoundIds;                                    // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bIsSpawnFootStepEffect;                            // 0x3A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableCameraPitchLimit;                        // 0x3A9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsIgnoreNetworkVersionCompatible;                 // 0x3AA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUseClientOtomoSetting;                          // 0x3AB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalDebugOtomoPalInfo>         DefaultOtomoPalForClient;                          // 0x3B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bIsForcedSynchronizedMapObject;                    // 0x3C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCharacterCountInServer;                     // 0x3C1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDedicatedServerOptimizeInListenServer;         // 0x3C2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableInitRandomCharacterMake;                 // 0x3C3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceSpawnTreasureBox;                            // 0x3C4(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceSpawnEnemyCamp;                              // 0x3C5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceSpawnPalEgg;                                 // 0x3C6(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceSpawnRarePal;                                // 0x3C7(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreAudio;                                       // 0x3C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowAudioSoundPlayer;                           // 0x3C9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceSpawnRandomIncident;                         // 0x3CA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableSpawnRandomIncident;                  // 0x3CB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A33[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ForceSpawnRandomIncidentName;                      // 0x3D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowRandomIncidentSpawnArea;                      // 0x3E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowRandomIncidentEndArea;                        // 0x3E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowRandomIncidentExcludeArea;                    // 0x3E2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvadeSetting_Override;                           // 0x3E3(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvadeProbability_Override;                        // 0x3E4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeOccurablePlayerLevel_Override;               // 0x3E8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A34[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ForceOccurInvaderName;                             // 0x3F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalBiomeType                     Biome_Override;                                    // 0x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A35[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InvadeJudgmentInterval_Minutes_Override;           // 0x404(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeCollTime_Max_Minutes_Override;               // 0x408(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeCollTime_Min_Minutes_Override;               // 0x40C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeReturnTime_Minutes_Override;                 // 0x410(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeStartPoint_BaseCampRadius_Min_cm_Override;   // 0x414(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeStartPoint_BaseCampRadius_Max_cm_Override;   // 0x418(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisitorNPCProbability_Override;                    // 0x41C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ForceOccurVisitorNPCName;                          // 0x420(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VisitorNPCReturnTime_Minutes_Override;             // 0x430(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableCrossKeyQuickSwitch;                     // 0x434(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableAirRolling;                               // 0x435(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnablePalWarp;                                  // 0x436(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDungeonDevelopFlag;                               // 0x437(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisableOptionWorldLoadConfig;                   // 0x438(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowNightSkipLog;                               // 0x439(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsApplyOptionWorldModePreset;                     // 0x43A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAnimRateScale;                                // 0x43B(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowAnimRateScaleRange;                            // 0x43C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsParallelForUpdateActiveTiles;                   // 0x440(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDisablePlayerTeleportTimeout;                   // 0x441(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseMalePlayer;                                    // 0x442(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLoadingScreen;                              // 0x443(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLoadingScreenVisibilityChanged;                  // 0x448(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsSkipCharacterMake;                              // 0x458(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawHitCollision;                                 // 0x459(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGrapplingCoolDown;                         // 0x45A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawGrapplingLine;                                // 0x45B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawGrapplingHitPoint;                            // 0x45C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawAmbientSoundLinePlayLocation;                 // 0x45D(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawAmbientSoundActivateTrigger;                  // 0x45E(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDefenseAttackableRange;                       // 0x45F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDefenseAttackTarget;                          // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A3A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowDefenseRange;                                  // 0x464(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldPartitionLoadCheckRange;                      // 0x468(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WorldPartitionLoadActivatedCheck;                  // 0x46C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableInteractRecicleTarget;                     // 0x46D(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStageDeathPenaltyLocation;                    // 0x46E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceLocationTeleport;                            // 0x46F(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInvaderDeubgLog;                              // 0x470(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A3B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDebugSetting* GetDefaultObj();

};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalDebug_SpawnInfoReporter
class APalDebug_SpawnInfoReporter : public AActor
{
public:
	TArray<class APalNPCSpawnerBase*>            CacheSpawner;                                      // 0x290(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalDebug_SpawnInfoReporter* GetDefaultObj();

	class FString GetDebugInfoString(class APalNPCSpawnerBase* Spawner);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalDefine
class UPalDefine : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalDefine* GetDefaultObj();

	struct FGameplayTag UILayerTag_Modal();
	struct FGameplayTag UILayerTag_Menu();
	struct FGameplayTag UILayerTag_GameMenu7();
	struct FGameplayTag UILayerTag_GameMenu6();
	struct FGameplayTag UILayerTag_GameMenu5();
	struct FGameplayTag UILayerTag_GameMenu4();
	struct FGameplayTag UILayerTag_GameMenu3();
	struct FGameplayTag UILayerTag_GameMenu2();
	struct FGameplayTag UILayerTag_GameMenu();
	struct FGameplayTag UILayerTag_Game();
	class FName TextId_UICommon_SystemMessageUnlockFastTravel();
	class FName TextId_UICommon_SystemErrorCantMoveNotOwned();
	class FName TextId_UICommon_LOG_NeedItemToOpenTreasureBox();
	class FName TextId_UICommon_LOG_ConsumeItem();
	class FName TextId_UICommon_InteractIndicator_InputPassword_CannotTry();
	class FName TextId_UICommon_InteractIndicator_ConsumeAndOpen();
	class FName TextId_UICommon_INFINITE();
	class FName TextId_UICommon_DISMANTLING_FAILED_PALBOX();
	class FName TextId_UICommon_DISMANTLING_CONFIRM_PALBOX();
	class FName TextId_UICommon_CONFIRM_DUNGEON_EXIT();
	class FName TextId_UICommon_CONFIRM_DUNGEON_ENTER();
	class FName StatusPointName_AddWorkSpeed();
	class FName StatusPointName_AddPower();
	class FName StatusPointName_AddMaxSP();
	class FName StatusPointName_AddMaxInventoryWeight();
	class FName StatusPointName_AddMaxHP();
	class FName StatusPointName_AddCaptureLevel();
	class FName StaticItemID_UnlockLantern();
	class FName StaticItemID_UnlockAutoMeal_Tier(int32 Num);
	class FName StaticItemID_Money();
	class FName Socket_Mouth();
	class FName Socket_JumpEffect();
	class FName Socket_EquipWeapon3();
	class FName Socket_EquipWeapon2();
	class FName Socket_EquipWeapon1();
	class FName Socket_BulletMuzzle();
	class FName Socket_BodyCenter();
	class FName NP_PlayerCenterPosition();
	class FName MS_HumanHeadName();
	class FName MS_HumanHairName();
	class FName MS_HumanEyeName();
	class FName MS_HumanClothName();
	class FName MS_HumanBrowName();
	class FName MS_HumanBodyName();
	class FName MP_TorsoNormalMinIntensityName();
	class FName MP_TorsoNormalMaxIntensityName();
	class FName MP_PalLitBaseColorName();
	class FName MP_LegNormalMinIntensityName();
	class FName MP_LegNormalMaxIntensityName();
	class FName MP_CharacterMakeSubsurfaceColorName();
	class FName MP_CharacterMakeBaseColorSaturationName();
	class FName MP_CharacterMakeBaseColorHueName();
	class FName MP_CharacterMakeBaseColorBrightnessName();
	class FName MP_ArmNormalMinIntensityName();
	class FName MP_ArmNormalMaxIntensityName();
	class FName FlagName_OverWeightInventory();
	class FName FlagName_DebugBotGuildName();
	class FName FlagName_CameraOffsetInLiftup();
	class FName DecreaseSanityRate_WorkHard();
	class FName DecreaseFullStomachRate_WorkHard();
	class FName DecreaseFullStomachRate_Work();
	class FName BS_TorsoArmMinName();
	class FName BS_TorsoArmMaxName();
	class FName BS_LegArmMinName();
	class FName BS_LegArmMaxName();
	class FName BS_BodyArmMinName();
	class FName BS_BodyArmMaxName();
	class FName ActionNotify_MiningImpactTiming();
	class FName ActionNotify_MiningEndTiming();
	class FName ActionBBKey_FeedItem();
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalDismantleObjectChecker
class APalDismantleObjectChecker : public AActor
{
public:
	class APalBuildObject*                       TargetBuildObject;                                 // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalDismantleObjectChecker* GetDefaultObj();

	class APalBuildObject* GetTargetObject();
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalStageAreaVolume
class APalStageAreaVolume : public AActor
{
public:
	class UDataLayerAsset*                       RelatedDataLayerAsset;                             // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalStageAreaVolume* GetDefaultObj();

	void SetRelatedDataLayerAsset(class UDataLayerAsset* DataLayerAsset);
	class UDataLayerAsset* GetRelatedDataLayerAsset();
	struct FBox GetBoundingBox();
};

// 0x0 (0x298 - 0x298)
// Class Pal.PalDungeonAreaVolume
class APalDungeonAreaVolume : public APalStageAreaVolume
{
public:

	static class UClass* StaticClass();
	static class APalDungeonAreaVolume* GetDefaultObj();

	void OnOverlapActor(class AActor* Other);
};

// 0x38 (0x68 - 0x30)
// Class Pal.PalDungeonLevelDataAsset
class UPalDungeonLevelDataAsset : public UDataAsset
{
public:
	struct FBox                                  LevelBounds;                                       // 0x30(0x38)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDungeonLevelDataAsset* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Pal.PalDungeonSpawnerDataAsset
class UPalDungeonSpawnerDataAsset : public UDataAsset
{
public:
	TArray<class FName>                          SpawnerPatternNames;                               // 0x30(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDungeonSpawnerDataAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalDungeonDefines
class UPalDungeonDefines : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalDungeonDefines* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalDungeonInfoParameterUtility
class UPalDungeonInfoParameterUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalDungeonInfoParameterUtility* GetDefaultObj();

	float CalcDisappearRemainSeconds(class UObject* WorldContextObject, struct FPalDungeonInfoParameter& InParameter);
};

// 0x38 (0x2C8 - 0x290)
// Class Pal.PalDungeonEnemySpawnerPoint
class APalDungeonEnemySpawnerPoint : public AActor
{
public:
	uint8                                        Pad_2B3D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalDungeonEnemySpawnerRankType   RankType;                                          // 0x2A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B3E[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalDungeonEnemySpawnerPoint* GetDefaultObj();

	void ReturnIndividualHandleDelegate__DelegateSignature(class UPalIndividualCharacterHandle* IndividualHandle);
	void OnEnterCharacterToGroup(class UPalIndividualCharacterHandle* IndividualHandle);
	void OnCreatedGroup();
	void OnChangeBossState_ServerInternal(class UPalDungeonInstanceModel* InstanceModel);
	void CheckLevelStreamingCompleted();
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalDungeonEntrance
class APalDungeonEntrance : public AActor
{
public:
	uint8                                        Pad_2B4C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalStageModelDungeon*                 StageModel;                                        // 0x298(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalDungeonEntrance* GetDefaultObj();

	bool TryGetDungeonInstanceModel(class UPalDungeonInstanceModel** OutModel);
	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnResponseDialogEnterDungeon(bool bResponse);
	struct FTransform GetWarpPoint();
	class UPalStageModelDungeon* GetStageModel();
	struct FPalStageInstanceId GetStageInstanceId();
	struct FGuid GetDungeonInstanceId();
	struct FTransform GetDeadItemDropPoint();
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalDungeonExit
class APalDungeonExit : public AActor
{
public:
	uint8                                        Pad_2B55[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bStartPoint;                                       // 0x298(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B56[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalDungeonExit* GetDefaultObj();

	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnResponseDialogExitDungeon(bool bResponse);
	bool IsStartPoint();
	struct FTransform GetWarpPoint();
};

// 0x80 (0x320 - 0x2A0)
// Class Pal.PalDungeonFixedEntrance
class APalDungeonFixedEntrance : public APalDungeonEntrance
{
public:
	uint8                                        Pad_2B5F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 LevelObjectInstanceId;                             // 0x2A8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   DungeonNameRowHandle;                              // 0x2B8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UDataLayerAsset*                       DataLayerAsset;                                    // 0x2C8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class APalNPCSpawnerBase>      EnemySpawnerSoftClass;                             // 0x2D0(0x30)(Edit, DisableEditOnTemplate, NonPIEDuplicateTransient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RespawnCoolTimeMinutesAfterBossDefeated;           // 0x300(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B60[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalNPCSpawnerBase>        EnemySpawnerClass;                                 // 0x318(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalDungeonFixedEntrance* GetDefaultObj();

	struct FGuid GetLevelObjectInstanceId();
	TSoftClassPtr<class APalNPCSpawnerBase> GetEnemySpawnerSoftClass();
	TSubclassOf<class APalNPCSpawnerBase> GetEnemySpawner();
	class UDataLayerAsset* GetDataLayerAsset();
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalDungeonGimmickUnlockableDoor
class APalDungeonGimmickUnlockableDoor : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalDungeonGimmickUnlockableDoor* GetDefaultObj();

};

// 0x8 (0x298 - 0x290)
// Class Pal.PalDungeonGimmickUnlockableDoor_DefeatBoss
class APalDungeonGimmickUnlockableDoor_DefeatBoss : public APalDungeonGimmickUnlockableDoor
{
public:
	enum class EPalDungeonInstanceBossState      BossState;                                         // 0x290(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B6E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalDungeonGimmickUnlockableDoor_DefeatBoss* GetDefaultObj();

	void OnRep_BossState();
	void OnChangeBossStateImpl(enum class EPalDungeonInstanceBossState ToState);
	void OnChangeBossState_ServerInternal(class UPalDungeonInstanceModel* InstanceModel);
};

// 0x240 (0x268 - 0x28)
// Class Pal.PalDungeonInstanceModel
class UPalDungeonInstanceModel : public UObject
{
public:
	uint8                                        Pad_2B8C[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChangeInstanceStatusDelegate;                    // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 DungeonInstanceId;                                 // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 MarkerPointId;                                     // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DungeonSpawnAreaId;                                // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DungeonLevelName;                                  // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OverrideDungeonNameTextId;                         // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector_NetQuantize                   RepFieldWarpPointLocation;                         // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            FieldWarpPointTransform;                           // 0xC0(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            StartPointTransform;                               // 0x120(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            DeadItemDropTransform;                             // 0x180(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalDungeonInstanceBossState      BossState;                                         // 0x1E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B92[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EnemySpawner_Boss_RowName;                         // 0x1E4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B93[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APalNPCSpawnerBase>      EnemySpawnerClass_Boss;                            // 0x1F0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameDateTime                         DisappearTimeAt;                                   // 0x220(0x8)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Level;                                             // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalStageInstanceId                   StageInstanceId;                                   // 0x22C(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalMapObjectSaveData>         MapObjectSaveDataArray;                            // 0x240(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        ReservedDataLayerAssetIndex;                       // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B96[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataLayerAsset*                       ReservedDataLayerAsset;                            // 0x258(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B97[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDungeonInstanceModel* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class UPalDungeonInstanceModel* Self);
	void OnUpdateBossState();
	void OnSpawnedCharacter_ServerInternal(class UPalIndividualCharacterHandle* IndividualHandle);
	void OnRep_DisappearTimeAt();
	void OnRep_BossState();
	void OnDeadBoss_ServerInternal(const struct FPalDeadInfo& DeadInfo);
	void OnChangeInstanceStatus();
	void OnCapturedBoss_ServerInternal(class APalCharacter* Character, class APalCharacter* Attacker);
	int32 GetLevel();
	class FName GetDungeonSpawnAreaId();
	class FText GetDungeonNameText();
	struct FGameDateTime GetDisappearTimeAt();
	enum class EPalDungeonInstanceBossState GetBossState();
	float CalcRemainSecondsBy(class UObject* WorldContextObject, struct FGameDateTime& TimeAt);
	float CalcDisappearRemainSeconds(class UObject* WorldContextObject, struct FGameDateTime& InDisappearTimeAt);
};

// 0x8 (0x270 - 0x268)
// Class Pal.PalDungeonInstanceModelFixedDungeon
class UPalDungeonInstanceModelFixedDungeon : public UPalDungeonInstanceModel
{
public:
	struct FGameDateTime                         RespawnBossTimeAt;                                 // 0x268(0x8)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDungeonInstanceModelFixedDungeon* GetDefaultObj();

	struct FGameDateTime GetRespawnBossTimeAt();
};

// 0x18 (0x2A8 - 0x290)
// Class Pal.PalLevelObjectActor
class APalLevelObjectActor : public AActor
{
public:
	uint8                                        Pad_2BA8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 LevelObjectInstanceId;                             // 0x298(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalLevelObjectActor* GetDefaultObj();

	struct FGuid GetLevelObjectInstanceId();
};

// 0x50 (0x2F8 - 0x2A8)
// Class Pal.PalDungeonItemSpawnerPoint
class APalDungeonItemSpawnerPoint : public APalLevelObjectActor
{
public:
	enum class EPalDungeonItemSpawnerType        ItemSpawnerType;                                   // 0x2A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BAB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APalMapObjectSpawnerTreasureBox> TreasureBoxSpawnerSoftClass;                       // 0x2B0(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BAC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalDungeonItemSpawnerPoint* GetDefaultObj();

};

// 0x30 (0x2D8 - 0x2A8)
// Class Pal.PalDungeonPointMarker
class APalDungeonPointMarker : public APalLevelObjectActor
{
public:
	TArray<struct FPalDataTableRowName_DungeonSpawnAreaData> SpawnAreaIds;                                      // 0x2A8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bEditSpawnParameter;                               // 0x2B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BAF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalDungeonMarkerPointSpawnParameter  EditSpawnParameter;                                // 0x2BC(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BB0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalDungeonEntrance>       DungeonEntranceClass;                              // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalDungeonPointMarker* GetDefaultObj();

};

// 0x0 (0x290 - 0x290)
// Class Pal.PalDungeonStartPointMarker
class APalDungeonStartPointMarker : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalDungeonStartPointMarker* GetDefaultObj();

};

// 0x138 (0x1A8 - 0x70)
// Class Pal.PalDungeonWorldSubsystem
class UPalDungeonWorldSubsystem : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_2BB7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FPalDungeonMarkerPointData> MarkerPointDataMap;                                // 0x80(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalDungeonInstanceModel*> InstanceModelMap;                                  // 0xD0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FVector                               DungeonMargin;                                     // 0x120(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TickInterval;                                      // 0x138(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FPalDungeonDataLayerAssetSet> DataLayerAssetMap;                                 // 0x140(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class APalDungeonPointMarker*>        PointMarkersWaitSystemInitializeInServer;          // 0x190(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                         bInitializedWithSaveData;                          // 0x1A0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BB9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDungeonWorldSubsystem* GetDefaultObj();

	bool TryGetDungeonInfo(struct FPalStageInstanceId& StageInstanceId, struct FPalDungeonInfoParameter* OutInfo);
	struct FGuid Debug_GetDungeonInstanceIdByIndex(int32 Index);
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalDynamicItemDataBase
class UPalDynamicItemDataBase : public UObject
{
public:
	uint8                                        Pad_2BBC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalDynamicItemId                     ID;                                                // 0x40(0x20)(BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StaticId;                                          // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalDynamicItemDataBase* GetDefaultObj();

	class FName GetStaticId();
	struct FPalDynamicItemId GetId();
};

// 0x40 (0xA8 - 0x68)
// Class Pal.PalDynamicArmorItemDataBase
class UPalDynamicArmorItemDataBase : public UPalDynamicItemDataBase
{
public:
	uint8                                        Pad_2BDD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Durability;                                        // 0x70(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDurability;                                     // 0x74(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OldDurability;                                     // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BDF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PassiveSkillList;                                  // 0x80(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDynamicArmorItemDataBase* GetDefaultObj();

	void SetDurability(float NewDurability);
	void OnRep_Durability();
	TArray<class FName> GetPassiveSkillList();
	float GetMaxDurability();
	float GetDurability();
	void DeleteAllPassive();
	bool ChangePassiveSkill(int32 PassiveIndex, class FName SkillName);
	bool AddPassiveSkill(class FName SkillName);
};

// 0xE8 (0x110 - 0x28)
// Class Pal.PalDynamicItemDataManager
class UPalDynamicItemDataManager : public UObject
{
public:
	uint8                                        Pad_2BE6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCreateItemInServerDelegate;                      // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FPalDynamicItemId, class UPalDynamicItemDataBase*> ItemDynamicDataMap;                                // 0x48(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        DisposeReservedDynamicItemRemainingTime;           // 0x98(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE8[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DynamicItemDisposeReserveCount;                    // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FPalDynamicItemDisposeWaitNotifyInfo> DisposeDynamicItemIdRequestWaitInfoMap_ServerInternal; // 0xB8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BEC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDynamicItemDataManager* GetDefaultObj();

};

// 0xD0 (0x140 - 0x70)
// Class Pal.PalDynamicItemWorldSubsystem
class UPalDynamicItemWorldSubsystem : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_2BF1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPalDynamicItemId, class UPalDynamicItemDataBase*> DynamicItemDataMap_InServer;                       // 0x90(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FPalDynamicItemId, struct FPalDynamicItemInfo> WeakDynamicItemDataMap_InClient;                   // 0xE0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UPalDynamicItemDataBase*>       DynamicItemDataCache_InClient;                     // 0x130(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDynamicItemWorldSubsystem* GetDefaultObj();

};

// 0x0 (0x290 - 0x290)
// Class Pal.PalDynamicObjectBase
class APalDynamicObjectBase : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalDynamicObjectBase* GetDefaultObj();

};

// 0x220 (0x288 - 0x68)
// Class Pal.PalDynamicPalEggItemDataBase
class UPalDynamicPalEggItemDataBase : public UPalDynamicItemDataBase
{
public:
	class FName                                  CharacterID;                                       // 0x68(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalIndividualCharacterSaveParameter  SaveParameter;                                     // 0x70(0x218)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalDynamicPalEggItemDataBase* GetDefaultObj();

};

// 0x40 (0xA8 - 0x68)
// Class Pal.PalDynamicWeaponItemDataBase
class UPalDynamicWeaponItemDataBase : public UPalDynamicItemDataBase
{
public:
	uint8                                        Pad_2C06[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Durability;                                        // 0x70(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDurability;                                     // 0x74(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OldDurability;                                     // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RemainingBullets;                                  // 0x7C(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          PassiveSkillList;                                  // 0x80(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C07[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDynamicWeaponItemDataBase* GetDefaultObj();

	int32 UseBullets(int32 UseNum);
	bool UseBullet();
	void SetDurability(float NewDurability);
	void SetBulletsNum(int32 bulletsNum);
	void OnRep_Durability();
	bool IsEmptyMagazine();
	int32 GetRemainingBulletsNum();
	TArray<class FName> GetPassiveSkillList();
	float GetMaxDurability();
	float GetDurability();
	void DeleteAllPassive();
	bool ChangePassiveSkill(int32 PassiveIndex, class FName SkillName);
	bool AddPassiveSkill(class FName SkillName);
};

// 0x48 (0x2D8 - 0x290)
// Class Pal.PalEditorMapObjectCheckPlacer
class APalEditorMapObjectCheckPlacer : public AActor
{
public:
	class UArrowComponent*                       LeftEdgeArrow;                                     // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       RightEdgeArrow;                                    // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       StackRowArrow;                                     // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             PlacementMargin;                                   // 0x2A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalDataTableRowName_MapObjectData> IgnoreRowNames;                                    // 0x2B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C09[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalEditorMapObjectCheckPlacer* GetDefaultObj();

	void PlaceMapObjects();
};

// 0x280 (0x2A8 - 0x28)
// Class Pal.PalEditorSetting
class UPalEditorSetting : public UObject
{
public:
	struct FSoftObjectPath                       ItemDataTableAssetPath;                            // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PalMonsterDataTableAssetPath;                      // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PalHumanDataTableAssetPath;                        // 0x68(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       MapObjectDataTableAssetPath;                       // 0x88(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       FarmCropDataTableAssetPath;                        // 0xA8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       CrimeMasterDataTableAssetPath;                     // 0xC8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PassiveSkillDataTableAssetPath;                    // 0xE8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ItemProductDataTableAssetPath;                     // 0x108(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       NPCUniqueDataTableAssetPath;                       // 0x128(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       RecipeTechnologyDataTableAssetPath;                // 0x148(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       BaseCampWorkerEventDataTableAssetPath;             // 0x168(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       UIInputActionTableAssetPath;                       // 0x188(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SoundIDTableAssetPath;                             // 0x1A8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ItemShopCreateDataTableAssetPath;                  // 0x1C8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ItemShopLotteryDataTableAssetPath;                 // 0x1E8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PalShopCreateDataTableAssetPath;                   // 0x208(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DungeonSpawnAreaDataTableAssetPath;                // 0x228(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       FieldLotteryNameDataTableAssetPath;                // 0x248(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       NoteDataTableAssetPath;                            // 0x268(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       GameProgressPresetTableAssetPath;                  // 0x288(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalEditorSetting* GetDefaultObj();

};

// 0x8 (0x298 - 0x290)
// Class Pal.PalEnemySpawner
class APalEnemySpawner : public AActor
{
public:
	enum class EPalEnemySpawnActorType           EnemyActorType;                                    // 0x290(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalEnemySpawnDefaultAction       DefaultAction;                                     // 0x291(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C14[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalEnemySpawner* GetDefaultObj();

};

// 0x0 (0x290 - 0x290)
// Class Pal.PalEnemyVirtualCommander
class APalEnemyVirtualCommander : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalEnemyVirtualCommander* GetDefaultObj();

};

// 0x50 (0xF0 - 0xA0)
// Class Pal.PalEquipWeaponShooterComponent
class UPalEquipWeaponShooterComponent : public UActorComponent
{
public:
	TMap<enum class EPalMonsterEquipWeaponSocketType, struct FPalEquipWeaponInfo> SpawnedWeaponInfoMap;                              // 0xA0(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalEquipWeaponShooterComponent* GetDefaultObj();

	void SetWeapon_ForDebug_DirectBP(enum class EPalMonsterEquipWeaponSocketType SocketType, TSubclassOf<class APalMonsterEquipWeaponBase> WeaponActorClass);
	void SetWeapon_ForDebug(enum class EPalMonsterEquipWeaponSocketType SocketType, class FName ItemName);
	void PullTrigger();
};

// 0x60 (0xD0 - 0x70)
// Class Pal.PalEventNotifySystem
class UPalEventNotifySystem : public UPalWorldSubsystem
{
public:
	TArray<TSubclassOf<class UPalEventNotifyBase>> EventNotifyClassArray;                             // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class UPalEventNotifyBase>, class UPalEventNotifyBase*> EventNotifyMap;                                    // 0x80(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalEventNotifySystem* GetDefaultObj();

	class UPalEventNotifyBase* GetEventNotify(TSubclassOf<class UPalEventNotifyBase> Class);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEventNotifyBase
class UPalEventNotifyBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalEventNotifyBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEventNotifySystem_Concrete
class UPalEventNotifySystem_Concrete : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalEventNotifySystem_Concrete* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Pal.PalEventNotify_Area
class UPalEventNotify_Area : public UPalEventNotifyBase
{
public:
	FMulticastInlineDelegateProperty_            OnNotifyEventBeginInvasionInServer;                // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyEventEndInvasionInServer;                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalEventNotify_Area* GetDefaultObj();

	void OnRegiterdArea_ServerInternal(class APalTriggerAreaBase* TriggerBase);
	void OnEndAreaInvasion_ServerInternal(class AActor* HitActor, struct FGuid& AreaInstanceId);
	void OnBeginAreaInvasion_ServerInternal(class AActor* HitActor, struct FGuid& AreaInstanceId);
	class UPalEventNotify_Area* GetEventNotify_Area(class UObject* WorldContextObject);
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalEventNotify_Character
class UPalEventNotify_Character : public UPalEventNotifyBase
{
public:
	FMulticastInlineDelegateProperty_            OnNotifyEventDamagedInServer;                      // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyEventDeadInServer;                         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalEventNotify_Character* GetDefaultObj();

	void OnCharacterSpawned_ServerInternal(class UPalIndividualCharacterHandle* CharacterHandle);
	void OnCharacterDead_ServerInternal(const struct FPalDeadInfo& DeadInfo);
	void OnCharacterDamaged_ServerInternal(const struct FPalDamageResult& DamageResult);
	class UPalEventNotify_Character* GetEventNotify_Character(class UObject* WorldContextObject);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalEventNotify_ItemContainer
class UPalEventNotify_ItemContainer : public UPalEventNotifyBase
{
public:
	FMulticastInlineDelegateProperty_            OnNotifyEventMoveInServer;                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalEventNotify_ItemContainer* GetDefaultObj();

	void OnItemOperationMove_ServerInternal(TArray<struct FPalItemOperationInfo_Move>& OperationInfoSet);
	class UPalEventNotify_ItemContainer* GetEventNotify_Item(class UObject* WorldContextObject);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalExpDatabase
class UPalExpDatabase : public UObject
{
public:
	class UDataTable*                            ExpDataTable;                                      // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PaldexBonusExpDataTable;                           // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalExpDatabase* GetDefaultObj();

	int32 GetTotalExp(int32 Level, bool IsPlayer);
	int32 GetNextExp(int32 Level, bool IsPlayer);
	int32 GetDropExp(int32 Level, class FName RowName);
	void DistributionExpValue_forPlayerParty_Server(int32 ExpValue, const TArray<class APalPlayerCharacter*>& GiftPlayerList, bool IsCallDelegate);
	int32 CalcPaldexBonusExp(class FName CharacterID, int32 CaptureCount, class APalPlayerState* CaptureOwnerState);
	int32 CalcLevelFromTotalExp(int32 TotalEXP, bool IsPlayer);
	void AddExpValue_forPlayerParty_Server(int32 ExpValue, const TArray<class APalPlayerCharacter*>& GiftPlayerList, bool IsCallDelegate);
	void AddExp_forPlayerParty_TowerBoss(class UPalIndividualCharacterHandle* DeadEnemyHandle, const TArray<class APalPlayerCharacter*>& GiftPlayerList, bool IsCallDelegate);
	void AddExp_forBaseCamp(class UPalIndividualCharacterHandle* DeadEnemyHandle, class UPalBaseCampModel* CampModel);
	void AddExp_EnemyDeath(const struct FPalDeadInfo& DeadInfo);
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalExponentialHeightFogVolume
class APalExponentialHeightFogVolume : public AActor
{
public:
	class UExponentialHeightFogComponent*        Component;                                         // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x298(0x1)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_13B : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2CA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableSwitchVisibility;                           // 0x29C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisableEnabledFlag;                               // 0x29D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CAA[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalExponentialHeightFogVolume* GetDefaultObj();

	void OnRep_bEnabled();
};

// 0x28 (0xC8 - 0xA0)
// Class Pal.PalFacialComponent
class UPalFacialComponent : public UActorComponent
{
public:
	bool                                         bIsEnableEyeBlink;                                 // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CC1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalFacial_MainModule*                 MainModule;                                        // 0xA8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CC2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalFacialComponent* GetDefaultObj();

	void SetUpTestMesh(class USkeletalMeshComponent* SkeletalMeshComponent);
	void SetDisableNotify(bool Disable);
	void SetDefaultLayer(enum class EPalFacialEyeType Eye);
	bool ExistFacialNotifyInMontage(class UAnimMontage* Montage);
	bool ExistEyeNotifyInMontage(class UAnimMontage* Montage);
	void ChangeMouth_ForMontageNotify(enum class EPalFacialMouthType Mouth);
	void ChangeEyeAndMouthMesh(enum class EPalFacialEyeType Eye);
	void ChangeEye_ForMontageNotify(enum class EPalFacialEyeType Eye);
	void ChangeDefaultFacial();
	void Blink();
};

// 0x288 (0x2B0 - 0x28)
// Class Pal.PalFacial_MainModule
class UPalFacial_MainModule : public UObject
{
public:
	uint8                                        Pad_2CC4[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EyeMaterialIndex;                                  // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MouthMaterialIndex;                                // 0x6C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BrowMaterialIndex;                                 // 0x70(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CC5[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalFacialEyeType, struct FPalMorphSetting> MorphSetting_Eye;                                  // 0xC8(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EPalFacialMouthType, struct FPalMorphSetting> MorphSetting_Mouth;                                // 0x118(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CC7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalFacialEyeType, float>    BlendShape_TypeEyeWeight;                          // 0x170(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EPalFacialMouthType, float>  BlendShape_TypeMouthWeight;                        // 0x1C0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     BlendShape_EyeWeight;                              // 0x210(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     BlendShape_MouthWeight;                            // 0x260(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalFacial_MainModule* GetDefaultObj();

	void Setup_FacialModule(class USkeletalMeshComponent* SkeletalMeshComponent);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalFadeWidgetBase
class UPalFadeWidgetBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalFadeWidgetBase* GetDefaultObj();

};

// 0x8 (0x420 - 0x418)
// Class Pal.PalFirePointLightComponent
class UPalFirePointLightComponent : public UPointLightComponent
{
public:
	uint8                                        Pad_2CC9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalFirePointLightComponent* GetDefaultObj();

};

// 0x40 (0xE0 - 0xA0)
// Class Pal.PalFlyMeshHeightCtrlComponent
class UPalFlyMeshHeightCtrlComponent : public UActorComponent
{
public:
	float                                        FlingAdditionalHeight;                             // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighFlingAddtionalHeight;                          // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalFlyHeightType                 State;                                             // 0xA8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CD1[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsHighFling;                                      // 0xB4(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsHighFlingCache;                                 // 0xB5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CD2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SK;                                                // 0xB8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CD3[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalFlyMeshHeightCtrlComponent* GetDefaultObj();

	void ToLand(float Duration);
	void ToFly(float Duration);
	void SetupMesh();
	void OnRep_bIsHighFling();
	void OnInitializedCharacter(class APalCharacter* OwnerCharacter);
	void OnChangeBattleMode(bool bIsBattleMode);
	bool IsFlying();
	void HighFlingEnd_Server();
	void HighFlingEnd_Implementation();
	void HighFlingEnd();
	float GetDefaultMeshLocationZ();
	void Debug_ForceHighFlingEnd();
};

// 0x20 (0xC0 - 0xA0)
// Class Pal.PalFoliageDamageReactionComponent
class UPalFoliageDamageReactionComponent : public UActorComponent
{
public:
	uint8                                        Pad_2CD9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHitEffectSlot*                     EffectSlot;                                        // 0xB8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalFoliageDamageReactionComponent* GetDefaultObj();

};

// 0x1B8 (0x1E0 - 0x28)
// Class Pal.PalFoliageGridModel
class UPalFoliageGridModel : public UObject
{
public:
	uint8                                        Pad_2CDC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UPalMapObjectFoliageModel*> FoliageModelMapInServer;                           // 0x48(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CDE[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FPalFoliageGridInstanceMap> InstanceMapByComponentId;                          // 0x140(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FVector, struct FPalFoliageInstanceId> InstanceIdMapByLocation;                           // 0x190(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalFoliageGridModel* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Pal.PalFoliageInstallDataAssetByIFA
class UPalFoliageInstallDataAssetByIFA : public UDataAsset
{
public:
	TMap<class FName, struct FPalFoliageInstallDataArray> InstallDataArrayMap;                               // 0x30(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalFoliageInstallDataAssetByIFA* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Pal.PalFoliageInstallDataAsset
class UPalFoliageInstallDataAsset : public UDataAsset
{
public:
	TMap<class FName, TSoftObjectPtr<class UPalFoliageInstallDataAssetByIFA>> InstallDataSetMap;                                 // 0x30(0x50)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalFoliageInstallDataAsset* GetDefaultObj();

};

// 0x158 (0x180 - 0x28)
// Class Pal.PalFoliageInstance
class UPalFoliageInstance : public UObject
{
public:
	uint8                                        Pad_2CEE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, bool>                            DirtyMap;                                          // 0x48(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2CEF[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ModelInstanceId;                                   // 0xB8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  FoliageTypeId;                                     // 0xC8(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HP;                                                // 0xD0(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlive;                                            // 0xD4(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CF0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalFoliageInstanceTransform          WorldTransform;                                    // 0xD8(0x38)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                            WorldTransformCache;                               // 0x110(0x60)(Edit, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameDateTime                         RespawnTimeAt;                                     // 0x170(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CF1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalFoliageInstance* GetDefaultObj();

	void OnRep_WorldTransform();
	void OnRep_Alive(bool bOldValue);
	void FoliageInstanceDelegate__DelegateSignature(class UPalFoliageInstance* Instance);
};

// 0x0 (0x900 - 0x900)
// Class Pal.PalFoliageISMComponent
class UPalFoliageISMComponent : public UFoliageInstancedStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UPalFoliageISMComponent* GetDefaultObj();

};

// 0x50 (0x950 - 0x900)
// Class Pal.PalFoliageISMComponentBase
class UPalFoliageISMComponentBase : public UPalFoliageISMComponent
{
public:
	TMap<struct FVector, int32>                  InstanceIndexMapByLocation;                        // 0x900(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalFoliageISMComponentBase* GetDefaultObj();

	void SpawnInstance(class UPalFoliageInstance* Instance);
	void OnRemoveInstance(class FName FoliageTypeId, class UPalFoliageInstance* Instance);
	void OnRegisterInstance(class FName FoliageTypeId, class UPalFoliageInstance* Instance);
	void OnReceiveDamageInClient(struct FPalDamageInfo& DamageInfo);
	void OnDisposeModel(class UPalMapObjectFoliageModel* Model);
	void DespawnInstance(class UPalFoliageInstance* Instance);
};

// 0x150 (0x3E0 - 0x290)
// Class Pal.PalFoliageModelChunk
class APalFoliageModelChunk : public AActor
{
public:
	struct FPalFoliageInstanceRepInfoArray       RepInfoArray;                                      // 0x290(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	int32                                        ChunkGridSize;                                     // 0x3D8(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        InstanceNum;                                       // 0x3DC(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalFoliageModelChunk* GetDefaultObj();

	void OnRep_ChunkGridSize();
	void OnReceivedChunkGridSize(int32 NewChunkGridSize);
};

// 0x50 (0x80 - 0x30)
// Class Pal.PalFoliagePresetDataSet
class UPalFoliagePresetDataSet : public UDataAsset
{
public:
	TMap<enum class EPalFoliagePresetType, struct FPalFoliagePresetData> Presets;                                           // 0x30(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalFoliagePresetDataSet* GetDefaultObj();

};

// 0x8 (0x4F8 - 0x4F0)
// Class Pal.PalFoliageType_InstancedStaticMesh
class UPalFoliageType_InstancedStaticMesh : public UFoliageType_InstancedStaticMesh
{
public:
	enum class EPalFoliagePresetType             PresetType;                                        // 0x4F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D07[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalFoliageType_InstancedStaticMesh* GetDefaultObj();

};

// 0x0 (0x2B8 - 0x2B8)
// Class Pal.PalFollowingComponent
class UPalFollowingComponent : public UPathFollowingComponent
{
public:

	static class UClass* StaticClass();
	static class UPalFollowingComponent* GetDefaultObj();

};

// 0x108 (0x1A8 - 0xA0)
// Class Pal.PalFootIKComponent
class UPalFootIKComponent : public UActorComponent
{
public:
	bool                                         bIsEnableFootIK;                                   // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D0D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinMeshOffset;                                     // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootIKInterpTime;                                  // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D0E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalFootType, struct FFootIKSetting> FootIKSettings;                                    // 0xB0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        FootIKMeshOffset;                                  // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalFootType, struct FHitResult> FootGroundResult;                                  // 0x108(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D10[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalFootIKComponent* GetDefaultObj();

	void SetFootIKDisable(class FName FlagName, bool bIsDisable);
	bool IsEnableFootIK();
};

// 0x50 (0x78 - 0x28)
// Class Pal.PalFootStepEffectAssetBase
class UPalFootStepEffectAssetBase : public UObject
{
public:
	TMap<enum class EPalLandingType, struct FFootStepEffectInfo> FootStepEffectInfo;                                // 0x28(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalFootStepEffectAssetBase* GetDefaultObj();

	TSoftObjectPtr<class UNiagaraSystem> GetEffectObjectPtr(enum class EPalLandingType LandingType, enum class EPhysicalSurface PhysicalSurface);
	bool GetEffectInfo(enum class EPalLandingType LandingType, struct FFootStepEffectInfo* OutVal);
};

// 0x48 (0x840 - 0x7F8)
// Class Pal.PalFunnelCharacter
class APalFunnelCharacter : public APalCharacter
{
public:
	TSubclassOf<class UPalAIActionFunnelSkillBase> FunnelSkillAIActionClass;                          // 0x7F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalFunnelSkillModule>     FunnelSkillModuleClass;                            // 0x800(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        OwnerCharacterId;                                  // 0x808(0x30)(Net, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D24[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalFunnelCharacter* GetDefaultObj();

	void SetOwnerCharacterId(const struct FPalInstanceID& OwnerCharacterId);
	void SetLocationNearTrainer();
	void OnTrainerMoveToRespawnLocation(class APalPlayerCharacter* Player, const struct FVector& Location);
	void OnTrainerDead(const struct FPalDeadInfo& DeadInfo);
	void OnSpawned();
	void OnRep_OwnerCharacterId();
	void OnOwnerDead(const struct FPalDeadInfo& DeadInfo);
	void OnInactive();
	void OnActive();
	void InactivateSelf();
	class APalCharacter* GetTrainer();
	int32 GetRank();
	class APalCharacter* GetOwnerPal();
	class FName GetCharacterID();
	void ActivateSelf();
};

// 0xA0 (0x110 - 0x70)
// Class Pal.PalFunnelCharacterManager
class UPalFunnelCharacterManager : public UPalWorldSubsystem
{
public:
	TMap<struct FGuid, struct FPalFunnelCharacterManagementInfo> ManagedCharacterInfo;                              // 0x70(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FPalInstanceID>    PickupTarget;                                      // 0xC0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalFunnelCharacterManager* GetDefaultObj();

	void SpawnActorCallback(struct FGuid& Guid, class AActor* Actor);
	void SetFunnelCharacterActive(class APalFunnelCharacter* FunnelCharacter, bool IsActive);
	void InitializeForServer_BP();
	void Initialize_BP();
	class APalCharacter* GetOwnerCharacter(class APalFunnelCharacter* FunnelCharacter);
	int32 GetIndexOfFunnelsWithinSameTrainer(class APalFunnelCharacter* FunnelCharacter);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalFunnelSkillModule
class UPalFunnelSkillModule : public UObject
{
public:
	class APalFunnelCharacter*                   FunnelCharacter;                                   // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalFunnelSkillModule* GetDefaultObj();

	bool ShouldSetSkillAction();
	void SetCharacter(class APalCharacter* Character);
	void OnTick(float DeltaTime);
	void OnNotifyFinishSkillAction();
	class APalCharacter* GetCharacter();
};

// 0x78 (0xA8 - 0x30)
// Class Pal.PalFunnelSkillModuleCollectItem
class UPalFunnelSkillModuleCollectItem : public UPalFunnelSkillModule
{
public:
	TArray<float>                                SearchItemRange;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGuid                                 CollectItemId;                                     // 0x40(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldSetSkillAction;                             // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FPalFunnelSkillModuleCollectItemSearchInfo> SearchItemInfoList;                                // 0x58(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalFunnelSkillModuleCollectItem* GetDefaultObj();

	void SearchCollectableItem(float DeltaTime);
	void Reset();
	bool Pickup();
	void ObserveCollectItem(float DeltaTime);
	bool IsNearTargetLocation(const struct FVector& Location);
	class APalMapObject* GetTargetObject();
	bool GetTargetLocation(struct FVector* Location);
	struct FGuid GetTargetId();
};

// 0x18 (0x48 - 0x30)
// Class Pal.PalFunnelSkillModuleReticleTargetAttack
class UPalFunnelSkillModuleReticleTargetAttack : public UPalFunnelSkillModule
{
public:
	bool                                         bShouldSetSkillAction;                             // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D45[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SearchRange;                                       // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D46[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoolTime;                                          // 0x3C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class APalCharacter>          ReticleTarget;                                     // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalFunnelSkillModuleReticleTargetAttack* GetDefaultObj();

	void Reset();
	class APalCharacter* GetTarget();
};

// 0x5A0 (0x760 - 0x1C0)
// Class Pal.PalGameInstance
class UPalGameInstance : public UGameInstance
{
public:
	FMulticastInlineDelegateProperty_            OnCompletedCharacterMakeDelegate;                  // 0x1C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPawnLocalPlayerControllerChangedDelegates;       // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bNetworkError;                                     // 0x1E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D69[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DisplayVersion;                                    // 0x1E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ErrorString;                                       // 0x200(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                InputPassword;                                     // 0x210(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        BanList;                                           // 0x220(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6B[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalGameSetting>           GameSettingClass;                                  // 0x3C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalGameSetting*                       GameSetting;                                       // 0x3C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalMasterDataTables>      MasterDataTablesClass;                             // 0x3D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalMasterDataTables*                  MasterDataTables;                                  // 0x3D8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalMapObjectManager>      MapObjectManagerClass;                             // 0x3E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalGroupManager>          GroupManagerClass;                                 // 0x3E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalCharacterManager>      CharacterManagerClass;                             // 0x3F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalCharacterContainerManager> CharacterContainerManagerClass;                    // 0x3F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCharacterContainerManager*         CharacterContainerManager;                         // 0x400(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalBaseCampManager>       BaseCampManagerClass;                              // 0x408(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalWorkProgressManager>   WorkProgressManagerClass;                          // 0x410(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalDamagePopUpManager>    DamagePopUpManagerClass;                           // 0x418(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalDamagePopUpManager*                DamagePopUpManager;                                // 0x420(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalItemContainerManager>  ItemContainerManagerClass;                         // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalItemIDManager>         ItemIDManagerClass;                                // 0x430(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalItemIDManager*                     ItemIDManager;                                     // 0x438(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalWazaDatabase>          WazaDatabaseClass;                                 // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalWazaDatabase*                      WazaDatabase;                                      // 0x448(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalBattleManager>         BattleManagerClass;                                // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalBossBattleManager>     BossBattleManagerClass;                            // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalPlayerDataStorage>     PlayerDataStorageClass;                            // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalPlayerDataStorage*                 PlayerDataStorage;                                 // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalHUDService>            HUDServiceClass;                                   // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalHUDService*                        HUDService;                                        // 0x478(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalExpDatabase>           ExpDatabaseClass;                                  // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalExpDatabase*                       ExpDatabase;                                       // 0x488(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalDatabaseCharacterParameter> DatabaseCharacterParameterClass;                   // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalDatabaseCharacterParameter*        DatabaseCharacterParameter;                        // 0x498(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalAssetStreamableManager> AssetStreamableManagerClass;                       // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalAssetStreamableManager*            AssetStreamableManager;                            // 0x4A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalPassiveSkillManager>   PassiveSkillManagerClass;                          // 0x4B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalPassiveSkillManager*               PassiveSkillManager;                               // 0x4B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalDataTableRowIdMapper>  DataTableRowIdMapperClass;                         // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalDataTableRowIdMapper*              DataTableRowIdMapper;                              // 0x4C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalDeadBodyManager>       DeadBodyManagerClass;                              // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalDeadBodyManager*                   DeadBodyManager;                                   // 0x4D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalBulletCreator>         BulletCreatorClass;                                // 0x4E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalBulletCreator*                     BulletCreator;                                     // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalPlayerManager>         PlayerManagerClass;                                // 0x4F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalSaveGameManager>       SaveGameManagerClass;                              // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalSaveGameManager*                   SaveGameManager;                                   // 0x500(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalVisualEffectDataBase>  VisualEffectDataBaseClass;                         // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalVisualEffectDataBase*              VisualEffectDataBase;                              // 0x510(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalEventNotifySystem>     EventNotifySystemClass;                            // 0x518(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalWorldSecuritySystem>   WorldSecuritySystemClass;                          // 0x520(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalLocationManager>       LocationManagerClass;                              // 0x528(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalNPCManager>            NPCManagerClass;                                   // 0x530(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalNPCManager*                        NPCManager;                                        // 0x538(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalDeathPenaltyManager>   DeathPenaltyManagerClass;                          // 0x540(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalDeathPenaltyManager*               DeathPenaltyManager;                               // 0x548(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalCoopSkillSearchSystem> CoopSkillSearchSystemClass;                        // 0x550(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCoopSkillSearchSystem*             CoopSkillSearchSystem;                             // 0x558(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalCharacterImportanceManager> CharacterImportanceManagerClass;                   // 0x560(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCharacterImportanceManager*        CharacterImportanceManager;                        // 0x568(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalAudioSettingSystem>    AudioSettingClass;                                 // 0x570(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalAudioSettingSystem*                AudioSettingSystem;                                // 0x578(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalCharacterParameterStorageSubsystem> CharacterParameterStorageSubsystemClass;           // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalTutorialManager>       TutorialManagerClass;                              // 0x588(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalObjectCollector>       ObjectCollectorClass;                              // 0x590(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalActionDummyTargetManager> ActionDummyTargetManager;                          // 0x598(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalLogManager>            LogManagerClass;                                   // 0x5A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RevisionNum;                                       // 0x5A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D82[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            FxiedCharacterMakeDataDelegate;                    // 0x5B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            FxiedCharacterNameDelegate;                        // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TScriptInterface<class IPalGameSystemNeedSync>> NeedWorldSyncSystems;                              // 0x5D0(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D85[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalPersistentSoundPlayer> TitleBGMPlayerClass;                               // 0x600(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPersistentSoundPlayer*             TitleBGMPlayer;                                    // 0x608(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                SelectedWorldName;                                 // 0x610(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                SelectedWorldSaveDirectoryName;                    // 0x620(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsNewGame;                                        // 0x630(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D87[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalOptionWorldSettings               NewGameWorldSetting;                               // 0x638(0x128)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalGameInstance* GetDefaultObj();

	void ShowUIMultiplayRestriction(bool bOverrideChecking);
	void ShowCharacterMakeScreen();
	void SetupGameInit();
	void SetNewWorldName(const class FString& WorldName);
	void SetIsNewGame();
	bool SelectWorldSaveDirectoryName(const class FString& WorldSaveDirectoryName);
	bool SelectWorld(const class FString& WorldName);
	void OnPawnLocalPlayerControllerChanged__DelegateSignature(class APawn* Pawn, class AController* Controller);
	void OnInitializeCompleteSystem();
	void OnCompletedJoinSession(bool IsSuccess, enum class EJoinSessionResultType Type);
	void OnCompletedFindSessions(bool bIsSuccess, TArray<struct FBlueprintSessionResult>& Results, const class FString& ErrorStr);
	void OnCompletedCharacterMake__DelegateSignature();
	void LoadingFinished();
	bool IsPlayFromTitle();
	bool IsNewGame();
	void GoToDefaultMap();
	class FString GetSelectedWorldSaveDirectoryName();
	class FString GetSelectedWorldName();
	void FxiedCharacterName__DelegateSignature(const class FString& Name);
	void FxiedCharacterMakeData__DelegateSignature(struct FPalPlayerDataCharacterMakeInfo& MakeInfo);
	void CompleteInitCharacterMakeData();
	void ClearNetworkError();
	void CheckInvite();
	void ApplicationHasReactivated();
	void ApplicationHasEnteredForeground();
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalGameInstanceViewActor
class APalGameInstanceViewActor : public AActor
{
public:
	TWeakObjectPtr<class UObject>                Target;                                            // 0x290(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalGameInstanceViewActor* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Pal.PalGameLocalSettings
class UPalGameLocalSettings : public UObject
{
public:
	struct FPalOptionAudioSettings               AudioSettings;                                     // 0x28(0x1C)(Edit, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	enum class EPalOptionGraphicsLevel           GraphicsLevel;                                     // 0x44(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalOptionGraphicsLevel           DefaultGraphicsLevel;                              // 0x45(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRunedBenchMark;                                   // 0x46(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasAppliedUserSetting;                            // 0x47(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DedicatedServerName;                               // 0x48(0x10)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAntiAliasingMethod               AntiAliasingType;                                  // 0x58(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EUDLSSMode                        DLSSMode;                                          // 0x59(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D9F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GraphicsCommonQuality;                             // 0x5C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalGameLocalSettings* GetDefaultObj();

	bool RequireBenchMarkScalaBility();
};

// 0x8 (0x338 - 0x330)
// Class Pal.PalGameModeBase
class APalGameModeBase : public AGameModeBase
{
public:
	enum class EPalGameModeType                  GameModeType;                                      // 0x330(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DA2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalGameModeBase* GetDefaultObj();

};

// 0x20 (0x358 - 0x338)
// Class Pal.PalGameMode
class APalGameMode : public APalGameModeBase
{
public:
	uint8                                        Pad_2DAC[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalGameMode* GetDefaultObj();

	void RestartGame();
	void RespawnPlayer(int32 PlayerIndex);
	void OnServerLobbyUpdate();
	void OnEOSLoginDedicatedServerComplete(class UPocketpairUserInfo* UserInfo, bool bSuccess, const class FString& ErrorStr);
	void OnCompleteCreateSession(bool IsSuccess, const class FString& ErrorStr);
	void CreateSession(const class FString& Address);
};

// 0x8 (0x340 - 0x338)
// Class Pal.PalGameModeLogin
class APalGameModeLogin : public APalGameModeBase
{
public:
	uint8                                        Pad_2DD1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalGameModeLogin* GetDefaultObj();

	void OnSwitchUserUICompleted(class UPocketpairUserInfo* UserInfo, bool bSuccess, const class FString& ErrorStr);
	void OnLoginEOSCompleted(class UPocketpairUserInfo* UserInfo, bool bSuccess, const class FString& ErrorStr);
	void OnLoginCompleted(class UPocketpairUserInfo* UserInfo, bool bSuccess, const class FString& ErrorStr);
	void OnConfirmAlert_MultiplayRestricted(bool bSuccess);
	void OnConfirmAlert_EOSLogin(bool bSuccess);
	void OnCloseEalryAccess(bool _);
	void GoToTitle();
};

// 0x0 (0x338 - 0x338)
// Class Pal.PalGameModeServerEntry
class APalGameModeServerEntry : public APalGameModeBase
{
public:

	static class UClass* StaticClass();
	static class APalGameModeServerEntry* GetDefaultObj();

	void LoadLevel();
};

// 0x0 (0x338 - 0x338)
// Class Pal.PalGameModeTitle
class APalGameModeTitle : public APalGameModeBase
{
public:

	static class UClass* StaticClass();
	static class APalGameModeTitle* GetDefaultObj();

};

// 0x1620 (0x1648 - 0x28)
// Class Pal.PalGameSetting
class UPalGameSetting : public UBlueprintFunctionLibrary
{
public:
	int32                                        CharacterMaxLevel;                                 // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GuildCharacterMaxLevel;                            // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OtomoLevelSyncAddMaxLevel;                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalPlayerSprintStaminaDecreaseType PlayerSprintStaminaType;                           // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E06[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CharacterMaxRank;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConsumStamina_PalThrow;                            // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReturnOtomoPalCoolTime;                            // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OtomoSlotNum;                                      // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtomoWazaCoolDownSpeedRate;                        // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerHPRateFromRespawn;                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerStomachRateFromRespawn;                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RarePal_AppearanceProbability;                     // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RarePal_LevelMultiply;                             // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BossOrRarePal_TalentMin;                           // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterRankUpRequiredNumDefault;                 // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           CharacterRankUpRequiredNumMap;                     // 0x68(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        NaturalUpdateSaveParameterInterval;                // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterHUDDisplayRange;                          // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterFedEatingTime;                            // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterStayingSecondsInSpa;                      // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PalBoxPageNum;                                     // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PalBoxSlotNumInPage;                               // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerBattleJudge_EnemyDistance;                   // 0xD0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, float>                           BodyTemperature_SlipDamage_Percent;                // 0xD8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, float>                           BodyTemperature_StomachDecreaceRate;               // 0x128(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>         SleepFXDefault;                                    // 0x178(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LiftupCharacterThrownVelocityScalar;               // 0x1A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LiftupCharacterClearCollisionDelayTime;            // 0x1AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NickNameMaxLength;                                 // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntervalForPalAttackFromBall;                      // 0x1B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanShootRiderByFullRide;                           // 0x1B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HitWazaAttackForMapObject;                         // 0x1B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E10[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        KnockBack_MaxHpPercent;                            // 0x1BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockBack_Power;                                   // 0x1C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StunTime;                                          // 0x1C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepCooldownTime;                                  // 0x1C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Stun_GunDamageRate;                                // 0x1CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableAutoReload;                                // 0x1D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E11[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeadShootImpulseRate;                              // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeadShootImpulseMax;                               // 0x1D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtomoDamageRate_Defense;                           // 0x1DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamageValueMin_MapObject;                          // 0x1E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRate_WealPoint;                              // 0x1E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRate_StrongPoint;                            // 0x1E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRate_SleepHit;                               // 0x1EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalDamageRate_Waza;                              // 0x1F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalDamageRate_Weapon;                            // 0x1F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalDamageRate_Mine;                              // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalDamageRate_MapObject_Waza;                    // 0x1FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalDamageRate_MapObject_Weapon;                  // 0x200(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinalDamageRate_MapObject_Mine;                    // 0x204(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FoliageDefault_Defense;                            // 0x208(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WazaAttackerLevelDamage_Power;                     // 0x20C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRandomRate_Min;                              // 0x210(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRandomRate_Max;                              // 0x214(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LevelDamageCorrect;                                // 0x218(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LevelStatusAccumulateCorrect;                      // 0x21C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageElementMatchRate;                            // 0x220(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MineAttack_DefensePower;                           // 0x224(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusCalculate_LevelMultiply_HP;                  // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatusCalculate_TribePlus_HP;                      // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatusCalculate_ConstPlus_HP;                      // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusCalculate_LevelMultiply_Attack;              // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatusCalculate_ConstPlus_Attack;                  // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusCalculate_LevelMultiply_Defense;             // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StatusCalculate_ConstPlus_Defense;                 // 0x240(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusCalculate_TribeMultiply_CraftSpeed;          // 0x244(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusCalculate_GenkaiToppa_PerAdd;                // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StatusCalculate_Talent_PerAdd;                     // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreakedWeaponDamageRate;                           // 0x250(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreakedArmorDefenseRate;                           // 0x254(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmorDurabilityDamageDivide;                       // 0x258(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingStamina_Move;                              // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ClimbingStamina_Jump;                              // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RideWazaStaminaRate;                               // 0x264(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableJumpPreliminary;                          // 0x268(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpInterval;                                      // 0x26C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyMaxHeight;                                      // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyHover_SP;                                       // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyHorizon_SP;                                     // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyHorizon_Dash_SP;                                // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyVertical_SP;                                    // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimingSpeedRateInRide;                             // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingEndSpeed;                                   // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JumpSP;                                            // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StepSP;                                            // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MeleeAttackSP;                                     // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintSP;                                          // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderSP;                                          // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimmingFallWaitTimeSec;                           // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Swimming_SP_Idle;                                  // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Swimming_SP_Swim;                                  // 0x2A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Swimming_SP_DashSwim;                              // 0x2AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FluidFriction;                                     // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverWeightSpeedZero_AddPercent;                    // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkableFloorAngleForDefault;                      // 0x2B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkableFloorAngleForRide;                         // 0x2BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableSpeedCollision;                            // 0x2C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E1C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionDamageMinSpeed;                           // 0x2C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedCollisionDamagePower;                         // 0x2C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionDamageSpeedMultiplay;                     // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionDamageWeightThreshold;                    // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoHPRegene_Percent_perSecond;                    // 0x2D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoHPRegene_Percent_perSecond_Sleeping;           // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PosionHPDecrease_Percent_perSecond;                // 0x2DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Starvation_DecreaseHP_Percent_perSecond;           // 0x2E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoSANRegene_Percent_perSecond_PalStorage;        // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreace_perSecond_Monster;                 // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreace_perSecond_Player;                  // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreace_AutoHealing;                       // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreace_WorkingRate;                       // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HungerStart_StomachValue;                          // 0x2F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FullStomachPalStartEatFood;                        // 0x2FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FullStomachCost_ByWazaUse_Base;                    // 0x300(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E20[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, float>                           FullStomachCost_ByWazaUse_RateMap;                 // 0x308(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        StomachDecreaceRate_GroundRide_Sprint;             // 0x358(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreaceRate_WaterRide;                     // 0x35C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreaceRate_WaterRide_Sprint;              // 0x360(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreaceRate_FlyRide;                       // 0x364(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StomachDecreaceRate_FlyRide_Sprint;                // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RemainderOfLife_Second;                            // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HpDecreaseRate_Drowning;                           // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerShield_RecoverStartTime;                     // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerShield_RecoverPercentPerSecond;              // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StaminaRecover_PercentPerSecond;                   // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResuscitationTime;                                 // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerDeath_DropOtomoNum;                          // 0x384(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerDeath_DropOtomoRange;                        // 0x388(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerDeath_DropOtomoDisappearHours;               // 0x38C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerDyingDamagePerTime;                          // 0x390(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ElementStatus_ResistanceInitialValue;              // 0x394(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElementStatus_AutoDecreasePerSecond;               // 0x398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ElementStatus_ResetResistanceSecond;               // 0x39C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildExp;                                          // 0x3A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CraftExp;                                          // 0x3A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PickupItemOnLevelExp;                              // 0x3A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapObjectDestroyProceedExp;                        // 0x3AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectDistributeExpRange;                       // 0x3B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E24[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           OtomoExp_LevelDifferenceMap;                       // 0x3B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        OtomoExp_HigherPlayerLevel;                        // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureExpBonus_Tier1_TableReferenceNum;           // 0x40C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureExpBonus_Tier2_TableReferenceNum;           // 0x410(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CaptureExpBonus_Tier3_TableReferenceNum;           // 0x414(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalDebugOtomoPalInfo>         NewGameOtomoPalSet;                                // 0x418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, int32>                     NewGameInventoryItemSet;                           // 0x428(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, int32>                     NewGameLoadoutItemSet;                             // 0x478(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector                               WorldHUDDisplayOffsetDefault;                      // 0x4C8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldHUDDisplayRangeDefault;                       // 0x4E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldHUDDetailDisplayRange;                        // 0x4E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalDataTableRowName_ItemData> FarmCropWaterItemIds;                              // 0x4E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FarmCropGrowupSpeedBySec;                          // 0x4F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FarmCropIncreaseRateByWaterFillRate;               // 0x4FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MaxMoney;                                          // 0x500(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultMoney;                                      // 0x510(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SneakAttackBackJudgeAngle_Degree;                  // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SneakAttack_PalMeleeWaza_AttackRate;               // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoAimCameraMoveRate;                             // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoAimCharacterMoveRate;                          // 0x520(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoAimCameraAdsorptionSpeed;                      // 0x524(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoAimLockOnScreenSpaceRate;                      // 0x528(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceAutoAimTime;                                  // 0x52C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SellItemRate;                                      // 0x530(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PalPriceConstantValueA;                            // 0x534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PalPriceConstantValueB;                            // 0x538(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SellPalRate;                                       // 0x53C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchRangeOnThrowedCharacterLanded;               // 0x540(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkCompleteReactionRangeFromPlayer;               // 0x544(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorkerCollectResourceStackMaxNum;                  // 0x548(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalFacialEyeType                 FacialTypeHardWork;                                // 0x54C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E2E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timeout_WorkerApproachToTarget;                    // 0x550(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime_WorkRepairFailedFindPath;                 // 0x554(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkerWaitingNotifyInterval;                       // 0x558(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpCheckInterval;                                 // 0x55C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpCheckMoveDistanceThreshold;                    // 0x560(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarpThreshold;                                     // 0x564(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoDecreaseHateValue_PercentMaxHP_PerSecond;      // 0x568(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HateDecreaseDamageRate;                            // 0x56C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hate_ForceUp_HPRate_OtomoActive;                   // 0x570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Hate_ForceUp_HPRate_IncidentBattle;                // 0x574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatEndDistance_BattleStartSelfPos_To_SelfPos;   // 0x578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatEndDistance_BattleStartSelfPos_To_TargetPos; // 0x57C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CombatEndDistance_BattleStartSelfPos_To_TargetPos_AddFirstTargetDistance; // 0x580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavigationAreaDivideExtents;                       // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalNavigationUpdateFrequencySetting> NavigationUpdateFrequencySettingsFromPlayer;       // 0x588(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        AutoSaveSpan;                                      // 0x598(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SaveDataName_WorldBaseInfo;                        // 0x59C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SaveDataName_World;                                // 0x5A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SaveDataName_PlayerDirectory;                      // 0x5AC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SaveDataName_LocalData;                            // 0x5B4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SaveDataName_WorldOption;                          // 0x5BC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalSupportedPlatformType, int32> MaxWorldDataNumMap;                                // 0x5C8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        PalWorldTime_GameStartHour;                        // 0x618(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PalWorldMinutes_RealOneMinute;                     // 0x61C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NightStartHour;                                    // 0x620(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NightEndHour;                                      // 0x624(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerMorningHour;                                 // 0x628(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerSleepStartHour;                              // 0x62C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NightSkipWaitSecond;                               // 0x630(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalPlayerAndOtomo_LightRangeScale;               // 0x634(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BuildBaseUnitGridDefinition;                       // 0x638(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildSimulationVerticalAdjustRate;                 // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildSimulationVerticalMinLength;                  // 0x654(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildSimulationFoundationFloatingAllowance;        // 0x658(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalBuildObjectInstallStrategy, struct FVector> BuildSimulationFoundationCheckCollisionScale;      // 0x660(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        BuildSimulationRoofHeightOffset;                   // 0x6B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildSimulationStairHeightOffset;                  // 0x6B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildSimulationLeanAngleMax;                       // 0x6B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingProgressInterpolationSpeed;                // 0x6BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerRecord_BuildingObjectMaxNum;                 // 0x6C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildingMaxZ;                                      // 0x6C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildObj_HatchedPalCharacterLevel;                 // 0x6C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BuildObj_DamageScarecrowStartRecoveryTime;         // 0x6CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampAreaRange;                                 // 0x6D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampPalFindWorkRange;                          // 0x6D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PalArriveToWorkLocationRange;                      // 0x6D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PalArriveToWorkLocationRangeZ;                     // 0x6DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampNeighborMinimumDistance;                   // 0x6E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PalRotateSpeedToWork;                              // 0x6E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampFoliageWorkableRange;                      // 0x6E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampHungerApproachToPlayer;                    // 0x6EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampHungerUnreachableObjectTimeoutRealSeconds; // 0x6F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HungerHUDDisplayRange;                             // 0x6F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkAmountBySecForPlayer;                          // 0x6F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerEventTriggerInterval;                // 0x6FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerEventTriggerProbability;             // 0x700(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerSanityWarningThreshold;              // 0x704(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerFinishEatingFullStomach;             // 0x708(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerFinishEatingSanity;                  // 0x70C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseCampWorkerFinishEatCount;                      // 0x710(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerRecoverHungryTurnToTargetTimeout;    // 0x714(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerStartSleepHpPercentage;              // 0x718(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerSleepInPlaceRecoverSanityRate;       // 0x71C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerDistancePickableItem;                // 0x720(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPalBaseCampItemContainerType> BaseCampBuildingItemContainerPriority;             // 0x728(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        FoliageRespawnFailedExtraRangeOfBaseCamp;          // 0x738(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampPalCombatRange_AddCampRange;               // 0x73C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatInterval                        BaseCampPalWalkTime_BeforeSleep;                   // 0x740(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampTimeFinishBattleModeAfterEmptyEnemy;       // 0x748(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalCharacterImportanceType       BaseCampWorkerMoveModeChangeThreshold;             // 0x74C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E3B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BaseCampWorkerDirectorTickForAssignWorkByCount;    // 0x750(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkerLookToTargetWork;                    // 0x754(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReviveWorkAdditionalRange;                         // 0x758(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkAroundRangeDefault;                            // 0x75C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EPalWorkType>              IssueNotifyWorkTypes;                              // 0x760(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        WorkAmountByManMonth;                              // 0x770(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkNotifyDelayTime;                               // 0x774(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkFinishDelayCallAddWorkNotifyDelayTime;         // 0x778(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkIgnitionTorchWaitTime;                         // 0x77C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPalWorkAssignableCheckResult, enum class EPalMonsterControllerBaseCampLogType> WorkAssignFailedLogTypeMap;                        // 0x780(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        WorkTransportingSpeedRate;                         // 0x7D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E40[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalDataTableRowName_ItemData> BaseCampNotTransportItemBlackList;                 // 0x7D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        WorkTransportingDelayTimeDropItem;                 // 0x7E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseCampStopProvideEnergyInterval;                 // 0x7EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPalBaseCampPassiveEffectWorkHardType, struct FPalBaseCampPassiveEffectWorkHardInfo> BaseCampPassiveEffectWorkHardInfoMap;              // 0x7F0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        BaseCampWorkCollectionRestoreStashSeconds;         // 0x840(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E41[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalWorkTypeSet>               WorkTypeAssignPriorityOrder;                       // 0x848(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_Build;                        // 0x858(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_FoliageWork;                  // 0x898(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_ReviveCharacterWork;          // 0x8D8(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_TransportItemInBaseCamp;      // 0x918(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_RepairBuildObjectInBaseCamp;  // 0x958(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_BreedFarm;                    // 0x998(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkAssignDefineDataStaticSetting WorkAssignDefineData_ExtinguishBurn;               // 0x9D8(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        WorkSuitabilityMaxRank;                            // 0xA18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E42[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalWorkSuitability, struct FPalWorkSuitabilityDefineData> WorkSuitabilityDefineDataMap;                      // 0xA20(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkSuitabilityCollectionDefineData WorkSuitabilityDefineData_Collection;              // 0xA70(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkSuitabilityDeforestDefineData WorkSuitabilityDefineData_Deforest;                // 0xA98(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalWorkSuitabilityMiningDefineData   WorkSuitabilityDefineData_Mining;                  // 0xAC0(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DropItemWaitInsertMaxNumPerTick;                   // 0xAE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalDungeonMarkerPointSpawnParameter  DungeonSpawnParameterDefault;                      // 0xAEC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        GamePad_NotAimCameraRotateSpeed_DegreePerSecond;   // 0xAFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamePad_AimCameraRotateSpeed_DegreePerSecond;      // 0xB00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mouse_NotAimCameraRotateSpeed;                     // 0xB04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Mouse_AimCameraRotateSpeed;                        // 0xB08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawCameraMaxSpeedRate;                             // 0xB0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeForCameraMaxSpeed;                             // 0xB10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimInterpInterval;                                 // 0xB14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvaderSelfDeleteAddTime;                          // 0xB18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvadeProbability;                                 // 0xB1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeOccurablePlayerLevel;                        // 0xB20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeJudgmentInterval_Minutes;                    // 0xB24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeCollTime_Max_Minutes;                        // 0xB28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeCollTime_Min_Minutes;                        // 0xB2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeReturnTime_Minutes;                          // 0xB30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeStartPoint_BaseCampRadius_Min_cm;            // 0xB34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeStartPoint_BaseCampRadius_Max_cm;            // 0xB38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisitorNPCProbability;                             // 0xB3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VisitorNPCReturnTime_Minutes;                      // 0xB40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RidingAimOpacity;                                  // 0xB44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HideUITimeWhenNotConflict;                         // 0xB48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstCapturedUIDisplayTime;                        // 0xB4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapturedUIDisplayTime;                             // 0xB50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstActivatedOtomoInfoDisplayTime;                // 0xB54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerLevelUpUIDIsplayTime;                        // 0xB58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerExpGaugeUIDisplayTime;                       // 0xB5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtomoExpGaugeUIDisplayTime;                        // 0xB60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NpcGaugeDisplayDistance;                           // 0xB64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NpcGaugeDisplayRange_CameraSight;                  // 0xB68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GuildMemberGaugeDisplayDIstance;                   // 0xB6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DownPlayerLoupeDisplayDistance;                    // 0xB70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DownPlayerGaugeDisplayRange_CameraSight;           // 0xB74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ReticleOffsetRate;                                 // 0xB78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LowHealthEffectParcent;                            // 0xB88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E47[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalDamageTextType, int32>   DamageTextMargineMap;                              // 0xB90(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DamageTextDisplayLength;                           // 0xBE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             DamageTextMaxOffset;                               // 0xBE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageTextOffsetInterpolationLength;               // 0xBF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E49[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalDamageTextType, float>   DamageTextScaleMap;                                // 0xC00(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             DamageTextRandomOffset;                            // 0xC50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StrongEnemyMarkLevel;                              // 0xC60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtomoInteractUIDisplayDistance;                    // 0xC64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyMarkUIMinScale;                               // 0xC68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyMarkScaleInterpolationLength;                 // 0xC6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             NpcHPGaugeGlobalOffset;                            // 0xC70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayGaugeStartTime;                               // 0xC80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayGaugeProgressPerSecond;                       // 0xC84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventoryWeaponRangeMaxBorder;                     // 0xC88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventoryWeaponStabilityMinBorder;                 // 0xC8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventoryWeaponAccuracyMinBorder;                  // 0xC90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldmapUIMaskClearSize;                           // 0xC94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorldmapUIFTMergeDistance;                         // 0xC98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldmapUIMaxMarker;                               // 0xC9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NPCHPGaugeUpdateSpan;                              // 0xCA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureFailedUIDisplayTime;                        // 0xCA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalDataTableRowName_ItemData> CaptureSphereSortArray;                            // 0xCA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        OpenGameOverUITime;                                // 0xCB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlockRespawnTime;                                  // 0xCBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventoryWeightAlertRate;                          // 0xCC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InventoryWeightGaugeDIsplayTime;                   // 0xCC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtomoLevelUpNoticeUIDisplayTime;                   // 0xCC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OtomoMasteredWazaNoticeUIDisplayTime;              // 0xCCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProgressGaugeInterpolationSpeed;                   // 0xCD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TeleportFadeInTime;                                // 0xCD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TeleportFadeOutTime;                               // 0xCD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerTeleportTimeoutTime;                         // 0xCDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                PassiveSkillAppendNumWeights;                      // 0xCE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsEggLauncherExplosion;                           // 0xCF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E50[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThrowPalBattleRadius;                              // 0xCF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowPalWorkRadius;                                // 0xCF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopeHitPowe;                                       // 0xCFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RopePullPower;                                     // 0xD00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultMaxInventoryWeight;                         // 0xD04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RaycastLengthForDetectIndoor;                      // 0xD08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectConnectAnyPlaceRaycastLength;             // 0xD0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootingTargetRayCastDistance;                     // 0xD10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E53[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                CaptureJudgeRateArray;                             // 0xD18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        CaptureBallBoundCountMax;                          // 0xD28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E54[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ExceptCapturedItemList;                            // 0xD30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EPalCaptureSphereLevelType, int32> CaptureSphereLevelMap;                             // 0xD40(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EPalStatusID, float>         CaptureRateAddByStatusMap;                         // 0xD90(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        IgnoreFirstCaptureFailedHPRate;                    // 0xDE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CaptureRateAdd_ByLegHold;                          // 0xDE4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongPressInterval;                                 // 0xDE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongPressInterval_EnemyCampCage;                   // 0xDEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LongPressInterval_GetHatchedPal;                   // 0xDF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchLockAttenuation;                             // 0xDF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableCharacterWazaScale;                        // 0xDF8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOverrideDamageAdditiveAnimation;                 // 0xDF9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E56[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlinkInterval;                                     // 0xDFC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrimeStateMaintainDurationBaseDefault;             // 0xE00(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TechnologyPointPerLevel;                           // 0xE04(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bossTechnologyPointPerTowerBoss;                   // 0xE08(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bossTechnologyPointPerNormalBoss;                  // 0xE0C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalDataTableRowName_RecipeTechnologyData> DefaultUnlockTechnology;                           // 0xE10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        DefaultTechnologyPoint;                            // 0xE20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TechnologyPoint_UnlockFastTravel;                  // 0xE24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecreaseSanity_DamagedMultiply;                    // 0xE28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FullStomachPercent_RecoverySanity;                 // 0xE2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoverySanity_FullStomach;                        // 0xE30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecreaseSanity_Hunger;                             // 0xE34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecreaseSanity_Starvation;                         // 0xE38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Spawner_IsCheckLoadedWorldPartition;               // 0xE3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E57[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnerDisableDistanceCM_FromBaseCamp;             // 0xE40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultSpawnRadius_S;                      // 0xE44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultSpawnRadius_M;                      // 0xE48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultSpawnRadius_L;                      // 0xE4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultSpawnRadius_NPC;                    // 0xE50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultDespawnDistance_S;                  // 0xE54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultDespawnDistance_M;                  // 0xE58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultDespawnDistance_L;                  // 0xE5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spawner_DefaultDespawnDistance_NPC;                // 0xE60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            CharacterHeadMeshDataTable;                        // 0xE68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CharacterBodyMeshDataTable;                        // 0xE70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CharacterHairMeshDataTable;                        // 0xE78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CharacterEquipmentArmorMeshDataTable;              // 0xE80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            CharacterEyeMaterialDataTable;                     // 0xE88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterMakeColorLimit_SV;                        // 0xE90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoEquipMasteredWaza;                           // 0xE94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ActiveUNKO;                                        // 0xE95(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E59[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxSpawnableDeathPenaltyChest;                     // 0xE98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BuildObjectInstallStrategy_SinkAllowCollisionPresetName; // 0xE9C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectShakeTimeOnDamaged;                       // 0xEA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MapObjectShakeOffsetOnDamaged;                     // 0xEA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapObjectOutlineByReticleTargetting;               // 0xEC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapObjectOutlineByInteractable;                    // 0xEC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalMapObjectRepairInfo               MapObjectRepairInfo;                               // 0xEC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FoliageExtentsXY;                                  // 0xED8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FoliageChunkSeparateScale;                         // 0xEDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectHPDisplayDistance;                        // 0xEE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectHPDisplayTime;                            // 0xEE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectGateLockTime;                             // 0xEE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDirectObtainFromTreasureBox;                      // 0xEEC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E5A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MapObjectEffectTriggerAccumulate_Burn;             // 0xEF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectEffect_Burn_DamageHpRate;                 // 0xEF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MapObjectEffect_Burn_DamageAroundRange;            // 0xEF8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectEffect_Burn_DamageAroundInterval;         // 0xF10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectEffect_Burn_DamageAroundDamageValue;      // 0xF14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectEffect_Burn_DamageAroundAccumulateValue;  // 0xF18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectEffect_Burn_DamageAroundAccumulateValue_ForCharacter; // 0xF1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PasswordLockFailedMaxNum;                          // 0xF20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapObjectItemChestCorruptionRateFromWorkSpeed;     // 0xF24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalOptimizeParameter                 RuntimeOptimizeParameter;                          // 0xF28(0x490)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, struct FPalWorldSecurityWantedPoliceSettingData> WorldSecurityWantedPoliceSettingDataMap;           // 0x13B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<int32, struct FPalWorldSecurityWantedPoliceSettingData> WorldSecurityWantedPoliceSettingDataMapForDS;      // 0x1408(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        StatusPointPerLevel;                               // 0x1458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMaxHPPerStatusPoint;                            // 0x145C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMaxSPPerStatusPoint;                            // 0x1460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddPowerPerStatusPoint;                            // 0x1464(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMaxInventoryWeightPerStatusPoint;               // 0x1468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddCaptureLevelPerStatusPoint;                     // 0x146C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddWorkSpeedPerStatusPoint;                        // 0x1470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddMaxHPPerHPRank;                                 // 0x1474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddAttackPerAttackRank;                            // 0x1478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddDefencePerDefenceRank;                          // 0x147C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddWorkSpeedPerWorkSpeedRank;                      // 0x1480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E62[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                Combi_TalentInheritNum;                            // 0x1488(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                Combi_PassiveInheritNum;                           // 0x1498(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<float>                                Combi_PassiveRandomAddNum;                         // 0x14A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FPalEggRankInfo>               PalEggRankInfoArray;                               // 0x14B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EPalElementType, struct FPalDataTableRowName_MapObjectData> PalEggMapObjectIdMap;                              // 0x14C8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, float>                           PalEggHatchingSpeedRateByTemperature;              // 0x1518(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFont*                                 DebugInfoFont;                                     // 0x1568(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxGuildNameLength;                                // 0x1570(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoinGuildRequestInteractLongPushTime;              // 0x1574(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TutorialMinDisplayTime;                            // 0x1578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TutorialDisplayTime;                               // 0x157C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPalUIRewardDisplayType, float> CommonRewardDisplayTime;                           // 0x1580(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DeadBodyDestroySecond;                             // 0x15D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyCampRespawnCoolTime;                          // 0x15D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnemyCampDespawnDelayTime;                         // 0x15D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PalBoxReviveTime;                                  // 0x15DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AfterNPCTalkDelayTime_Interact;                    // 0x15E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSprintThreshold;                                // 0x15E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSprintThreshold;                                // 0x15E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinHPGaugeDisplayTime;                             // 0x15EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            SoundSourceDataTable;                              // 0x15F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPalPlatformType, TSubclassOf<class UPalOptimizeParameterSetting>> OptimizeParameterSettingClass;                     // 0x15F8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalGameSetting* GetDefaultObj();

	bool TryGetWorkSuitabilityDefineData(enum class EPalWorkSuitability WorkSuitability, struct FPalWorkSuitabilityDefineData* OutDefineData);
	bool IsSoundMuteable(class FName RowName);
	float GetWeakScale(int32 WeakCount);
	int32 GetSoundRadius_cm(class FName RowName);
	class UPalOptionSubsystem* GetOptionSubsystem(class UObject* WorldContextObject);
	void GetMiningRankDefineData(int32 MiningRank, struct FPalMiningRankDefineData* OutDefineData);
	float GetMiningDamageRate(int32 MiningRank);
	float GetEnemyMarkScale(struct FVector& TargetPosition, struct FVector& SelfPosition);
	void GetDeforestRankDefineData(int32 DeforestRank, struct FPalDeforestRankDefineData* OutDefineData);
	float GetDeforestDamageRate(int32 DeforestRank);
	float GetCollectionDropNumRate(int32 CollectionRank);
	float GetCaptureRateByStatus_ForGameSettingBP(class AActor* TargetPal);
	int32 GetCaptureLevelBySphereType(enum class EPalCaptureSphereLevelType SphereType);
	float CalcCaptureRate(float CaptureItemLevel, class UPalIndividualCharacterHandle* TargetHandle, class UPalIndividualCharacterHandle* ThrowCharacterHandle);
};

// 0x0 (0x2E0 - 0x2E0)
// Class Pal.PalGameState
class APalGameState : public AGameStateBase
{
public:

	static class UClass* StaticClass();
	static class APalGameState* GetDefaultObj();

};

// 0x148 (0x428 - 0x2E0)
// Class Pal.PalGameStateInGame
class APalGameStateInGame : public APalGameState
{
public:
	class UPalCharacterManagerReplicator*        CharacterManagerReplicator;                        // 0x2E0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalBaseCampReplicator*                BaseCampReplicator;                                // 0x2E8(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalOptionReplicator*                  OptionReplicator;                                  // 0x2F0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalStageReplicator*                   StageReplicator;                                   // 0x2F8(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalLocationReplicator*                LocationReplicator;                                // 0x300(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E75[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APalNetworkTransmitter*                DedicatedServerTransmitter;                        // 0x358(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalGameSystemInitManagerComponent*    GameSystemInitManager;                             // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APalBotBuilderLocationBase*>    BotBuilderLocation;                                // 0x368(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class FString                                WorldName;                                         // 0x378(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                WorldSaveDirectoryName;                            // 0x388(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDedicatedServer;                                // 0x398(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E79[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxPlayerNum;                                      // 0x39C(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameDateTime                         WorldTime;                                         // 0x3A0(0x8)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             RealUtcTime;                                       // 0x3A8(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ServerFrameTime;                                   // 0x3B0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ServerSessionId;                                   // 0x3B8(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerWildMonsterCount;                            // 0x3C8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerOtomoMonsterCount;                           // 0x3CC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerBaseCampMonsterCount;                        // 0x3D0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerNPCCount;                                    // 0x3D4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerOtherCharacterCount;                         // 0x3D8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_AllUpdate;                // 0x3DC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_Nearest;                  // 0x3E0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_Near;                     // 0x3E4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_MidInSight;               // 0x3E8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_FarInSight;               // 0x3EC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_MidOutSight;              // 0x3F0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_FarOutSight;              // 0x3F4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ImportanceCharacterCount_Farthest;                 // 0x3F8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BaseCampCount;                                     // 0x3FC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NavMeshInvokerCount;                               // 0x400(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E7F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalChatMessage>               ChatMessages;                                      // 0x408(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecievedChatMessageDelegate;                     // 0x418(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalGameStateInGame* GetDefaultObj();

	void OnRep_WorldSaveDirectoryName();
	void OnRep_StageReplicator();
	void OnRep_OptionReplicator();
	void OnRep_LocationReplicator();
	void OnRep_CharacterManagerReplicator();
	void OnRep_BaseCampReplicator();
	void OnRecievedChatMessageDelegate__DelegateSignature(struct FPalChatMessage& Message);
	class FString GetWorldName();
	float GetServerFrameTime();
	int32 GetMaxPlayerNum();
	void BroadcastChatMessage(struct FPalChatMessage& ChatMessage);
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalGameSystemInitProcessHandle
class UPalGameSystemInitProcessHandle : public UObject
{
public:
	uint8                                        Pad_2E82[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPalGameSystemInitProcessHandle*> ChildProcessHandles;                               // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E83[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGameSystemInitProcessHandle* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalGameSystemInitSequenceBase
class UPalGameSystemInitSequenceBase : public UObject
{
public:
	TArray<class UPalGameSystemInitProcessHandle*> ProcessHandles;                                    // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequenceBase* GetDefaultObj();

};

// 0x58 (0xF8 - 0xA0)
// Class Pal.PalGameSystemInitManagerComponent
class UPalGameSystemInitManagerComponent : public UGameStateComponent
{
public:
	uint8                                        Pad_2E85[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalGameSystemInitSequenceSet> InitSequences;                                     // 0xE0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	int32                                        CurrentSequenceIndex;                              // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E86[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGameSystemInitManagerComponent* GetDefaultObj();

	void OnChangeProcessState(class UPalGameSystemInitProcessHandle* ChangedProcessHandle);
	void OnChangeProcessProgressRate(class UPalGameSystemInitProcessHandle* ChangedProcessHandle);
};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_WaitForWorldSystemInit
class UPalGameSystemInitSequence_WaitForWorldSystemInit : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_WaitForWorldSystemInit* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_WaitForLocalNetworkTransmitter
class UPalGameSystemInitSequence_WaitForLocalNetworkTransmitter : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_WaitForLocalNetworkTransmitter* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_WaitForLocalPlayerStateSetup
class UPalGameSystemInitSequence_WaitForLocalPlayerStateSetup : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_WaitForLocalPlayerStateSetup* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_CreateSystemForDedicatedServer
class UPalGameSystemInitSequence_CreateSystemForDedicatedServer : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_CreateSystemForDedicatedServer* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_ReadyWorldSaveData
class UPalGameSystemInitSequence_ReadyWorldSaveData : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_ReadyWorldSaveData* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_InitializeWorld
class UPalGameSystemInitSequence_InitializeWorld : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_InitializeWorld* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_ApplyWorldSaveData
class UPalGameSystemInitSequence_ApplyWorldSaveData : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_ApplyWorldSaveData* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_InitializeWorldAfterAppliedSaveData
class UPalGameSystemInitSequence_InitializeWorldAfterAppliedSaveData : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_InitializeWorldAfterAppliedSaveData* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_StartAutoSave_WorldOnly
class UPalGameSystemInitSequence_StartAutoSave_WorldOnly : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_StartAutoSave_WorldOnly* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_StartAutoSave_WorldAndLocal
class UPalGameSystemInitSequence_StartAutoSave_WorldAndLocal : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_StartAutoSave_WorldAndLocal* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Pal.PalGameSystemInitSequence_MapObjectRegistration
class UPalGameSystemInitSequence_MapObjectRegistration : public UPalGameSystemInitSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UPalGameSystemInitSequence_MapObjectRegistration* GetDefaultObj();

};

// 0x0 (0x3E0 - 0x3E0)
// Class Pal.PalGameViewportClient
class UPalGameViewportClient : public UCommonGameViewportClient
{
public:

	static class UClass* StaticClass();
	static class UPalGameViewportClient* GetDefaultObj();

};

// 0x128 (0x150 - 0x28)
// Class Pal.PalGameWorldSettings
class UPalGameWorldSettings : public UObject
{
public:
	struct FPalOptionWorldSettings               OptionSettings;                                    // 0x28(0x128)(Edit, Config, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalGameWorldSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGetWorldUObject
class UPalGetWorldUObject : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalGetWorldUObject* GetDefaultObj();

};

// 0x78 (0x118 - 0xA0)
// Class Pal.PalGliderComponent
class UPalGliderComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnStartGlidingDelegate;                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndGlidingDelegate;                              // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPalGliderPalInfo>             GliderPalInfos;                                    // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class APalGliderObject*                      CurrentGlider;                                     // 0xD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class APalGliderObject>        CurrentGliderSoftClass;                            // 0xD8(0x30)(Net, Transient, RepNotify, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class APalGliderObject>          CurrentGliderClass;                                // 0x108(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsGliding;                                        // 0x110(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2ED5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGliderComponent* GetDefaultObj();

	class UPalIndividualCharacterHandle* TryGetGliderIndividualHandleFromOtomoHolder();
	void StopGliderSound(struct FPalDataTableRowName_SoundID& ID);
	void StartGliding_ToServer();
	void StartGliding();
	void SetCurrentGliderSoftClass_ToServer(TSoftClassPtr<class APalGliderObject>& GliderSoftClass);
	void PlayGliderSound(struct FPalDataTableRowName_SoundID& ID, struct FPalSoundOptions& Option);
	void OnUpdateOtomoHolderSlot(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle);
	void OnUpdateOtomoHolderInitialized(class APalCharacter* Character);
	void OnUpdateInventoryContainer(class UPalItemContainer* Container);
	void OnUpdateIndividualActor(class UPalIndividualCharacterHandle* Handle);
	void OnUpdateEquipmentSlot(class UPalItemSlot* ItemSlot, enum class EPalPlayerEquipItemSlotType SlotType);
	void OnStartGliding__DelegateSignature();
	void OnStartGliding();
	void OnRep_IsGliding();
	void OnRep_CurrentGliderSoftClass();
	void OnInitializeGlider();
	void OnEndGliding__DelegateSignature();
	void OnEndGliding();
	void OnDeadGliderPal(const struct FPalDeadInfo& DeadInfo);
	void OnCompleteOwnerInitialize();
	void OnChangeMovementMode(class UPalCharacterMovementComponent* Component, enum class EMovementMode PrevMode, enum class EMovementMode NewMode, enum class EPalCharacterMovementCustomMode PrevCustomMode, enum class EPalCharacterMovementCustomMode NewCustomMode);
	void OnChangeGliderVisibility(bool bIsVisibility);
	bool IsGliding();
	bool IsEquipGlider();
	bool HasGliderPal();
	TArray<class FName> GetAllGliderPalNames();
	void EndGliding_ToServer();
	void EndGliding();
	bool CanGliding();
	bool CanEndGliding();
	void CancelGliding();
};

// 0x78 (0x308 - 0x290)
// Class Pal.PalGliderObject
class APalGliderObject : public AActor
{
public:
	float                                        GliderMaxSpeed;                                    // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderSP;                                          // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderAirControl;                                  // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GliderGravityScale;                                // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OffsetLocation;                                    // 0x2A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              OffsetRotation;                                    // 0x2B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseLeftHand;                                      // 0x2D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRightHand;                                     // 0x2D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EDF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AttachBoneName;                                    // 0x2D4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          GliderStartAnimation;                              // 0x2E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          GliderLoopAnimation;                               // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          GliderStartPlayerAnimation;                        // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          GliderLoopPlayerAnimation;                         // 0x2F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalSoundPlayerComponent*              SoundPlayerComponent;                              // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalGliderObject* GetDefaultObj();

	class UPalSkeletalMeshComponent* GetMainMesh();
	class USceneComponent* GetAkOwnerComponent();
};

// 0x70 (0x98 - 0x28)
// Class Pal.PalGroupBase
class UPalGroupBase : public UObject
{
public:
	uint8                                        Pad_2F04[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChangedGroupName;                                // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterCharacterDelegate;                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitCharacterDelegate;                           // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 ID;                                                // 0x60(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GroupName;                                         // 0x70(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalInstanceID>                IndividualCharacterHandleIds;                      // 0x80(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F08[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGroupBase* GetDefaultObj();

	void OnUpdateIndividualActor(class UPalIndividualCharacterHandle* CharacterHandle);
	void OnRep_GroupName();
	void IndividualHandleDelegate__DelegateSignature(class UPalIndividualCharacterHandle* IndividualHandle);
	struct FGuid GetId();
	class FString GetGroupName();
	void ChangedGroupNameDelegate__DelegateSignature(const class FString& NewGroupName);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGroupOperationResultUtility
class UPalGroupOperationResultUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalGroupOperationResultUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGroupDefine
class UPalGroupDefine : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalGroupDefine* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Pal.PalGroupOrganization
class UPalGroupOrganization : public UPalGroupBase
{
public:
	uint8                                        Pad_2F1B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalOrganizationType              OrganizationType;                                  // 0xA0(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F1D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGuid>                         BaseCampIds;                                       // 0xA8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalGroupOrganization* GetDefaultObj();

	void OnDead(const struct FPalDeadInfo& DeadInfo);
	void OnDamage(const struct FPalDamageResult& DamageResult);
};

// 0x78 (0x130 - 0xB8)
// Class Pal.PalGroupGuildBase
class UPalGroupGuildBase : public UPalGroupOrganization
{
public:
	uint8                                        Pad_2F3B[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalGuildPalStorage*                   PalStorage;                                        // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGuid>                         MapObjectInstanceIds_BaseCampPoint;                // 0xF8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        BaseCampLevel;                                     // 0x108(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APalGuildInfo>          WeakGuildInfo;                                     // 0x10C(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F3E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GuildName;                                         // 0x118(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllPlayerNotOnlineAndAlreadyReset;                // 0x128(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F3F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGroupGuildBase* GetDefaultObj();

	void UpdatedGuildNameDelegate__DelegateSignature(const class FString& NewGuildName);
	void ReturnSelfDelegate__DelegateSignature(class UPalGroupGuildBase* Self);
	enum class EPalGroupOperationResult RequestDismantleBaseCamp(struct FGuid& BaseCampId);
	void OnRep_Guildname();
	void OnRep_BaseCampLevel(int32 OldValue);
	void OnDeletePlayerAccount_ServerInternal(class UPalPlayerAccount* DeleteAccount);
	void NotifyPlayerInfoDelegate__DelegateSignature(class UPalGroupGuildBase* Self, struct FGuid& PlayerUId, struct FPalGuildPlayerInfo& PlayerInfo);
	class FString GetGuildName();
	int32 GetBaseCampMaxNumInGuild();
	int32 GetBaseCampLevel();
};

// 0x158 (0x288 - 0x130)
// Class Pal.PalGroupGuild
class UPalGroupGuild : public UPalGroupGuildBase
{
public:
	struct FPalFastGuildPlayerInfoRepInfoArray   PlayerInfoRepInfoArray;                            // 0x130(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FGuid                                 AdminPlayerUId;                                    // 0x278(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalGroupGuild* GetDefaultObj();

	void OnChangedGuildMemberNickName(class UPalIndividualCharacterParameter* Parameter, const class FString& NickName);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGuildPlayerInfoUtility
class UPalGuildPlayerInfoUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalGuildPlayerInfoUtility* GetDefaultObj();

	bool IsValid(struct FPalGuildPlayerInfo& PlayerInfo);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGuildJoinRequestResultUtility
class UPalGuildJoinRequestResultUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalGuildJoinRequestResultUtility* GetDefaultObj();

};

// 0x30 (0x160 - 0x130)
// Class Pal.PalGroupIndependentGuild
class UPalGroupIndependentGuild : public UPalGroupGuildBase
{
public:
	struct FGuid                                 PlayerUId;                                         // 0x130(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalGuildPlayerInfo                   PlayerInfo;                                        // 0x140(0x20)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalGroupIndependentGuild* GetDefaultObj();

};

// 0x158 (0x1C8 - 0x70)
// Class Pal.PalGroupManager
class UPalGroupManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_2F7C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, class UPalGroupBase*>     GroupMap;                                          // 0x78(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalGroupGuildBase*> GuildMap;                                          // 0xC8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalOrganizationType, enum class EPalGroupType> StaticOrganizationGroupTypeMap;                    // 0x118(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalOrganizationType, struct FGuid> StaticOrganizationGroupIdMap;                      // 0x168(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F7E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGroupManager* GetDefaultObj();

	bool TryGetGuildName(struct FGuid& GroupID, class FString* OutGuildName);
	bool TryGetGroupName(struct FGuid& GroupID, class FString* OutGroupName);
	bool IsExistGroup(const class FString& GroupName);
	struct FGuid GetOrganizationGroupId(class UObject* WorldContextObject, enum class EPalOrganizationType OrganizationType);
	void Debug_RequestNewGroup(const struct FPalGroupCreateParameter& CreateParam, FDelegateProperty_ Callback);
	void Debug_RequestExitGroup(struct FPalInstanceID& IndividualId, FDelegateProperty_ Callback);
	void Debug_RequestEnterGroup(struct FPalInstanceID& IndividualId, struct FGuid& GroupID, FDelegateProperty_ Callback);
	void Debug_RequestDisposeGroup(struct FGuid& GroupID, FDelegateProperty_ Callback);
	class UPalGroupBase* Debug_GetFirstGroupByType(enum class EPalGroupType Type);
};

// 0x0 (0x98 - 0x98)
// Class Pal.PalGroupNeutral
class UPalGroupNeutral : public UPalGroupBase
{
public:

	static class UClass* StaticClass();
	static class UPalGroupNeutral* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGroupUtility
class UPalGroupUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalGroupUtility* GetDefaultObj();

	enum class EPalOrganizationType GetOrganizationTypeByIndividualId(class UObject* WorldContextObject, struct FPalInstanceID& IndividualId);
	enum class EPalOrganizationType GetOrganizationTypeByIndividualHandle(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* IndividualHandle);
	class UPalGroupGuildBase* GetLocalPlayerGuild(class UObject* WorldContextObject);
	struct FGuid GetGroupIdByIndividualId(class UObject* WorldContextObject, struct FPalInstanceID& IndividualId);
};

// 0x18 (0x2A8 - 0x290)
// Class Pal.PalGuildInfo
class APalGuildInfo : public AInfo
{
public:
	struct FGuid                                 GroupID;                                           // 0x290(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalGroupGuildBase*                    Guild;                                             // 0x2A0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalGuildInfo* GetDefaultObj();

	void OnRep_Guild(class UPalGroupGuildBase* OldValue);
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalGuildPalStorage
class UPalGuildPalStorage : public UObject
{
public:
	uint8                                        Pad_2FAD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalGuildPalStorage* GetDefaultObj();

	void OnNotifiedRemovedCharacterFromPalBoxInServer(class UPalIndividualCharacterHandle* Handle);
	void OnNotifiedObtainCharacterInServer(class UPalIndividualCharacterHandle* Handle);
};

// 0x58 (0x80 - 0x28)
// Class Pal.PalHate
class UPalHate : public UObject
{
public:
	TMap<struct FPalInstanceID, float>           HateMap;                                           // 0x28(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          HateTimerHandle;                                   // 0x78(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalHate* GetDefaultObj();

	void SelfDeathEvent(const struct FPalDeadInfo& DeadInfo);
	void ForceHateUp_ForActiveAndAttackOtomoPal(class AActor* OtomoPal);
	class AActor* FindMostHateTarget();
	void DamageEvent(const struct FPalDamageResult& DamageResult);
	void ChangeHate(class AActor* Attacker, float PlusHateValue);
	void AttackSuccessEvent(const struct FPalDamageResult& DamageResult);
};

// 0x38 (0xD8 - 0xA0)
// Class Pal.PalHeadUpDisplayComponent
class UPalHeadUpDisplayComponent : public UActorComponent
{
public:
	float                                        HeadUpOffset;                                      // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FBD[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHeadUpDisplayComponent* GetDefaultObj();

	void UpdateInvaderHUD();
	void ShowInvaderHUD();
	void OnUpdatePossessItem(class UPalCharacterParameterComponent* Parameter);
	void OnUpdateOwnerCharacterGroupId(struct FGuid& GroupID);
	void OnInitializedCharacter(class APalCharacter* OwnerCharacter);
};

// 0x18 (0x590 - 0x578)
// Class Pal.PalHeatSourceBoxComponent
class UPalHeatSourceBoxComponent : public UBoxComponent
{
public:
	bool                                         DefaultActive;                                     // 0x578(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FC1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHeatSourceModule*                  HeatSourceModule;                                  // 0x580(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FC2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHeatSourceBoxComponent* GetDefaultObj();

	void SetActiveHeatSource(bool NextIsActive);
	class UPalHeatSourceModule* GetModule();
};

// 0x38 (0x60 - 0x28)
// Class Pal.PalHeatSourceModule
class UPalHeatSourceModule : public UObject
{
public:
	TArray<TWeakObjectPtr<class AActor>>         PlayerList;                                        // 0x28(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AActor>>         ActorList;                                         // 0x38(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                         IsActive;                                          // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FCD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  UnieqName;                                         // 0x4C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalHeatSourceInfo                    HeatSourceInfo;                                    // 0x54(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FCE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHeatSourceModule* GetDefaultObj();

	void SetActivate(bool Active);
	void RemovePlayer(class AActor* Player);
	void RemoveActor(class AActor* Actor);
	void InitializeHeatSource(class FName SourceName, const struct FPalHeatSourceInfo& Info, bool DefaultActive);
	void AddPlayer(class AActor* Player);
	void AddActor(class AActor* Actor);
};

// 0x10 (0x570 - 0x560)
// Class Pal.PalHeatSourceSphereComponent
class UPalHeatSourceSphereComponent : public USphereComponent
{
public:
	bool                                         DefaultActive;                                     // 0x560(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHeatSourceModule*                  HeatSourceModule;                                  // 0x568(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalHeatSourceSphereComponent* GetDefaultObj();

	void SetActiveHeatSource(bool NextIsActive);
	class UPalHeatSourceModule* GetModule();
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalHiddenAreaBase
class APalHiddenAreaBase : public AActor
{
public:
	class UPalProceduralFoliageComponent*        ProceduralComponent;                               // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalHiddenAreaBase* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class Pal.PalHiddenAreaBox
class APalHiddenAreaBox : public APalHiddenAreaBase
{
public:
	class UPalHiddenBoxComponent*                HiddenBoxComponent;                                // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalHiddenAreaBox* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class Pal.PalHiddenAreaCapsule
class APalHiddenAreaCapsule : public APalHiddenAreaBase
{
public:
	class UPalHiddenCapsuleComponent*            HiddenCapsuleComponent;                            // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalHiddenAreaCapsule* GetDefaultObj();

};

// 0x8 (0x580 - 0x578)
// Class Pal.PalHiddenBoxComponent
class UPalHiddenBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_2FE0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHiddenBoxComponent* GetDefaultObj();

	void EndOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BeginOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x560 - 0x560)
// Class Pal.PalHiddenCapsuleComponent
class UPalHiddenCapsuleComponent : public UCapsuleComponent
{
public:

	static class UClass* StaticClass();
	static class UPalHiddenCapsuleComponent* GetDefaultObj();

	void EndOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BeginOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalHitCollision
class APalHitCollision : public AActor
{
public:
	class UPalHitFilter*                         HitFilter;                                         // 0x290(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalHitCollision* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class Pal.PalHitCollisionBox
class APalHitCollisionBox : public APalHitCollision
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalHitCollisionBox* GetDefaultObj();

	void DrawHitCollision();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalHitLocationCalculator
class UPalHitLocationCalculator : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalHitLocationCalculator* GetDefaultObj();

	struct FVector CalcLocation(class UPrimitiveComponent* MyHitComponent, class UPrimitiveComponent* OtherHitComponent);
};

// 0x0 (0x380 - 0x380)
// Class Pal.PalHUD
class APalHUD : public AHUD
{
public:

	static class UClass* StaticClass();
	static class APalHUD* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_MapObject
class UPalHUDDispatchParameter_MapObject : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectConcreteModelBase*        MapObjectConcreteModel;                            // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_MapObject* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_MonsterDetail
class UPalHUDDispatchParameter_MonsterDetail : public UPalHUDDispatchParameterBase
{
public:
	class UPalIndividualCharacterHandle*         IndividualHandle;                                  // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_MonsterDetail* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_ConvertItem
class UPalHUDDispatchParameter_ConvertItem : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectConvertItemModel*         ConvertItemModel;                                  // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_ConvertItem* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_MapObjectEnergyModule
class UPalHUDDispatchParameter_MapObjectEnergyModule : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectEnergyModule*             EnergyModule;                                      // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_MapObjectEnergyModule* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_RecoverOtomo
class UPalHUDDispatchParameter_RecoverOtomo : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectRecoverOtomoModel*        RecoverOtomoModel;                                 // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_RecoverOtomo* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_CharacterDisplay
class UPalHUDDispatchParameter_CharacterDisplay : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectDisplayCharacterModel*    Model;                                             // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_CharacterDisplay* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Pal.PalHUDDispatchParameter_PalBox
class UPalHUDDispatchParameter_PalBox : public UPalHUDDispatchParameterBase
{
public:
	struct FGuid                                 BaseCampId;                                        // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_PalBox* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Pal.PalHUDDispatchParameter_WorkerRadialMenu
class UPalHUDDispatchParameter_WorkerRadialMenu : public UPalHUDDispatchParameterBase
{
public:
	class UPalIndividualCharacterHandle*         IndividualHandle;                                  // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalWorkerRadialMenuResult        ResultType;                                        // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3022[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_WorkerRadialMenu* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Pal.PalHUDDispatchParameter_HungerIcon
class UPalHUDDispatchParameter_HungerIcon : public UPalHUDDispatchParameterBase
{
public:
	bool                                         IsExistFood;                                       // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3025[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 BelongGroupId;                                     // 0x3C(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3026[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_HungerIcon* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class Pal.PalHUDDispatchParameter_Invader
class UPalHUDDispatchParameter_Invader : public UPalHUDDispatchParameterBase
{
public:
	TSoftObjectPtr<class APalCharacter>          ParentCharacter;                                   // 0x38(0x30)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_Invader* GetDefaultObj();

};

// 0x60 (0x98 - 0x38)
// Class Pal.PalHUDDispatchParameter_FadeWidget
class UPalHUDDispatchParameter_FadeWidget : public UPalHUDDispatchParameterBase
{
public:
	enum class EPalFadeWidgetType                FadeWidgetType;                                    // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_302C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          CustomColor;                                       // 0x3C(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x4C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0x50(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_302E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStartFadeIn;                                     // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndFadeIn;                                       // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartFadeOut;                                    // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndFadeOut;                                      // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_FadeWidget* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_CutsceneOverlay
class UPalHUDDispatchParameter_CutsceneOverlay : public UPalHUDDispatchParameterBase
{
public:
	class UPalCutsceneComponent*                 CutsceneComponent;                                 // 0x38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_CutsceneOverlay* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class Pal.PalWorldHUDDisplayInfo
class UPalWorldHUDDisplayInfo : public UObject
{
public:
	struct FPalWorldHUDParameter                 Parameter;                                         // 0x28(0x68)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FGuid                                 ID;                                                // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisposeFlag;                                      // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3037[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 WidgetId;                                          // 0xA4(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3038[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorldHUDDisplayInfo* GetDefaultObj();

};

// 0x288 (0x608 - 0x380)
// Class Pal.PalHUDInGame
class APalHUDInGame : public AHUD
{
public:
	uint8                                        Pad_3063[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUIHUDLayoutBase>       HUDLayoutClass;                                    // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIInputGuard>          PlayerInputGuardClass;                             // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIHUDLayoutBase*                   HUDLayout;                                         // 0x398(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalUserWidgetWorldHUD*> WorldHUDWidgetMap;                                 // 0x3A0(0x50)(Edit, ExportObject, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalUserWidget*>                HUDWidgets;                                        // 0x3F0(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalUserWidgetStackableUI*>     StackableUIWidgets;                                // 0x400(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPalUILiftSlotModel*                   LiftSlotModel;                                     // 0x410(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           HoverWidget;                                       // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPalWorldHUDDisplayInfo*>       WorldHUDDisplayInfos;                              // 0x420(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalWorldHUDDisplayInfo*>       ActiveWorldHUDDisplayInfos;                        // 0x430(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalWidgetBlueprintType, TSoftClassPtr<class UPalUserWidgetStackableUI>> CommonUIClassMap;                                  // 0x440(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<enum class EPalWorldHUDWidgetBlueprintType, TSoftClassPtr<class UPalUserWidgetWorldHUD>> WorldHUDClassMap;                                  // 0x490(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<enum class EPalWidgetBlueprintType, TSubclassOf<class UPalUserWidgetStackableUI>> LoadedCommonUIClassMap;                            // 0x4E0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<enum class EPalWorldHUDWidgetBlueprintType, TSubclassOf<class UPalUserWidgetWorldHUD>> LoadedWorldHUDClassMap;                            // 0x530(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_3067[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalSoundPlayer*                       SoundPlayer;                                       // 0x598(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3068[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  GameMenuLayerTagOrder;                             // 0x5A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FFlagContainer> LayerHideFlagMap;                                  // 0x5B8(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalHUDInGame* GetDefaultObj();

	void TickWorldHUDs();
	void ShowLiftIcon();
	void RemoveWorldHUDFromWidgetId(struct FGuid& ID);
	void RemoveWorldHUD(struct FGuid& ID);
	void RemoveHUD(struct FGuid& ID);
	struct FGuid PushWidgetStackableUI(TSubclassOf<class UPalUserWidgetStackableUI> WidgetClass, class UPalHUDDispatchParameterBase* Parameter);
	void OnApplicationActivationStateChanged(bool bIsFocused);
	void Initialize();
	void HideLiftIcon();
	class UPalUserWidgetWorldHUD* CreateWorldHUDWidget(TSubclassOf<class UPalUserWidgetWorldHUD> WidgetClass, class UPalHUDDispatchParameterBase* Parameter);
	class UPalUserWidget* CreateHUDWidget(TSubclassOf<class UPalUserWidget> WidgetClass, enum class EPalHUDWidgetPriority Priority, class UPalHUDDispatchParameterBase* Parameter);
	void CloseWorldHUDWidget(const struct FGuid& WidgetId);
	void CloseOverlayUI(struct FGuid& ID);
	void CloseHUDWidget(class UPalUserWidget* Widget);
	void BP_SetupPlayerUI();
	void BindGameOverUI();
	struct FGuid AddWorldHUD(const struct FPalWorldHUDParameter& Parameter);
	struct FGuid AddHUD(TSubclassOf<class UPalUserWidget> WidgetClass, enum class EPalHUDWidgetPriority Priority, class UPalHUDDispatchParameterBase* Parameter);
};

// 0x30 (0x400 - 0x3D0)
// Class Pal.PalHUDLayout
class UPalHUDLayout : public UPalActivatableWidget
{
public:
	TSoftClassPtr<class UCommonActivatableWidget> EscapeMenuClass;                                   // 0x3D0(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalHUDLayout* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalHUDServiceProviderInterface
class IPalHUDServiceProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalHUDServiceProviderInterface* GetDefaultObj();

	void PlayAkSound(class UAkAudioEvent* AkEvent);
	class UPalSoundPlayer* GetSoundPlayer();
};

// 0x70 (0x98 - 0x28)
// Class Pal.PalHUDService
class UPalHUDService : public UObject
{
public:
	uint8                                        Pad_30A7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPushedStackableUI;                               // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuccessedCapturePal;                             // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnApplicationActivationStateChanged;               // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInvalidatePlayerInputGuard;                      // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FUITransientData                      TransientData;                                     // 0x70(0x14)(BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_30A9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IPalHUDServiceProviderInterface> ServiceProvider;                                   // 0x88(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalHUDService* GetDefaultObj();

	void StartFadeOut(enum class EPalFadeWidgetLayerType LayerType);
	void StartFadeIn(enum class EPalFadeWidgetLayerType LayerType, class UPalHUDDispatchParameter_FadeWidget* FadeParameter);
	struct FGuid ShowCommonUI(enum class EPalWidgetBlueprintType WBPType, class UPalHUDDispatchParameterBase* Parameter);
	void ShowCommonReward(struct FPalUICommonRewardDisplayData& RewardDisplayData);
	void ShowCommonItemInfo(struct FPalUICommonItemInfoDisplayData& DisplayData);
	void SetHUDLayerHideFlag(struct FGameplayTag& LayerTagName, class FName& HideReasonName, bool IsHide);
	void RemoveWorldHUDFromWidgetId(struct FGuid& ID);
	void RemoveWorldHUD(struct FGuid& ID);
	void RemoveHUD(struct FGuid& ID);
	struct FGuid Push(TSubclassOf<class UPalUserWidgetStackableUI> WidgetClass, class UPalHUDDispatchParameterBase* Parameter);
	void PlayAkSound(class UAkAudioEvent* AkEvent);
	void OnSuccessedCapturePal__DelegateSignature(struct FPalUIPalCaptureInfo& CaptureInfo);
	void OnPushedStackableUI__DelegateSignature(struct FGuid& PushedWidgetID);
	void OnApplicationActivationStateChangedDelegate__DelegateSignature(bool bIsFocused);
	void InvokeFunction_Int32(class FName FunctionName, int32 Value);
	void InvokeFunction_FName(class FName FunctionName, class FName Value);
	void InvokeFunction(class FName FunctionName);
	void InvalidatePlayerInputGuard__DelegateSignature();
	void HideCommonItemInfo();
	class UPalSoundPlayer* GetSoundPlayer();
	class UPalUILiftSlotModel* GetLiftSlotModel();
	void DeactivateFocusCursor();
	class UPalHUDDispatchParameterBase* CreateDispatchParameterForK2Node(class UObject* WorldContextObject, TSubclassOf<class UPalHUDDispatchParameterBase> ParameterClass);
	void CloseOwnerStackableUI(class UObject* InObject);
	void CloseOverlayUIAll();
	void Close(struct FGuid& ID);
	struct FGuid AddWorldHUD(const struct FPalWorldHUDParameter& Parameter);
	struct FGuid AddHUD(TSubclassOf<class UPalUserWidget> WidgetClass, enum class EPalHUDWidgetPriority Priority, class UPalHUDDispatchParameterBase* Parameter);
	void ActivatePlayerInputGuard();
	void ActivateFocusCursor(class UWidget* TargetWidget);
};

// 0x128 (0x3B8 - 0x290)
// Class Pal.PalImGui
class APalImGui : public AActor
{
public:
	uint8                                        Pad_30B0[0x118];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class APalCharacter>          WeakCharacterForParameterDisplay;                  // 0x3A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30B1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalImGui* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Pal.PalDebugWindowSetting
class UPalDebugWindowSetting : public UDataAsset
{
public:
	TArray<class FString>                        PriorityFunctions;                                 // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDebugWindowSetting* GetDefaultObj();

};

// 0x138 (0x160 - 0x28)
// Class Pal.PalIncidentBase
class UPalIncidentBase : public UObject
{
public:
	struct FPalIncidentExecutionSettings         ExecSettings;                                      // 0x28(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_310B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalIncidentIdParameter               IdParameter;                                       // 0x30(0x38)(Edit, EditConst, NativeAccessSpecifierPrivate)
	class UPalIncidentBase*                      ParentIncident;                                    // 0x68(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalIncidentDynamicParameter*          DynamicParameter;                                  // 0x70(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3112[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalIncidentSystemFunctionAccessor    FunctionAccessor;                                  // 0x80(0xC0)(Edit, EditConst, NativeAccessSpecifierPrivate)
	bool                                         bForceStop;                                        // 0x140(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3113[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               OccuredObject;                                     // 0x148(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                               OwnerObject;                                       // 0x150(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalIncidentState                 ExecState;                                         // 0x158(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3114[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIncidentBase* GetDefaultObj();

	void Tick(float DeltaTime);
	void SetDynamicParameter(class UPalIncidentDynamicParameter* Parameter);
	int32 RequestConsumeInventoryItem(class UPalPlayerInventoryData* InventoryData, class FName ItemId, int32 ConsumeNum);
	void OnInitialized();
	void OnGenerated();
	void OnForceStop();
	void OnEnd();
	void OnChildInitialized(class UPalIncidentBase* Child);
	void OnCanceled();
	void OnBegin();
	bool IsInitialized();
	bool IsExecuting();
	bool IsCompleted();
	bool IsCanceled();
	bool HasOption(class FName& Option);
	class UPalIncidentBase* GetRootIncident();
	class UPalIncidentBase* GetParentIncident();
	class UObject* GetOwner();
	class UObject* GetOccuredObject();
	class FName GetIncidentType();
	class FName GetIncidentId();
	class UPalIncidentDynamicParameter* GetDynamicParameter();
	TArray<class FName> GetArgs();
	class FName GetArg(int32 Index);
	void ForceStop();
	void Finish();
	void DropItem(class FName ItemId, int32 DropNum, const struct FVector& SpawnLocation, const struct FVector& ReleaseDirection);
};

// 0x40 (0x1A0 - 0x160)
// Class Pal.PalIncidentList
class UPalIncidentList : public UPalIncidentBase
{
public:
	TArray<class FName>                          FirstIncidentIds;                                  // 0x160(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UPalIncidentBase*>              WaitingIncidents;                                  // 0x170(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	class UPalIncidentBase*                      CurrentIncident;                                   // 0x180(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPalIncidentBase*>              CompletedIncidents;                                // 0x188(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        ProgressCount;                                     // 0x198(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_311F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIncidentList* GetDefaultObj();

	void OnIncidentProgressed(class UPalIncidentBase* PrevIncident, class UPalIncidentBase* NextIncident, int32 ProcessCount);
	void OnAllIncidentsCompleted();
	void InsertIncidentToTop(class FName& ID);
	void InsertIncidentsToTop(TArray<class FName>& IDs);
	void AddIncidents(TArray<class FName>& IDs);
	void AddIncident(class FName& ID);
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalIncidentNotifyListener
class UPalIncidentNotifyListener : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnIncidentStateNotifyDelegate;                     // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               FilterOccuredObject;                               // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               FilterOwnerObject;                                 // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          FilterIncidentIds;                                 // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          FilterIncidentTypes;                               // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalIncidentNotifyListener* GetDefaultObj();

	void UnregisterFromIncidentSystem();
	void RegisterToIncidentSystemWithFilterOwner(class UObject* FilterOwner);
	void RegisterToIncidentSystemWithFilterOccuredOwner(class UObject* FilterOccured, class UObject* FilterOwner);
	void RegisterToIncidentSystemWithFilterOccured(class UObject* FilterOccured);
	void RegisterToIncidentSystemWithFilterIdsOwner(TArray<class FName>& FilterIds, class UObject* FilterOwner);
	void RegisterToIncidentSystemWithFilterIdsOccuredOwner(TArray<class FName>& FilterIds, class UObject* FilterOccured, class UObject* FilterOwner);
	void RegisterToIncidentSystemWithFilterIdsOccured(TArray<class FName>& FilterIds, class UObject* FilterOccured);
	void RegisterToIncidentSystemWithFilterIds(TArray<class FName>& FilterIds);
	void RegisterToIncidentSystemWithFilterIdOwner(class FName FilterId, class UObject* FilterOwner);
	void RegisterToIncidentSystemWithFilterIdOccuredOwner(class FName FilterId, class UObject* FilterOccured, class UObject* FilterOwner);
	void RegisterToIncidentSystemWithFilterIdOccured(class FName FilterId, class UObject* FilterOccured);
	void RegisterToIncidentSystemWithFilterId(class FName FilterId);
	void RegisterToIncidentSystem();
	void OnIncidentStateNotify(class UPalIncidentNotifyListener* Listener, enum class EPalIncidentState IncidentState, struct FPalIncidentNotifyParameter& Parameter);
	void IncidentStateNotifyDelegate__DelegateSignature(class UPalIncidentNotifyListener* Listener, enum class EPalIncidentState IncidentState, struct FPalIncidentNotifyParameter& Parameter);
};

// 0x180 (0x1F0 - 0x70)
// Class Pal.PalIncidentSystem
class UPalIncidentSystem : public UPalWorldSubsystem
{
public:
	TArray<class FName>                          ResidentIncidentList;                              // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<class FName, TSubclassOf<class UPalIncidentBase>> IncidentClassMap;                                  // 0x80(0x50)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UDataTable*                            IncidentParameterDataTable;                        // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIncidentStateNotifyDelegate;                     // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalIncidentBase*>              WaitingIncidents;                                  // 0xE8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalIncidentBase*>              ExecuteIncidents;                                  // 0xF8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalIncidentBase*>              ResidentIncidents;                                 // 0x108(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UPalIncidentNotifyListener*>    Listeners;                                         // 0x118(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31AD[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIncidentSystem* GetDefaultObj();

	class UPalIncidentList* RequestIncidents(TArray<class FName>& Incidents, class UObject* OccuredObject, class UObject* OwnerObject, class UPalIncidentDynamicParameter* Parameter);
	class UPalIncidentBase* RequestIncident(class FName IncidentId, class UObject* OccuredObject, class UObject* OwnerObject, class UPalIncidentDynamicParameter* Parameter);
	void NotifyIncidentState(enum class EPalIncidentState NotifyType, struct FPalIncidentNotifyParameter& Parameter);
	bool IsIncidentBeginAllowed(class UPalIncidentBase* Incident);
	void IncidentStateNotify__DelegateSignature(enum class EPalIncidentState IncidentState, struct FPalIncidentNotifyParameter& Parameter);
	class UPalIncidentBase* GenerateIncident(struct FPalIncidentInitializeParameter* InitializeParam);
	void ForceStopByOwner(class UObject* OwnerObject);
	void ForceStopByOccuredObject(class UObject* OccuredObject);
	void ForceStopByIncidentType(class FName IncidentType);
	void ForceStopByIncidentId(class FName IncidentId);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalIncidentDynamicParameter
class UPalIncidentDynamicParameter : public UObject
{
public:
	class AActor*                                Other;                                             // 0x28(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalIncidentDynamicParameter* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Pal.PalIncidentDynamicParameterTalk
class UPalIncidentDynamicParameterTalk : public UPalIncidentDynamicParameter
{
public:
	enum class EPalIncidentTalkType              TalkType;                                          // 0x30(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31B5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TalkId;                                            // 0x34(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RequestItem;                                       // 0x3C(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequestItemNum;                                    // 0x44(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRequestSucceed;                                  // 0x48(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31B7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIncidentDynamicParameterTalk* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Pal.PalIncidentDynamicParameterRandom
class UPalIncidentDynamicParameterRandom : public UPalIncidentDynamicParameter
{
public:
	class FName                                  SettingName;                                       // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerId;                                          // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31BF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIncidentDynamicParameterRandom* GetDefaultObj();

};

// 0x40 (0x90 - 0x50)
// Class Pal.PalIndividualCharacterContainer
class UPalIndividualCharacterContainer : public UPalContainerBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateContentsDelegate;                          // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSlotsDelegate;                             // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_31CF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPalIndividualCharacterSlot*>   SlotArray;                                         // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalIndividualCharacterContainer* GetDefaultObj();

	void UpdateContentsDelegate__DelegateSignature(class UPalIndividualCharacterContainer* Container);
	void OnRep_Slots();
	int32 Num();
	TArray<class UPalIndividualCharacterSlot*> GetSlots();
	class UPalIndividualCharacterSlot* Get(int32 Index);
	class UPalIndividualCharacterSlot* FindEmptySlot();
	class UPalIndividualCharacterSlot* FindByHandle(class UPalIndividualCharacterHandle* Handle);
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalIndividualCharacterHandle
class UPalIndividualCharacterHandle : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateIndividualActorDelegate;                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        ID;                                                // 0x38(0x30)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalIndividualCharacterHandle* GetDefaultObj();

	void UpdateIndividualActorDelegate__DelegateSignature(class UPalIndividualCharacterHandle* Handle);
	class APalCharacter* TryGetPhantomActor(int32 PhantomId);
	class UPalIndividualCharacterParameter* TryGetIndividualParameter();
	class APalCharacter* TryGetIndividualActor();
	int32 GetPhantomIDByActor(class APalCharacter* Character);
	struct FPalInstanceID GetIndividualID();
};

// 0x0 (0x68 - 0x68)
// Class Pal.PalIndividualCharacterHandleReference
class UPalIndividualCharacterHandleReference : public UPalIndividualCharacterHandle
{
public:

	static class UClass* StaticClass();
	static class UPalIndividualCharacterHandleReference* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalStatusHungerTypeUtility
class UPalStatusHungerTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalStatusHungerTypeUtility* GetDefaultObj();

	bool IsHunger(enum class EPalStatusHungerType Type);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEquipItemContainerUtility
class UPalEquipItemContainerUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalEquipItemContainerUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalIndividualCharacterSaveParameterUtility
class UPalIndividualCharacterSaveParameterUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalIndividualCharacterSaveParameterUtility* GetDefaultObj();

	bool IsValid(struct FPalIndividualCharacterSaveParameter& SaveParameter);
};

// 0x798 (0x7C0 - 0x28)
// Class Pal.PalIndividualCharacterParameter
class UPalIndividualCharacterParameter : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateLevelDelegate;                             // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateRankDelegate;                              // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddExpDelegate;                                  // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateHPDelegate;                                // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSPDelegate;                                // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateFullStomachDelegate;                       // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateHungerTypeDelegate;                        // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateNickNameDelegate;                          // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateNickNameWithParameterDelegate;             // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateShieldMaxHPDelegate;                       // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateShieldHPDelegate;                          // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldDamageDelegate;                            // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSanityDelegate;                            // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateUnusedStatusPoint;                         // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateStatusPointDelegate;                       // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeBuffDelegate;                              // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnConditionChangedDelegate;                        // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWorkSuitabilityChangedDelegate;                  // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGotStatusPointListChangedDelegate;               // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStatusRankChangedDelegate;                       // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInvaderTargetChanged;                            // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTriedConsumeFoodDelegate;                        // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateGroupIdDelegate;                           // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateReviveTimerDelegate;                       // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndMedicalBedDelegate;                           // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRevivedDelegate;                                 // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDeadBodyDelegate;                                // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APalCharacter*                         IndividualActor;                                   // 0x1D8(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        IndividualId;                                      // 0x1E0(0x30)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class APalCharacter*>            PhantomActorMap;                                   // 0x210(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FPalPhantomReplicateInfo>      PhantomActorReplicateArray;                        // 0x260(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NativeAccessSpecifierPublic)
	struct FPalIndividualCharacterSaveParameter  SaveParameter;                                     // 0x270(0x218)(Edit, Net, DisableEditOnTemplate, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAddEquipWazaDelegate;                            // 0x490(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeEquipWazaDelegate;                         // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeMasteredWazaDelegate;                      // 0x4B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_32F4[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        DisableNaturalHealing;                             // 0x520(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FFloatContainer                       AdditionalNatureHealingRate;                       // 0x570(0x10)(Transient, NativeAccessSpecifierPrivate)
	struct FPalIndividualCharacterSaveParameter  SaveParameterMirror;                               // 0x580(0x218)(Transient, NativeAccessSpecifierPrivate)
	class UPalItemContainer*                     EquipItemContainer;                                // 0x798(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 BaseCampId;                                        // 0x7A0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                Debug_CurrentAIActionName;                         // 0x7B0(0x10)(Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalIndividualCharacterParameter* GetDefaultObj();

	void WorkSuitabilityChangedDelegate__DelegateSignature();
	void UseItemInSlot(const struct FPalItemSlotIdAndNum& SlotIdAndNum);
	void UpdateUnusedStatusPointDelegate__DelegateSignature(int32 UnusedPoint);
	void UpdateStatusPointDelegate__DelegateSignature(class FName StatusName, int32 PrevPoint, int32 NewPoint);
	void UpdateSPDelegate__DelegateSignature(const struct FFixedPoint64& NowSP, const struct FFixedPoint64& NowMaxSP, bool IsOverHeated);
	void UpdateShieldMaxHPDelegate__DelegateSignature(const struct FFixedPoint64& NowShieldMaxHP);
	void UpdateShieldHPDelegate__DelegateSignature(const struct FFixedPoint64& NowShieldMaxHP, const struct FFixedPoint64& NowShieldHP);
	void UpdateSanityDelegate__DelegateSignature(float NowSanity, float OldSanity);
	void UpdateReviveTimerDelegate__DelegateSignature(float NowReviveTimer);
	void UpdateRankDelegate__DelegateSignature(int32 NowRank, int32 OldRank);
	void UpdateNickNameWithParameterDelegate__DelegateSignature(class UPalIndividualCharacterParameter* IndividualParameter, const class FString& NewNickName);
	void UpdateNickNameDelegate__DelegateSignature(const class FString& NewNickName);
	void UpdateLevelDelegate__DelegateSignature(int32 AddLevel, int32 NowLevel);
	void UpdateHungerTypeDelegate__DelegateSignature(enum class EPalStatusHungerType Current, enum class EPalStatusHungerType Last);
	void UpdateHPDelegate__DelegateSignature(const struct FFixedPoint64& NowHP, const struct FFixedPoint64& NowMaxHP);
	void UpdateGroupIdDelegate__DelegateSignature(struct FGuid& NewGroupId);
	void UpdateFullStomachDelegate__DelegateSignature(float Current, float Last);
	bool TryFindEatItem(struct FPalContainerId& ContainerId, int32* SlotIndex);
	void TriedConsumeFoodDelegate__DelegateSignature();
	void StoreIndividualActorInfoToSaveParameter();
	void StatusRankChangedDelegate__DelegateSignature();
	void StartRemainderOfLifeTimer();
	void StartRecuperatingInMedicalBed();
	void ShieldDamageDelegate__DelegateSignature(int32 Damage, bool IsShieldBroken);
	void SetStatusPoint(class FName StatusName, int32 Point);
	void SetShieldMaxHP(const struct FFixedPoint64& NextSheildMaxHP);
	void SetShieldHP(const struct FFixedPoint64& NextSheildHP);
	void SetPhysicalHealth(enum class EPalStatusPhysicalHealthType PhysicalHealth);
	void SetNoFallDamageHeightLastJumpedLocation();
	void SetLastJumpedLocation(const struct FVector& Location);
	void SetInvaderData(enum class EPalInvaderType InvaderType, const struct FGuid& InBaseCampId);
	void SetDisableNaturalHealing(class FName Key, bool Disable);
	void SetDecreaseFullStomachRates(class FName Name, float Rate);
	void ResetLastJumpedLocation();
	void RemoveDecreaseFullStomachRates(class FName Name);
	void PartyPalMealInventoryFood();
	void OnRevivedDelegate__DelegateSignature(class UPalIndividualCharacterParameter* IndividualParameter);
	void OnRep_SaveParameter();
	void OnRep_PhantomActorReplicateArray();
	void OnRep_IndividualActor();
	void NaturalUpdateSaveParameter(enum class EPalCharacterNaturalUpdateType Type);
	bool IsSleeping();
	bool IsRarePal();
	bool IsNoFallDamageLastJumpedLocation();
	bool IsNocturnal();
	bool IsLevelMax();
	bool IsHPFullRecovered();
	void InvaderTargetChangedDelegate__DelegateSignature();
	float HungerParameterRate();
	bool HasWorkSuitabilityRank(enum class EPalWorkSuitability InWorkSuitability, int32 SuitabilityRank);
	bool HasWorkSuitability(enum class EPalWorkSuitability InWorkSuitability);
	bool HasMasteredWaza(enum class EPalWazaID WazaID);
	bool HasGenusCategory(enum class EPalGenusCategoryType Category);
	void GotStatusPointListChangedDelegate__DelegateSignature();
	int32 GetWorkSuitabilityRankWithCharacterRank(enum class EPalWorkSuitability WorkSuitability);
	TMap<enum class EPalWorkSuitability, int32> GetWorkSuitabilityRanksWithCharacterRank();
	int32 GetWorkSuitabilityRank(enum class EPalWorkSuitability InWorkSuitability);
	int32 GetWorkSpeedRank();
	enum class EPalBaseCampWorkerSickType GetWorkerSick();
	int32 GetUnusedStatusPoint();
	enum class EPalTribeID GetTribeID();
	void GetStatusPointList(TArray<struct FPalGotStatusPoint>* OutPointList);
	int32 GetStatusPoint(class FName StatusName);
	int32 GetShotAttack_withBuff();
	int32 GetShotAttack();
	struct FFixedPoint64 GetShieldMaxHP();
	struct FFixedPoint64 GetShieldHP();
	struct FPalIndividualCharacterSaveParameter GetSaveParameter();
	float GetSanityValue();
	float GetSanityRate();
	float GetRatePassiveSkill(enum class EPalPassiveSkillEffectType EffectType);
	float GetRatePartnerSkill(enum class EPalPassiveSkillEffectType EffectType);
	int32 GetRank();
	enum class EPalStatusPhysicalHealthType GetPhysicalHealth();
	TArray<class FName> GetPassiveSkillList();
	int32 GetPalSoulRank();
	void GetNickname(class FString* OutName);
	int32 GetMeleeAttack_withBuff();
	int32 GetMeleeAttack();
	float GetMaxSanityValue();
	struct FFixedPoint64 GetMaxHP_withBuff();
	int32 GetMaxHP();
	float GetMaxFullStomach();
	TArray<enum class EPalWazaID> GetMasteredWaza();
	int32 GetLevel();
	struct FVector GetLastJumpedLocation();
	enum class EPalStatusHungerType GetHungerType();
	int32 GetHPRank();
	struct FFixedPoint64 GetHP();
	struct FGuid GetGroupId();
	enum class EPalGenderType GetGenderType();
	float GetFullStomachRate();
	float GetFullStomachDecreasingRate();
	float GetFullStomach();
	float GetFoodStatusRate(enum class EPalFoodStatusEffectType EffectType);
	int32 GetExp();
	TArray<enum class EPalWazaID> GetEquipWaza();
	struct FPalContainerId GetEquipItemContainerId();
	struct FPalIndividualCharacterEquipItemContainerHandler GetEquipItemContainerHandler();
	float GetEffectFoodTimeRate();
	class FName GetEffectFoodName();
	int32 GetDefense_withBuff();
	int32 GetDefense();
	int32 GetDefenceRank();
	enum class EPalWorkSuitability GetCurrentWorkSuitability();
	float GetCraftSpeedSickRate();
	int32 GetCraftSpeedByWorkSuitability(enum class EPalWorkSuitability WorkSuitability);
	float GetCraftSpeedBuffRate();
	int32 GetCraftSpeed_withBuff_WorkSuitability(enum class EPalWorkSuitability Suitability);
	int32 GetCraftSpeed_withBuff();
	int32 GetCraftSpeed();
	class FName GetCharacterID();
	TSoftClassPtr<class APalCharacter> GetCharacterClass();
	enum class EPalBaseCampWorkerEventType GetBaseCampWorkerEventType();
	struct FGuid GetBaseCampId();
	int32 GetAttackRank();
	float GetAffectSanityValue();
	void FullRecoveryHP();
	void EndRecuperatingInMedicalBed();
	void EndMedicalBedDelegate__DelegateSignature();
	void DecrementUnusedStatusPoint();
	void DecreaseShieldHPByDamage(int32 Damage);
	void DeadBodyDelegate__DelegateSignature(class UPalIndividualCharacterHandle* IndividualHandle);
	void ConditionChangedDelegate__DelegateSignature();
	void ClearEquipWaza();
	void ChangeMasteredWazaDelegate__DelegateSignature(class UPalIndividualCharacterParameter* IndividualParameter, enum class EPalWazaID WazaID);
	void ChangeEquipWazaDelegate__DelegateSignature(class UPalIndividualCharacterParameter* IndividualParameter);
	void ChangeBuffStatusDelegate__DelegateSignature();
	void AddPassiveSkill(class FName AddSkill, class FName OverrideSkill);
	void AddHP(const struct FFixedPoint64& PlusHP);
	void AddExpDelegate__DelegateSignature(int32 AddExp, int32 NowExp);
	void AddEquipWazaDelegate__DelegateSignature(enum class EPalWazaID WazaID);
	void AddEquipWaza(enum class EPalWazaID WazaID);
};

// 0x218 (0x240 - 0x28)
// Class Pal.PalIndividualCharacterSaveParameterObject
class UPalIndividualCharacterSaveParameterObject : public UObject
{
public:
	struct FPalIndividualCharacterSaveParameter  SaveParameter;                                     // 0x28(0x218)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalIndividualCharacterSaveParameterObject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalIndividualCharacterParameterUtility
class UPalIndividualCharacterParameterUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalIndividualCharacterParameterUtility* GetDefaultObj();

	int32 CraftSpeedWorkSuitability(enum class EPalWorkSuitability WorkSuitability, class UPalIndividualCharacterParameter* Parameter);
	int32 CraftSpeed(class UPalIndividualCharacterParameter* Parameter);
};

// 0x90 (0xB8 - 0x28)
// Class Pal.PalIndividualCharacterSlot
class UPalIndividualCharacterSlot : public UObject
{
public:
	uint8                                        Pad_332E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateSlotHandleDelegate;                        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSlotLockDelegate;                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalIndividualCharacterHandle*         Handle;                                            // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalInstanceID                        ReplicateHandleID;                                 // 0x58(0x30)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3333[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalContainerId                       ContainerId;                                       // 0x90(0x10)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SlotIndex;                                         // 0xA0(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 LockPlayerUId;                                     // 0xA4(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalTribeID                       PermissionTribeID;                                 // 0xB4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsReplicateCharacterParameter;                    // 0xB5(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3334[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIndividualCharacterSlot* GetDefaultObj();

	void UpdateSlotLockDelegate__DelegateSignature(class UPalIndividualCharacterSlot* Slot);
	void UpdateSlotHandleDelegate__DelegateSignature(class UPalIndividualCharacterSlot* Slot, class UPalIndividualCharacterHandle* LastHandle);
	void Setup(int32 InSlotIndex, struct FPalContainerId& InContainerId);
	void OnRep_LockPlayerUId();
	void OnRep_HandleID();
	bool IsLocked();
	bool IsEmpty();
	int32 GetSlotIndex();
	struct FPalCharacterSlotId GetSlotId();
	struct FGuid GetLockPlayerUId();
	class UPalIndividualCharacterHandle* GetHandle();
	bool CanSetHandle(class UPalIndividualCharacterHandle* InHandle);
};

// 0x40 (0xF8 - 0xB8)
// Class Pal.PalIndividualCharacterReferenceSlot
class UPalIndividualCharacterReferenceSlot : public UPalIndividualCharacterSlot
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateSlotReferenceHandleDelegate;               // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        IndividualId;                                      // 0xC8(0x30)(Edit, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalIndividualCharacterReferenceSlot* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Pal.PalIndividualCharacterSlotsObserver
class UPalIndividualCharacterSlotsObserver : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateContainerDelegate;                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_333D[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalIndividualCharacterSlotsObserver* GetDefaultObj();

	void UpdateContainerDelegate__DelegateSignature();
	void OnUpdateSlot(class UPalIndividualCharacterSlot* Slot, class UPalIndividualCharacterHandle* LastHandle);
	void OnUpdateContainerSlots(class UPalIndividualCharacterContainer* Container);
	void OnUpdateContainerSize(class UPalIndividualCharacterContainer* Container);
	void OnUpdateContainer(class UPalIndividualCharacterContainer* Container);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInflictDamageNotifyInterface
class IPalInflictDamageNotifyInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalInflictDamageNotifyInterface* GetDefaultObj();

	void OnInflictDamage(struct FPalDamageResult& DamageResult);
	void OnDefeatCharacter(struct FPalDeadInfo& DeadInfo);
};

// 0x30 (0xD0 - 0xA0)
// Class Pal.PalInsideBaseCampCheckComponent
class UPalInsideBaseCampCheckComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnEnterBaseCampDelegate;                           // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLeaveBaseCampDelegate;                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 NowInsideBaseCampID;                               // 0xC0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalInsideBaseCampCheckComponent* GetDefaultObj();

	void OnLeaveBaseCampDelegate__DelegateSignature();
	void OnEnterBaseCampDelegate__DelegateSignature(class UPalBaseCampModel* Model);
	bool IsInsideBaseCamp();
	class UPalBaseCampModel* GetInsideBaseCampModel();
	struct FGuid GetInsideBaseCampID();
};

// 0x70 (0x5D0 - 0x560)
// Class Pal.PalInteractiveObjectSphereComponent
class UPalInteractiveObjectSphereComponent : public USphereComponent
{
public:
	uint8                                        Pad_3354[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalInteractDelegates*                 InteractDelegates;                                 // 0x570(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableTriggerInteract;                          // 0x578(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsImplementedTriggerInteract;                     // 0x579(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableInteractingTick;                          // 0x57A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableInteractingTickInClientOnly;              // 0x57B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3355[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FComponentReference                   IndicatorOriginRef;                                // 0x580(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TScriptInterface<class IPalInteractiveObjectIndicatorInterface> IndicatorInterface;                                // 0x5A8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnCreateInteractDelegatesDelegate;                 // 0x5B8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3357[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalInteractiveObjectSphereComponent* GetDefaultObj();

	void SetIndicatorInterface(TScriptInterface<class IPalInteractiveObjectIndicatorInterface> InIndicatorInterface);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCreateInteractsDelegates__DelegateSignature(class UPalInteractDelegates* InteractDelegates);
	void OnCreateInteractDelegatesMultiCast__DelegateSignature(class UPalInteractDelegates* InteractDelegates);
	struct FVector GetIndicatorLocation();
	void EnableTriggerInteract();
	class UPalInteractDelegates* Delegates();
	void CallOrRegisterOnCreateInteractDelegates(FDelegateProperty_ Delegate);
};

// 0x0 (0x5D0 - 0x5D0)
// Class Pal.PalInteractableSphereComponentNative
class UPalInteractableSphereComponentNative : public UPalInteractiveObjectSphereComponent
{
public:

	static class UClass* StaticClass();
	static class UPalInteractableSphereComponentNative* GetDefaultObj();

};

// 0xF0 (0x190 - 0xA0)
// Class Pal.PalInteractComponent
class UPalInteractComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnStartInteractiveObjectDelegate;                  // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndInteractiveObjectDelegate;                    // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateInteractiveObjectDelegate;                 // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TScriptInterface<class IPalInteractiveObjectComponentInterface>> InteractiveObjects;                                // 0xD0(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TScriptInterface<class IPalInteractiveObjectComponentInterface> TargetInteractiveObject;                           // 0xE0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TScriptInterface<class IPalInteractiveObjectComponentInterface> LastInteractingObject;                             // 0xF0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3362[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        InteractDisableFlags;                              // 0x140(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalInteractComponent* GetDefaultObj();

	void UpdateInteractiveObjectDelegate__DelegateSignature(TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject);
	void TerminateInteract();
	void StartTriggerInteract(enum class EPalInteractiveObjectActionType ActionType);
	void StartInteractiveObjectDelegate__DelegateSignature(TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject);
	void SetEnableInteractByFlagName(class FName& FlagName, bool bEnable, bool bTerminateInteractIfDisable);
	void SetEnableInteract(bool bEnable, bool bTerminateInteractIfDisable);
	void OnEnableInteract(TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	bool IsInteracting();
	bool IsEnableInteract();
	void EndTriggerInteract(enum class EPalInteractiveObjectActionType ActionType);
	void EndInteractiveObjectDelegate__DelegateSignature();
};

// 0x78 (0x5F0 - 0x578)
// Class Pal.PalInteractiveObjectBoxComponent
class UPalInteractiveObjectBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_337C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalInteractDelegates*                 InteractDelegates;                                 // 0x588(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableTriggerInteract;                          // 0x590(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsImplementedTriggerInteract;                     // 0x591(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableInteractingTick;                          // 0x592(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableInteractingTickInClientOnly;              // 0x593(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_337E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FComponentReference                   IndicatorOriginRef;                                // 0x598(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAdjustIndicatorLocationZForPlayer;              // 0x5C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_337F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IPalInteractiveObjectIndicatorInterface> IndicatorInterface;                                // 0x5C8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnCreateInteractDelegatesDelegate;                 // 0x5D8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3380[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalInteractiveObjectBoxComponent* GetDefaultObj();

	void SetIndicatorInterface(TScriptInterface<class IPalInteractiveObjectIndicatorInterface> InIndicatorInterface);
	void SetForceDisableInteract();
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCreateInteractsDelegates__DelegateSignature(class UPalInteractDelegates* InteractDelegates);
	void OnCreateInteractDelegatesMultiCast__DelegateSignature(class UPalInteractDelegates* InteractDelegates);
	struct FVector GetIndicatorLocation();
	void EnableTriggerInteract();
	class UPalInteractDelegates* Delegates();
	void CallOrRegisterOnCreateInteractDelegates(FDelegateProperty_ Delegate);
};

// 0x70 (0x5D0 - 0x560)
// Class Pal.PalInteractiveObjectCapsuleComponent
class UPalInteractiveObjectCapsuleComponent : public UCapsuleComponent
{
public:
	uint8                                        Pad_3392[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalInteractDelegates*                 InteractDelegates;                                 // 0x570(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableTriggerInteract;                          // 0x578(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsImplementedTriggerInteract;                     // 0x579(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableInteractingTick;                          // 0x57A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsEnableInteractingTickInClientOnly;              // 0x57B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3394[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FComponentReference                   IndicatorOriginRef;                                // 0x580(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAdjustIndicatorLocationZForPlayer;              // 0x5A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3396[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IPalInteractiveObjectIndicatorInterface> IndicatorInterface;                                // 0x5B0(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnCreateInteractDelegatesDelegate;                 // 0x5C0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalInteractiveObjectCapsuleComponent* GetDefaultObj();

	void SetIndicatorInterface(TScriptInterface<class IPalInteractiveObjectIndicatorInterface> InIndicatorInterface);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCreateInteractsDelegates__DelegateSignature(class UPalInteractDelegates* InteractDelegates);
	void OnCreateInteractDelegatesMultiCast__DelegateSignature(class UPalInteractDelegates* InteractDelegates);
	struct FVector GetIndicatorLocation();
	void EnableTriggerInteract();
	class UPalInteractDelegates* Delegates();
	void CallOrRegisterOnCreateInteractDelegates(FDelegateProperty_ Delegate);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInteractiveObjectActionInfoUtility
class UPalInteractiveObjectActionInfoUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalInteractiveObjectActionInfoUtility* GetDefaultObj();

	enum class EPalInteractiveObjectIndicatorType GetIndicatorType(struct FPalInteractiveObjectActionInfoSet& ActionInfo, enum class EPalInteractiveObjectActionType ActionType);
	struct FPalInteractiveObjectActionBy CreateSituationInfo(class UObject* WorldContextObject);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInteractiveObjectIndicatorTypeUtility
class UPalInteractiveObjectIndicatorTypeUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalInteractiveObjectIndicatorTypeUtility* GetDefaultObj();

	class FText ToText(class UObject* WorldObjectContext, enum class EPalInteractiveObjectIndicatorType Type);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInteractiveObjectIndicatorInterface
class IPalInteractiveObjectIndicatorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalInteractiveObjectIndicatorInterface* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class Pal.PalInteractDelegates
class UPalInteractDelegates : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnEnableTriggerInteract;                           // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractBegin;                                   // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractEnd;                                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteracting;                                     // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTriggerInteract;                                 // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartTriggerInteract;                            // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndTriggerInteract;                              // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTriggeringInteract;                              // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalInteractDelegates* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInteractiveInterface
class IPalInteractiveInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalInteractiveInterface* GetDefaultObj();

	bool IsEnableTriggerInteract();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInteractiveObjectComponentInterface
class IPalInteractiveObjectComponentInterface : public IPalInteractiveInterface
{
public:

	static class UClass* StaticClass();
	static class IPalInteractiveObjectComponentInterface* GetDefaultObj();

	void SetIndicatorInterface(TScriptInterface<class IPalInteractiveObjectIndicatorInterface> InIndicatorInterface);
	class UObject* Self();
	class FText GetIndicatorText(class UObject* WorldContextObject, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	struct FVector GetIndicatorLocation();
	void GetIndicatorInfo(struct FPalInteractiveObjectActionInfoSet* ActionInfo, struct FPalInteractiveObjectActionBy& SituationInfo);
	void EnableTriggerInteract();
	class UPalInteractDelegates* Delegates();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalInteractiveObjectComponentUtility
class UPalInteractiveObjectComponentUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalInteractiveObjectComponentUtility* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalInvaderBaseCampObserver
class UPalInvaderBaseCampObserver : public UObject
{
public:
	class UPalBaseCampModel*                     TargetBaseCamp;                                    // 0x28(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 TargetBaseCampId;                                  // 0x30(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInvading;                                       // 0x40(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsCoolTime;                                       // 0x41(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33BF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoolTimeFinish;                                    // 0x44(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CoolTimeElapsed;                                   // 0x48(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlayerInBaseCampTimer;                             // 0x4C(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalInvaderBaseCampObserver* GetDefaultObj();

};

// 0xC0 (0x220 - 0x160)
// Class Pal.PalInvaderIncidentBase
class UPalInvaderIncidentBase : public UPalIncidentBase
{
public:
	enum class EPalInvaderType                   InvaderType;                                       // 0x160(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            InvaderDataTable;                                  // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APalAIController>          MonsterAIControllerClass;                          // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APalAIController>          EnemyAIControllerClass;                            // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPalInvaderSpawnCharacterParameter> InvaderMember;                                     // 0x180(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class APalAIController*>              MemberController;                                  // 0x190(0x10)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class FName                                  ChosenInvaderDataRowName;                          // 0x1A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 GroupGuid;                                         // 0x1A8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanExecute;                                       // 0x1B8(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33CB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalSquad*                             Squad;                                             // 0x1C0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FPalInstanceID, struct FGuid>    LocationMap;                                       // 0x1C8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33CC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalInvaderIncidentBase* GetDefaultObj();

	void StartInvader();
	void SpawnMemberCharacters(const struct FVector& StartLocation);
	bool SelectInvaders(int32 Grade, enum class EPalBiomeType Biome, TArray<struct FPalInvaderSpawnCharacterParameter>* OutInvaderMember);
	void RemoveGroupCharacter(class UPalIndividualCharacterHandle* RemoveIndividualHandle);
	void OnStartInvade();
	void OnInvaderArrived();
	void OnEndInvade();
	bool IsGroupCharacter(class UPalIndividualCharacterHandle* IndividualHandle);
	int32 GetVisitorNPCReturnTimeMinutes();
	class UPalBaseCampModel* GetTargetCampModel();
	bool GetInvaderStartPoint(struct FVector* Result);
	int32 GetInvadeReturnTimeMinutes();
	void GetChosenInvaderGroupName(class FText* OutText);
	int32 GetCandidateStartLocations(TArray<struct FVector>* Result);
	void GetBroadcastParameter(struct FPalIncidentBroadcastParameter* OutParameter);
	int32 GetAliveInvaderNum();
	void EndInvadeByTimelimit();
	void AddGroupCharacter(class UPalIndividualCharacterHandle* AddIndividualHandle, enum class EPalCharacterLocationType LocationType);
};

// 0x150 (0x1C0 - 0x70)
// Class Pal.PalInvaderManager
class UPalInvaderManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_33D6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           SpawnDummyNavInvokerDelegate;                      // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInvaderStartDelegate;                            // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInvaderEndDelegate;                              // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInvaderArrivedDelegate;                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FGuid, struct FPalInvaderStartPointInfo> InvadeStartLocationList;                           // 0xC0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalInvaderBaseCampObserver*> Observers;                                         // 0x110(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalInvaderIncidentBase*> Incidents;                                         // 0x160(0x50)(NativeAccessSpecifierPrivate)
	struct FGuid                                 StartInvaderLogId;                                 // 0x1B0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalInvaderManager* GetDefaultObj();

	void VisitorTravelTest();
	void VisitorTravelLog(enum class EPalLogType LogType);
	void StartInvaderMarchRandom();
	void StartInvaderMarchAll();
	class AActor* SpawnDummyNavInvokerDelegate__DelegateSignature(const struct FTransform& Transform);
	class AActor* SpawnDummyNavInvoker(struct FTransform& Transform);
	class UPalInvaderIncidentBase* RequestIncidentVisitorNPC_BP(class UObject* OccuredBaseCamp, class UPalIncidentDynamicParameterInvader* Parameter);
	bool RequestIncidentVisitorNPC(struct FGuid& Guid, class UPalInvaderBaseCampObserver* Observer);
	class UPalInvaderIncidentBase* RequestIncidentInvaderEnemy_BP(class UObject* OccuredBaseCamp, class UPalIncidentDynamicParameterInvader* Parameter);
	bool RequestIncidentInvaderEnemy(struct FGuid& Guid, class UPalInvaderBaseCampObserver* Observer);
	void RemoveInvaderIncident(class UPalIncidentBase* Incident);
	void InvaderStartDelegate__DelegateSignature(struct FPalIncidentBroadcastParameter& Parameter);
	void InvaderOnArrivedDelegate__DelegateSignature(struct FPalIncidentBroadcastParameter& Parameter);
	void InvaderEndDelegate__DelegateSignature(struct FPalIncidentBroadcastParameter& Parameter);
};

// 0x18 (0x2A8 - 0x290)
// Class Pal.PalInvaderStartPoint
class APalInvaderStartPoint : public AActor
{
public:
	uint8                                        Pad_33D8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalBiomeType                     BiomeType;                                         // 0x2A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33D9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalInvaderStartPoint* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Pal.PalIncidentDynamicParameterInvader
class UPalIncidentDynamicParameterInvader : public UPalIncidentDynamicParameter
{
public:
	struct FGuid                                 TargetBaseCampId;                                  // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalIncidentDynamicParameterInvader* GetDefaultObj();

};

// 0x58 (0xA8 - 0x50)
// Class Pal.PalItemContainer
class UPalItemContainer : public UPalContainerBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateContentsDelegate;                          // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalItemSlot*>                  ItemSlotArray;                                     // 0x60(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FPalItemPermission                    Permission;                                        // 0x70(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	float                                        CorruptionMultiplier;                              // 0xA0(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_33E1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalItemContainer* GetDefaultObj();

	void UpdateContentsDelegate__DelegateSignature(class UPalItemContainer* Container);
	void OnUpdateSlotContent(class UPalItemSlot* Slot);
	void OnRep_Permission();
	void OnRep_ItemSlotArray();
	int32 Num();
	struct FPalItemPermission GetPermission();
	int32 GetItemStackCount(class FName StaticItemId);
	class UPalItemSlot* Get(int32 Index);
};

// 0x120 (0x190 - 0x70)
// Class Pal.PalItemContainerManager
class UPalItemContainerManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_33F0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemOperationMoveDelegate;                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FPalContainerId, class UPalItemContainer*> ItemContainerMap_InServer;                         // 0x90(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33F1[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPalContainerId, struct FPalItemContainerBelongInfo> ItemContainerBelongInfo;                           // 0x130(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_33F2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalItemContainerManager* GetDefaultObj();

	bool TryGetSlot(struct FPalItemSlotId& SlotID, class UPalItemSlot** Slot);
	bool TryGetContainer(struct FPalContainerId& ContainerId, class UPalItemContainer** Container);
	void ItemOperationMoveDelegate__DelegateSignature(TArray<struct FPalItemOperationInfo_Move>& OperationInfoSet);
	struct FGuid GetGroupIdByItemSlotId(class UObject* WorldContextObject, struct FPalItemSlotId& SlotID);
	struct FGuid GetGroupIdByItemContainerId(class UObject* WorldContextObject, struct FPalContainerId& ContainerId);
	class UPalItemContainer* GetContainer(struct FPalContainerId& ContainerId);
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalItemContainerMultiHelper
class UPalItemContainerMultiHelper : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateContentDelegate;                           // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalItemContainer*>             Containers;                                        // 0x38(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalItemContainerMultiHelper* GetDefaultObj();

	void UpdateContentDelegate__DelegateSignature(class UPalItemContainerMultiHelper* Self);
	void OnUpdateContainerContent(class UPalItemContainer* Container);
	void OnRep_Containers();
	bool IsExistItems(TArray<struct FPalStaticItemIdAndNum>& StaticItemInfos);
	void FindByStaticItemIds(TArray<class FName>& StaticItemIds, TArray<struct FPalStaticItemIdAndNum>* StaticItemInfos);
	void FindByStaticItemId(class FName StaticItemId, struct FPalStaticItemIdAndNum* StaticItemInfo);
};

// 0x28 (0x660 - 0x638)
// Class Pal.PalItemFlowSplineComponent
class UPalItemFlowSplineComponent : public USplineComponent
{
public:
	float                                        ItemSpawnInterval;                                 // 0x638(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FlowSpeedRate;                                     // 0x63C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatCounter                         FlowingItemSpawnTimer;                             // 0x640(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class AActor>                    ItemVisualBlueprintClass;                          // 0x648(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPalItemFlowInSplineInfo>      FlowingItemInfos;                                  // 0x650(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalItemFlowSplineComponent* GetDefaultObj();

	void UpdateTargetItem(class FName InStaticItemId);
	void UpdateIsFlowing(bool bOn);
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalItemIDManager
class UPalItemIDManager : public UObject
{
public:
	class UPalStaticItemDataAsset*               StaticItemDataAsset;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         WoodItemRowName;                                   // 0x30(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         EggItemRowName;                                    // 0x38(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         PalUpgradeStoneItemRowName;                        // 0x40(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         MoneyItemRowName;                                  // 0x48(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalStaticItemDataTable*               StaticItemDataTable;                               // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalItemIDManager* GetDefaultObj();

	class FName GetStaticItemIdPalEgg(class UObject* WorldContextObject, class FName CharacterID);
	class UPalStaticItemDataBase* GetStaticItemData(class FName StaticItemId);
	struct FPalItemData GetItemData(struct FPalItemId& ItemId);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalItemInventoryBase
class UPalItemInventoryBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalItemInventoryBase* GetDefaultObj();

};

// 0x60 (0x100 - 0xA0)
// Class Pal.PalItemSelectorComponent
class UPalItemSelectorComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnChangeSelectedIndex;                             // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<enum class EPalPlayerInventoryType, struct FPalPlayerInventorySelectData> ItemSelectDataMap;                                 // 0xB0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalItemSelectorComponent* GetDefaultObj();

	void SelectPrevItem(enum class EPalPlayerInventoryType TargetInventory);
	void SelectNextItem(enum class EPalPlayerInventoryType TargetInventory);
	void SelectItem(enum class EPalPlayerInventoryType TargetInventory, int32 Index);
	bool RemoveTargetInventoryType(enum class EPalPlayerInventoryType TargetInventoryType);
	class UPalItemSlot* GetNowSelectedItemSlot(enum class EPalPlayerInventoryType TargetInventory);
	int32 GetNowSelectedIndex(enum class EPalPlayerInventoryType TargetInventory);
	class UPalItemContainer* GetContainer(enum class EPalPlayerInventoryType TargetInventory);
	void ChangeSelectedIndexDelegate__DelegateSignature(enum class EPalPlayerInventoryType InventoryType, int32 Index);
	bool AddTargetInventoryType(enum class EPalPlayerInventoryType TargetInventoryType);
};

// 0x158 (0x180 - 0x28)
// Class Pal.PalItemSlot
class UPalItemSlot : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateSlotContentDelegate;                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLiftedSlotContentDelegate;                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishLiftedContentDelegate;                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSlotContentDurabilityDelegate;             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSlotCorruptionDelegate;                    // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<int32, bool>                            DirtyMap;                                          // 0x78(0x50)(NativeAccessSpecifierPublic)
	int32                                        SlotIndex;                                         // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalContainerId                       ContainerId;                                       // 0xCC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalItemId                            ItemId;                                            // 0xDC(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StackCount;                                        // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CorruptionProgressValue;                           // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_342C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalItemPermission                    Permission;                                        // 0x110(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UPalDynamicItemDataBase*               DynamicItemData;                                   // 0x140(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_342D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalItemId                            LastItemId_Client;                                 // 0x158(0x28)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalItemSlot* GetDefaultObj();

	void UpdateSlotContentDurabilityDelegate__DelegateSignature(float OldDurability, float NewDurability);
	void UpdateSlotContentDelegate__DelegateSignature(class UPalItemSlot* Slot);
	bool TryGetStaticItemData(class UPalStaticItemDataBase** OutStaticItemData);
	bool TryGetDynamicItemData(class UPalDynamicItemDataBase** OutDynamicItemData);
	void OnUpdateSlotContentDurability(float OldDurability, float NewDurability);
	void OnRep_StackCount();
	void OnRep_Permission();
	void OnRep_ItemId();
	void OnRep_DynamicItemData();
	void OnRep_CorruptionProgressValue();
	void LiftedSlotContentDelegate__DelegateSignature(int32 LiftItemNum);
	bool IsMaxStack();
	bool IsEmpty();
	int32 GetStackCount();
	struct FPalItemSlotId GetSlotId();
	struct FPalItemPermission GetPermission();
	struct FPalItemId GetItemId();
	class FText GetCorruptionRemainTimeText();
	float GetCorruptionProgressRate();
	void FinishLiftedContentDelegate__DelegateSignature();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalItemOperationResultUtility
class UPalItemOperationResultUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalItemOperationResultUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalItemUtility
class UPalItemUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalItemUtility* GetDefaultObj();

	bool TryGetItemVisualBlueprintClass(class UObject* WorldContextObject, class FName StaticItemId, TSoftClassPtr<class AActor>* VisualBlueprintClass);
	void RestoreWithItem(class UObject* WorldContextObject, class FName StaticItemName, class UPalIndividualCharacterParameter* TargetParameter);
	void MaterialInfos(struct FPalItemRecipe& Recipe, TArray<struct FPalStaticItemIdAndNum>* MaterialInfos);
	bool IsValid(struct FPalItemRecipe& Recipe);
	bool IsStatusPointResetItem(class UPalStaticItemDataBase* ItemData);
	bool IsRepairableItem(class UObject* WorldContextObject, struct FPalItemId& TargetItemId);
	bool IsEmpty(struct FPalItemAndNum& ItemInfo);
	int32 GetRecipeMaterialKindCount(struct FPalItemRecipe& Recipe);
	class UPalItemSlot* CreateLocalItemSlot(class UObject* WorldContextObject, class FName StaticItemId, int32 Stack);
	void CollectLocalPlayerControllableItemInfos(class UObject* WorldContextObject, const TArray<class FName>& StaticItemIds, TArray<struct FPalStaticItemIdAndNum>* OutItemInfos, bool bIncludeInRangeBaseCamp);
	bool CanUseHealItem(class UObject* WorldContextObject, class FName StaticItemName, class UPalIndividualCharacterParameter* TargetParameter);
};

// 0x8 (0x580 - 0x578)
// Class Pal.PalLavaBoxComponent
class UPalLavaBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_345B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLavaBoxComponent* GetDefaultObj();

	void EndOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BeginOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x10 (0x330 - 0x320)
// Class Pal.PalLevelInstance
class APalLevelInstance : public ALevelInstance
{
public:
	uint8                                        Pad_345F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalLevelInstance* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalLevelObjectInterface
class IPalLevelObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalLevelObjectInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalLevelObjectInterfaceUtility
class UPalLevelObjectInterfaceUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalLevelObjectInterfaceUtility* GetDefaultObj();

	struct FGuid BP_GetLevelObjectInstanceId(TScriptInterface<class IPalLevelObjectInterface> Target);
};

// 0x18 (0x2C0 - 0x2A8)
// Class Pal.PalLevelObjectCharacterStatusOperator
class APalLevelObjectCharacterStatusOperator : public APalLevelObjectActor
{
public:
	uint8                                        Pad_3465[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractComp;                                      // 0x2B0(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalLevelObjectCharacterStatusOperator* GetDefaultObj();

	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
};

// 0x60 (0x308 - 0x2A8)
// Class Pal.PalLevelObjectObtainable
class APalLevelObjectObtainable : public APalLevelObjectActor
{
public:
	uint8                                        Pad_346A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdatePickupStatusInClient;                      // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UNiagaraSystem>         ObtainFXSoftObj;                                   // 0x2C0(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractComp;                                      // 0x2F0(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPickedInClient;                                   // 0x300(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_346D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalLevelObjectObtainable* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class APalLevelObjectObtainable* Self);
	void OnUpdateFlagMapRecord(class FName Key, bool bFlag);
	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnCompleteSyncPlayer(class APalPlayerState* PlayerState);
	struct FVector GetObtainFXLocation();
};

// 0x8 (0x310 - 0x308)
// Class Pal.PalLevelObjectNote
class APalLevelObjectNote : public APalLevelObjectObtainable
{
public:
	struct FPalDataTableRowName_NoteData         NoteRowName;                                       // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalLevelObjectNote* GetDefaultObj();

};

// 0x0 (0x308 - 0x308)
// Class Pal.PalLevelObjectRelic
class APalLevelObjectRelic : public APalLevelObjectObtainable
{
public:

	static class UClass* StaticClass();
	static class APalLevelObjectRelic* GetDefaultObj();

};

// 0x8 (0x2B0 - 0x2A8)
// Class Pal.PalLevelObjectRespawnPoint
class APalLevelObjectRespawnPoint : public APalLevelObjectActor
{
public:
	class FName                                  RespawnPointID;                                    // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalLevelObjectRespawnPoint* GetDefaultObj();

};

// 0x38 (0x2E0 - 0x2A8)
// Class Pal.PalLevelObjectUnlockableFastTravelPoint
class APalLevelObjectUnlockableFastTravelPoint : public APalLevelObjectActor
{
public:
	uint8                                        Pad_347D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateUnlockStateDelegate;                       // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractComp;                                      // 0x2C0(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUnlocked;                                         // 0x2D0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableRequestUnlock;                               // 0x2D1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_347F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FastTravelPointID;                                 // 0x2D4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3480[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalLevelObjectUnlockableFastTravelPoint* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class APalLevelObjectUnlockableFastTravelPoint* Self);
	void OnUpdateFlagMapRecord(class FName Key, bool bFlag);
	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnCompleteSyncPlayer(class APalPlayerState* PlayerState);
	bool IsUnlocked();
	class UAkAudioEvent* GetUnlockAkAudioEvent();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalLimitVolumeInterface
class IPalLimitVolumeInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalLimitVolumeInterface* GetDefaultObj();

};

// 0x18 (0x590 - 0x578)
// Class Pal.PalLimitVolumeBoxComponent
class UPalLimitVolumeBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_3485[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LimitFlags;                                        // 0x580(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3486[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLimitVolumeBoxComponent* GetDefaultObj();

};

// 0x10 (0x570 - 0x560)
// Class Pal.PalLimitVolumeSphereComponent
class UPalLimitVolumeSphereComponent : public USphereComponent
{
public:
	uint8                                        Pad_3487[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LimitFlags;                                        // 0x568(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3488[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLimitVolumeSphereComponent* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalLoadingScreenWidgetBase
class UPalLoadingScreenWidgetBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalLoadingScreenWidgetBase* GetDefaultObj();

};

// 0x140 (0x240 - 0x100)
// Class Pal.PalLoadoutSelectorComponent
class UPalLoadoutSelectorComponent : public UPalItemSelectorComponent
{
public:
	TSoftClassPtr<class APalWeaponBase>          ThrowOtomoPalWeaponClass;                          // 0x100(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APalWeaponBase>            DummyBallWeaponClass;                              // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnEquipmentItemDelegate;                           // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemoveItemDelegate;                              // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalPlayerInventoryType           PrimaryTargetInventoryType;                        // 0x158(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_34E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentItemSlotIndex;                              // 0x15C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  NowEquipBallItemID;                                // 0x160(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalWeaponBase*                        ThrowOtomoPalWeapon;                               // 0x168(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APalWeaponBase*>                SpawnedWeaponsArray;                               // 0x170(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, class APalWeaponBase*>     SpawnedBallMap;                                    // 0x180(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	class APalWeaponBase*                        DummyBall;                                         // 0x1D0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalPlayerInventoryType           ReplicatedPrimaryTargetInventoryType;              // 0x1D8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_34E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReplicatedCurrentItemSlotIndex;                    // 0x1DC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_34E5[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLoadoutSelectorComponent* GetDefaultObj();

	void TryEquipNowSelectedWeapon_ToAll();
	bool TryEquipNowSelectedWeapon();
	void SetWeaponLoadoutIndex_Internal(int32 Index);
	void SetWeaponLoadoutIndex(int32 Index);
	void SetupItemContainer();
	void SetBallLoadoutIndex_Internal(int32 Index);
	void SetBallLoadoutIndex(int32 Index);
	void RequestChangeNowEquipBallItemID_ToServer(class FName NextBallID);
	void RemoveItem__DelegateSignature(enum class EPalPlayerInventoryType InventoryType, int32 Index);
	void OnUpdateWeaponLoadoutSlot(class UPalItemSlot* ItemSlot);
	void OnUpdateInventorySlot(class UPalItemSlot* ItemSlot);
	void OnRep_PrimaryTargetInventoryType();
	void OnRep_CurrentItemSlotIndex();
	void OnRemoveEquipItem(enum class EPalPlayerInventoryType InventoryType, int32 Index);
	void OnEquipItem(enum class EPalPlayerInventoryType InventoryType, int32 Index);
	enum class EPalPlayerInventoryType GetPrimaryInventoryType();
	void GetNowEquipedBallItemID(class FName* OutBallItemID);
	void EquipmentItem__DelegateSignature(enum class EPalPlayerInventoryType InventoryType, int32 Index);
	void CheckRespawnWeaponActor(const TArray<struct FPalLoadoutSynchronalizedData>& SynchroData, const TArray<class APalWeaponBase*>& WeaponActorList, enum class EPalPlayerInventoryType InventoryType);
	void ChangeWeaponByReplicated();
	void ChangePrimiryInventoryType(enum class EPalPlayerInventoryType TargetInventory);
	void ChangePrevWeaponLoadout_Internal();
	void ChangePrevWeaponLoadout();
	void ChangePrevBallLoadout_Internal();
	void ChangePrevBallLoadout();
	void ChangeNextWeaponLoadout_Internal();
	void ChangeNextWeaponLoadout();
	void ChangeNextBallLoadout_Internal();
	void ChangeNextBallLoadout();
	void AttachSpawnOtomoPalThrowWeapon_ToServer(int32 IssuerID, bool IsAttach, bool ShouldEquipDummyWeapon);
	void AttachSpawnOtomoPalThrowWeapon_ToAll(int32 IssuerID, bool IsAttach, bool ShouldEquipDummyWeapon);
};

// 0x0 (0x2E8 - 0x2E8)
// Class Pal.PalLocalPlayer
class UPalLocalPlayer : public UCommonLocalPlayer
{
public:

	static class UClass* StaticClass();
	static class UPalLocalPlayer* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalLocationCreateParameter
class UPalLocationCreateParameter : public UObject
{
public:
	uint8                                        Pad_34F2[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationCreateParameter* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalLocationBase
class UPalLocationBase : public UObject
{
public:
	struct FGuid                                 CalledPlayerUId;                                   // 0x28(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 ID;                                                // 0x38(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldDisplay;                                    // 0x48(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowInMap;                                        // 0x49(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowInCompass;                                    // 0x4A(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_34F8[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationBase* GetDefaultObj();

	bool ShouldDisplay();
	class UPalLocationPoint* LocationPoint();
	bool IsShowInMap();
	bool IsShowInCompass();
	bool IsRequestedPlayer(struct FGuid& LocalPlayerUId);
	enum class EPalLocationType GetType();
};

// 0xA8 (0x118 - 0x70)
// Class Pal.PalLocationManager
class UPalLocationManager : public UPalWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnAddedLocation;                                   // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemoveLocation;                                  // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddedLocationForCompass;                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemoveLocationForCompass;                        // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FGuid, class UPalLocationBase*>  LocationMap;                                       // 0xB0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalLocationPoint_Custom*>      CustomLocations;                                   // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3500[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationManager* GetDefaultObj();

	void RemoveLocalCustomLocation(struct FGuid& LocationId);
	void LocationDelegate__DelegateSignature(struct FGuid& LocationId, class UPalLocationBase* Location);
	class UPalLocationPoint* GetLocationPoint(struct FGuid& ID);
	TMap<struct FGuid, class UPalLocationBase*> GetLocationMap();
	class UPalLocationBase* GetLocation(struct FGuid& ID);
	int32 GetLocalCustomLocationCount();
	struct FGuid AddLocalCustomLocation(const struct FVector& IconLocation, int32 IconType);
};

// 0x0 (0x50 - 0x50)
// Class Pal.PalLocationPoint
class UPalLocationPoint : public UPalLocationBase
{
public:

	static class UClass* StaticClass();
	static class UPalLocationPoint* GetDefaultObj();

	bool IsEnableFastTravel();
	void InvokeFastTravel();
	float GetRotationZ();
	struct FQuat GetRotation();
	void GetLocationAndRotationZ(struct FVector* OutLocation, float* OutRotationZ);
	struct FVector GetLocation();
};

// 0x20 (0x70 - 0x50)
// Class Pal.PalLocationPointStaticCreateParameter
class UPalLocationPointStaticCreateParameter : public UPalLocationCreateParameter
{
public:
	uint8                                        Pad_3516[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointStaticCreateParameter* GetDefaultObj();

};

// 0x20 (0x70 - 0x50)
// Class Pal.PalLocationPointStatic
class UPalLocationPointStatic : public UPalLocationPoint
{
public:
	struct FVector                               Location;                                          // 0x50(0x18)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RotationZ;                                         // 0x68(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3518[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointStatic* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Pal.PalLocationPointCreateParameter_BaseCamp
class UPalLocationPointCreateParameter_BaseCamp : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_351D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_BaseCamp* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Pal.PalLocationPointBaseCamp
class UPalLocationPointBaseCamp : public UPalLocationPointStatic
{
public:
	struct FGuid                                 BaseCampId;                                        // 0x70(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAvailable;                                      // 0x80(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3525[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointBaseCamp* GetDefaultObj();

	void SetAvailable();
	void OnDisposeTarget(class UPalBaseCampModel* Model);
	bool IsSameGuildWithPlayer(const struct FGuid& PlayerUId);
	struct FGuid GetBaseCampId();
};

// 0x8 (0x78 - 0x70)
// Class Pal.PalLocationPointCreateParameter_BossTower
class UPalLocationPointCreateParameter_BossTower : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_3526[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_BossTower* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Pal.PalLocationPoint_BossTower
class UPalLocationPoint_BossTower : public UPalLocationPointStatic
{
public:
	class APalBossTower*                         BossTower;                                         // 0x70(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalLocationPoint_BossTower* GetDefaultObj();

	class APalBossTower* GetBossTower();
};

// 0x48 (0x98 - 0x50)
// Class Pal.PalLocationPointCreateParameter_Character
class UPalLocationPointCreateParameter_Character : public UPalLocationCreateParameter
{
public:
	uint8                                        Pad_352B[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_Character* GetDefaultObj();

};

// 0x50 (0xA0 - 0x50)
// Class Pal.PalLocationPoint_Character
class UPalLocationPoint_Character : public UPalLocationPoint
{
public:
	struct FPalInstanceID                        IndividualId;                                      // 0x50(0x30)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalCharacterLocationType         CharacterLocationType;                             // 0x80(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_353C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 TargetBaseCampId;                                  // 0x84(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CharacterID;                                       // 0x94(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_353E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPoint_Character* GetDefaultObj();

	void OnDestroyedTarget(class AActor* Target);
	void OnDeadTarget(const struct FPalDeadInfo& Info);
	enum class EPalCharacterLocationType GetCharacterLocationType();
	class FName GetCharacterID();
};

// 0x18 (0x88 - 0x70)
// Class Pal.PalLocationPointCreateParameter_CustomMarker
class UPalLocationPointCreateParameter_CustomMarker : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_3544[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_CustomMarker* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class Pal.PalLocationPoint_Custom
class UPalLocationPoint_Custom : public UPalLocationPointStatic
{
public:
	FMulticastInlineDelegateProperty_            OnIconTypeChanged;                                 // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_354A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPoint_Custom* GetDefaultObj();

	void SetIconType(int32 Index);
	void OnIconTypeChangedDelegate__DelegateSignature(int32 NewType);
	struct FGuid GetOwnerPlayerId();
	int32 GetIconType();
};

// 0x20 (0x90 - 0x70)
// Class Pal.PalLocationPointCreateParameter_DroppedCharacter
class UPalLocationPointCreateParameter_DroppedCharacter : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_354B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_DroppedCharacter* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Pal.PalLocationPoint_DroppedCharacter
class UPalLocationPoint_DroppedCharacter : public UPalLocationPointStatic
{
public:
	struct FGuid                                 MapObjectConcreteModelId;                          // 0x70(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x80(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalLocationPoint_DroppedCharacter* GetDefaultObj();

	struct FGuid GetOwnerPlayerUId();
	class UPalMapObjectPickableCharacterModelBase* GetMapObjectConcreteModel();
};

// 0x10 (0x80 - 0x70)
// Class Pal.PalLocationPointCreateParameter_DroppedChest
class UPalLocationPointCreateParameter_DroppedChest : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_355A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_DroppedChest* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Pal.PalLocationPoint_DroppedChest
class UPalLocationPoint_DroppedChest : public UPalLocationPointStatic
{
public:
	struct FGuid                                 OwnerPlayerUId;                                    // 0x70(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalLocationPoint_DroppedChest* GetDefaultObj();

	struct FGuid GetOwnerPlayerUId();
};

// 0x0 (0x70 - 0x70)
// Class Pal.PalLocationPointCreateParameter_DungeonPortal
class UPalLocationPointCreateParameter_DungeonPortal : public UPalLocationPointStaticCreateParameter
{
public:

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_DungeonPortal* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Pal.PalLocationPointDungeonPortal
class UPalLocationPointDungeonPortal : public UPalLocationPointStatic
{
public:

	static class UClass* StaticClass();
	static class UPalLocationPointDungeonPortal* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Pal.PalLocationPointCreateParameter_FastTravel
class UPalLocationPointCreateParameter_FastTravel : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_3561[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_FastTravel* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Pal.PalLocationPointFastTravel
class UPalLocationPointFastTravel : public UPalLocationPointStatic
{
public:
	struct FGuid                                 LocationId;                                        // 0x70(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShouldUnlockFlag;                                  // 0x80(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3563[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FastTravelPointID;                                 // 0x84(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3564[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointFastTravel* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Pal.PalLocationPointCreateParameter_MapObject
class UPalLocationPointCreateParameter_MapObject : public UPalLocationCreateParameter
{
public:
	uint8                                        Pad_3566[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_MapObject* GetDefaultObj();

};

// 0x28 (0x78 - 0x50)
// Class Pal.PalLocationPoint_MapObject
class UPalLocationPoint_MapObject : public UPalLocationPoint
{
public:
	struct FGuid                                 MapObjectModelId;                                  // 0x50(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               InitialLocationCache;                              // 0x60(0x18)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalLocationPoint_MapObject* GetDefaultObj();

	void OnDisposeTarget(class UPalMapObjectModel* Model, struct FPalMapObjectDisposeOptions& Options);
	bool GetMapObjectName(class FName* MapObjectName);
};

// 0x8 (0x78 - 0x70)
// Class Pal.PalLocationPointCreateParameter_Respawn
class UPalLocationPointCreateParameter_Respawn : public UPalLocationPointStaticCreateParameter
{
public:
	uint8                                        Pad_356E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationPointCreateParameter_Respawn* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Pal.PalLocationPoint_Respawn
class UPalLocationPoint_Respawn : public UPalLocationPointStatic
{
public:
	class FName                                  RespawnPointID;                                    // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalLocationPoint_Respawn* GetDefaultObj();

};

// 0x198 (0x1C0 - 0x28)
// Class Pal.PalLocationReplicator
class UPalLocationReplicator : public UPalGameStateReplicatorBase
{
public:
	struct FFastPalLocationRepInfoArray          RepInfoArray;                                      // 0x28(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3576[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLocationReplicator* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Pal.PalLoginPlayer
class UPalLoginPlayer : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnNotifyObtainNewInServerDelegate;                 // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyRemovedFromPalBoxInServerDelegate;         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 PlayerUId;                                         // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               RegisteredRespawnLocation;                         // 0x58(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalLoginPlayer* GetDefaultObj();

};

// 0xB0 (0x120 - 0x70)
// Class Pal.PalLogManager
class UPalLogManager : public UPalWorldSubsystem
{
public:
	float                                        NormalLogDisplayTime;                              // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImportantLogDisplayTime;                           // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeryImportantLogDisplayTime;                       // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3597[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, struct FPalLogDataSet>    VeryImportantLogMap;                               // 0x80(0x50)(Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalStaticLogCollector>    StaticLogCollectorClass;                           // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalStaticLogCollector*                StaticLogCollector;                                // 0xD8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnAddedNormalLogDelegate;                          // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddedImportantLogDelegate;                       // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddedVeryImportantLogDelegate;                   // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemovedVeryImportantLogDelegate;                 // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalLogManager* GetDefaultObj();

	bool RemoveVeryImportantLog(struct FGuid& TargetLogId);
	void RemovedVeryImportantLogDelegate__DelegateSignature(struct FGuid& LogId);
	struct FGuid AddLog(enum class EPalLogPriority LogPriority, class FText& LogText, struct FPalLogAdditionalData& LogAdditionalData);
	void AddedVeryImportantLogDelegate__DelegateSignature(struct FGuid& LogId, class FText& LogText, struct FPalLogAdditionalData& LogAdditionalData);
	void AddedNormalLogDelegate__DelegateSignature(class FText& LogText, struct FPalLogAdditionalData& LogAdditionalData);
	void AddedImportantLogDelegate__DelegateSignature(class FText& LogText, struct FPalLogAdditionalData& LogAdditionalData);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalLogUtility
class UPalLogUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalLogUtility* GetDefaultObj();

	void SetTextureToAdditionalDataFromStaticItemIDs(class UObject* WorldContextObject, struct FPalLogAdditionalData& TargetData, TArray<class FName>& StaticItemIds);
	void SetTextureToAdditionalDataFromStaticItemID(class UObject* WorldContextObject, struct FPalLogAdditionalData& TargetData, class FName& StaticItemId);
	void SetTextureToAdditionalDataFromHandles(class UObject* WorldContextObject, struct FPalLogAdditionalData& TargetData, TArray<class UPalIndividualCharacterHandle*>& TargetHandles);
	void SetTextureToAdditionalDataFromHandle(class UObject* WorldContextObject, struct FPalLogAdditionalData& TargetData, class UPalIndividualCharacterHandle* TargetHandle);
	void SetTextureToAdditionalDataFromCharacterID(class UObject* WorldContextObject, struct FPalLogAdditionalData& TargetData, class FName CharacterID);
	void CreateLogText(class UObject* WorldContextObject, enum class EPalLogType LogType, class FText* OutText);
	class FText CreateItemGetLogText(class UObject* WorldContextObject, struct FPalStaticItemIdAndNum& ItemIDAndNum);
	void AddWorkerStartWorking_ProductResource_Mining(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, class FName MapObjectId);
	void AddWorkerStartWorking_ProductResource_Deforest(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle);
	void AddWorkerStartWorking_CollectResource(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, class FName StaticItemId);
	void AddWorkerStartWorking(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, enum class EPalWorkType WorkType);
	void AddWorkerStartRepairing(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, class FName& buildedMapObjectName);
	void AddWorkerStartBuilding(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, class FName& buildedMapObjectName);
	void AddWorkerCompleteItemConvertLog(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, struct FPalItemId& ItemId, int32 Num);
	void AddWorkerCompleteBuildLog(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* WorkerHandle, class FName& buildedMapObjectName);
	void AddSkillLog(class UObject* WorldContextObject, enum class EPalLogType LogType, struct FPalLogInfo_Skill& Info);
	void AddItemGetLog(class UObject* WorldContextObject, struct FPalStaticItemIdAndNum& ItemIDAndNum);
	void AddDropPalLog(class UObject* WorldContextObject, struct FPalLogInfo_DropPal& LogInfo);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalLogWidget
class UPalLogWidget : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalLogWidget* GetDefaultObj();

};

// 0x18 (0x420 - 0x408)
// Class Pal.PalLogWidgetBase
class UPalLogWidgetBase : public UPalUserWidget
{
public:
	float                                        DestroyTime;                                       // 0x408(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ElapsedTime;                                       // 0x40C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalLogWidgetState                LogState;                                          // 0x410(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_35ED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalStaticItemIdAndNum                ItemIDAndNum;                                      // 0x414(0xC)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalLogWidgetBase* GetDefaultObj();

	void StartDisplayLog(float InDestroyTime);
	void SetState(enum class EPalLogWidgetState ChangeState);
	void SetLogText(class FText& InText);
	void SetAdditionalData(struct FPalLogAdditionalData& InAdditionalData);
	void RequestOutAnime();
	void RequestInAnime();
};

// 0x158 (0x180 - 0x28)
// Class Pal.PalLongPressObject
class UPalLongPressObject : public UObject
{
public:
	uint8                                        Pad_35F6[0x158];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLongPressObject* GetDefaultObj();

	void ReleaseCallback();
	void PressCallback();
	void LongPressCallback();
};

// 0xC0 (0x160 - 0xA0)
// Class Pal.PalLookAtComponent
class UPalLookAtComponent : public UActorComponent
{
public:
	struct FVector                               LookAtTargetLocation;                              // 0xA0(0x18)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LookAtTargetLocation_forActor;                     // 0xB8(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                LookAtTargetActor;                                 // 0xD0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LookAtTargetLocation_Interpolated;                 // 0xD8(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LookAtTargetBoneName;                              // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LookAtInInterpTime;                                // 0xF8(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LookAtOutInterpTime;                               // 0xFC(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsEnableLookAt;                                   // 0x100(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_360D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        LookAtDisableFlag;                                 // 0x108(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	float                                        InterpolatedSpeed;                                 // 0x158(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShowDebugImage;                                 // 0x15C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_360E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalLookAtComponent* GetDefaultObj();

	void StopLookAt(float InterpTime);
	void StartLookAtForActor(class AActor* Actor, class FName BoneName, float InterpTime);
	void StartLookAt(const struct FVector& LookAtTarget, float InterpTime);
	void SetLookAtDisable(class FName FlagName, bool bIsDisable);
	void OnChangeShootState(bool IsAim, bool IsShooting);
	bool IsEnableLookAt();
	struct FVector GetLookAtTarget();
	float GetLookAtOutInterpTime();
	float GetLookAtInInterpTime();
};

// 0x18 (0x3B8 - 0x3A0)
// Class Pal.PalMapLevelObject
class APalMapLevelObject : public APalMapObject
{
public:
	uint8                                        Pad_3611[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 LevelObjectInstanceId;                             // 0x3A8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalMapLevelObject* GetDefaultObj();

	struct FGuid GetLevelObjectInstanceId();
};

// 0x1F0 (0x218 - 0x28)
// Class Pal.PalMapObjectConcreteModelBase
class UPalMapObjectConcreteModelBase : public UObject
{
public:
	uint8                                        Pad_361F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAvailableDelegate;                               // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotAvailableDelegate;                            // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class UClass*, FMulticastInlineDelegateProperty_> OnSpawnedReadyModuleDelegateMap;                   // 0x50(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGuid                                 InstanceId;                                        // 0xA0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 ModelInstanceId;                                   // 0xB0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDisposed;                                         // 0xC0(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3620[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalFastMapObjectModuleRepInfoArray   ModuleRepInfoArray;                                // 0xC8(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	class UPalMapObjectWorkeeModule*             WorkeeModuleCache;                                 // 0x210(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectConcreteModelBase* GetDefaultObj();

	class FName TryGetMapObjectId();
	void SimpleDelegate__DelegateSignature(class UPalMapObjectConcreteModelBase* Model);
	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnTriggeringInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType, float DeltaTime);
	void OnStartTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnRep_ModuleArray();
	void OnEndTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	class UPalMapObjectWorkeeModule* GetWorkeeModule();
	struct FTransform GetTransform();
	class UPalMapObjectSwitchModule* GetSwitchModule();
	class UPalMapObjectPasswordLockModule* GetPasswordLockModule();
	void GetMapObjectLocation(struct FVector* OutVector);
	class UPalMapObjectItemContainerModule* GetItemContainerModule();
	struct FGuid GetInstanceId();
	class UPalMapObjectEnergyModule* GetEnergyModule();
	class UPalMapObjectCharacterContainerModule* GetCharacterContainerModule();
	class UPalBaseCampModel* GetBaseCampModelBelongTo();
	struct FGuid GetBaseCampIdBelongTo();
	void CallOrRegisterOnReadyModule(enum class EPalMapObjectConcreteModelModuleType ModuleType, FDelegateProperty_ Delegate);
};

// 0x68 (0x280 - 0x218)
// Class Pal.PalMapObjectAmusementModel
class UPalMapObjectAmusementModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_3623[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateCharacterDelegate;                         // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalIndividualCharacterHandle*         HealingCharacterHandle;                            // 0x250(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               HealingLocationOffset;                             // 0x258(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AffectSanityRate;                                  // 0x270(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3624[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalAIActionBase>          AIActionClass;                                     // 0x278(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectAmusementModel* GetDefaultObj();

	void SimpleDelegate__DelegateSignature(class UPalMapObjectAmusementModel* Model);
	void OnInteractBegin(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnFinishHealingAction(class UPalAIActionBase* Action);
	class UPalIndividualCharacterHandle* GetHealingHandle();
	void ClearCharacterHandle();
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectAmusementParameterComponent
class UPalMapObjectAmusementParameterComponent : public UActorComponent
{
public:
	float                                        AffectSanityRate;                                  // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3625[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalAIActionBase>          AIActionClass;                                     // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectAmusementParameterComponent* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectBaseCampPassiveEffectModel
class UPalMapObjectBaseCampPassiveEffectModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampPassiveEffectModel* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalMapObjectBaseCampPassiveEffectParameterComponentBase
class UPalMapObjectBaseCampPassiveEffectParameterComponentBase : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampPassiveEffectParameterComponentBase* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectBaseCampPassiveEffectWorkSpeedParameterComponent
class UPalMapObjectBaseCampPassiveEffectWorkSpeedParameterComponent : public UPalMapObjectBaseCampPassiveEffectParameterComponentBase
{
public:
	int32                                        AffectMaxNum;                                      // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalWorkSuitability               TargetWorkSuitability;                             // 0xA4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3627[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WorkSpeedAdditionalRate;                           // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3628[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampPassiveEffectWorkSpeedParameterComponent* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalMapObjectBaseCampPassiveEffectWorkHardParameterComponent
class UPalMapObjectBaseCampPassiveEffectWorkHardParameterComponent : public UPalMapObjectBaseCampPassiveEffectParameterComponentBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampPassiveEffectWorkHardParameterComponent* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectBaseCampPassiveWorkHardModel
class UPalMapObjectBaseCampPassiveWorkHardModel : public UPalMapObjectBaseCampPassiveEffectModel
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampPassiveWorkHardModel* GetDefaultObj();

	void RequestUpdateWorkHardType_ServerInternal(int32 RequestPlayerId, int32 TypeInt);
	void RequestUpdateWorkHardType(enum class EPalBaseCampPassiveEffectWorkHardType Type);
	class UPalBaseCampPassiveEffect_WorkHard* GetPassiveEffectWorkHard();
};

// 0x20 (0x238 - 0x218)
// Class Pal.PalMapObjectBaseCampPoint
class UPalMapObjectBaseCampPoint : public UPalMapObjectConcreteModelBase
{
public:
	TSubclassOf<class UPalUserWidgetOverlayUI>   PalBoxWiget;                                       // 0x218(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalUserWidgetOverlayUI>   CampTaskWiget;                                     // 0x220(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 BaseCampId;                                        // 0x228(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampPoint* GetDefaultObj();

};

// 0x18 (0x230 - 0x218)
// Class Pal.PalMapObjectBaseCampWorkerDirectorModel
class UPalMapObjectBaseCampWorkerDirectorModel : public UPalMapObjectConcreteModelBase
{
public:
	FMulticastInlineDelegateProperty_            OnNotifiedChangeBaseCampBattleTypeDelegate;        // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalBaseCampWorkerDirectionBattleType BaseCampBattleTypeForClientRead;                   // 0x228(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_362F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectBaseCampWorkerDirectorModel* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class UPalMapObjectBaseCampWorkerDirectorModel* Model);
	void RequestUpdateBaseCampBattleType_ServerInternal(int32 RequestPlayerId, int32 BattleTypeInt);
	void OnRep_BaseCampBattleTypeForClientRead();
	void NotifyChangeBaseCampBattleType_ClientInternal();
};

// 0x50 (0x268 - 0x218)
// Class Pal.PalMapObjectBreedFarmModel
class UPalMapObjectBreedFarmModel : public UPalMapObjectConcreteModelBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateBreedProgress;                             // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                         SpawnedEggInstanceIds;                             // 0x228(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	int32                                        ExistPalEggMaxNum;                                 // 0x238(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BreedRequiredRealTime;                             // 0x23C(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BreedProgressTime;                                 // 0x240(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3635[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalInstanceID>                LastProceedWorkerIndividualIds;                    // 0x248(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<class FName>                          TargetBreedItemIds;                                // 0x258(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectBreedFarmModel* GetDefaultObj();

	void OnUpdateAssignedCharacter(class UPalWorkBase* Work);
	void OnRep_UpdateBreedProgress();
	void OnBreedProgressChangedDelegate__DelegateSignature(float CurrentProgress, float MaxProgress);
	void GetBreedProgress(float* NowProgress, float* MaxProgress);
	bool CanProceedBreeding();
	enum class EPalItemOperationResult CanConsumeBreedItem(struct FPalItemSlotIdAndNum* ConsumableItem);
};

// 0x20 (0xC0 - 0xA0)
// Class Pal.PalMapObjectBreedFarmParameterComponent
class UPalMapObjectBreedFarmParameterComponent : public UActorComponent
{
public:
	float                                        BreedRequiredRealTime;                             // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExistPalEggMaxNum;                                 // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SlotNum;                                           // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3637[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalDataTableRowName_ItemData> TargetItemIds;                                     // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectBreedFarmParameterComponent* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectConcreteModelModuleBase
class UPalMapObjectConcreteModelModuleBase : public UObject
{
public:
	bool                                         bTriggeredOnSpawnedReady;                          // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3639[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectConcreteModelModuleBase* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalMapObjectCharacterContainerModule
class UPalMapObjectCharacterContainerModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	class UPalIndividualCharacterContainer*      TargetContainer;                                   // 0x30(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectCharacterContainerModule* GetDefaultObj();

	bool TryGetContainer(class UPalIndividualCharacterContainer** OutContainer);
	void OnRep_TargetContainer();
	bool IsCompleteSetup();
	struct FPalContainerId GetContainerId();
	class UPalIndividualCharacterContainer* GetContainer();
};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectCharacterStatusOperatorModel
class UPalMapObjectCharacterStatusOperatorModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectCharacterStatusOperatorModel* GetDefaultObj();

};

// 0x20 (0xC0 - 0xA0)
// Class Pal.PalMapObjectCollectResourceParameterComponent
class UPalMapObjectCollectResourceParameterComponent : public UActorComponent
{
public:
	int32                                        SlotNum;                                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3641[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalDataTableRowName_ItemData> TargetItemIds;                                     // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AdditionalRangeOutOfBaseCamp;                      // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3642[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectCollectResourceParameterComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectConcreteModelModuleItemHolderInterface
class IPalMapObjectConcreteModelModuleItemHolderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMapObjectConcreteModelModuleItemHolderInterface* GetDefaultObj();

};

// 0xB8 (0x2D0 - 0x218)
// Class Pal.PalMapObjectConvertItemModel
class UPalMapObjectConvertItemModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_364E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateRecipeDelegate;                            // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishConvertDelegate;                           // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecieveUpdateRecipeRequestResultDelegate;        // 0x258(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSettingDelegate;                           // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  CurrentRecipeId;                                   // 0x278(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RequestedProductNum;                               // 0x280(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RemainProductNum;                                  // 0x284(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsWorkable;                                       // 0x288(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_364F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          RecipeIds;                                         // 0x290(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	float                                        WorkSpeedAdditionalRate;                           // 0x2A0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentRecipeRequestPlayerId;                      // 0x2A4(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<enum class EPalItemTypeA>             TargetTypesA;                                      // 0x2A8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<enum class EPalItemTypeB>             TargetTypesB;                                      // 0x2B8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	int32                                        TargetRankMax;                                     // 0x2C8(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsPickUpInteractable;                              // 0x2CC(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3650[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectConvertItemModel* GetDefaultObj();

	void UpdateSettingDelegate__DelegateSignature(class UPalMapObjectConvertItemModel* Model);
	void UpdateRecipeDelegate__DelegateSignature(class UPalMapObjectConvertItemModel* Model);
	void RequestUpdateRecipe(class FName RecipeID, int32 ProductNum);
	void RequestChangeRecipe_ServerInternal(int32 RequestPlayerId, struct FPalNetArchive& Archive);
	void RequestCancel();
	void RecieveUpdateRecipeRequestResultDelegate__DelegateSignature(enum class EPalMapObjectConvertItemModelRequestResult Result);
	void ReceivedPickProductResult(class UPalItemSlot* Slot);
	void OnUpdateEnergyModuleState(class UPalMapObjectEnergyModule* EnergyModule);
	void OnUpdateContainerContentInServer(class UPalItemContainer* Container);
	void OnStartWorkAnyone_ServerInternal(class UPalWorkBase* Work, struct FPalInstanceID& WorkerIndividualId);
	void OnRep_RequestedProductNum();
	void OnRep_RemainProductNum();
	void OnRep_IsWorkable();
	void OnRep_CurrentRecipeId();
	void OnFinishWorkInServer(class UPalWorkBase* Work);
	void OnEndWorkAnyone_ServerInternal(class UPalWorkBase* Work, struct FPalInstanceID& WorkerIndividualId);
	bool IsTransportToStorage();
	bool IsProductNumInfinite(int32 ProductNum);
	class UPalItemSlot* GetSlotInjectableMaterial(class FName StaticItemId);
	int32 GetSlotIndexProductOut();
	TArray<int32> GetSlotIndexesMaterialInput();
	int32 GetRemainCreateNum();
	TArray<class FName> GetRecipes();
	class UPalItemSlot* GetProductSlot();
	class FName GetCurrentRecipeId();
	struct FPalItemRecipe GetCurrentRecipe();
	void FinishConvertDelegate__DelegateSignature(class UPalMapObjectConvertItemModel* Model);
	float CalcRequiredAmount(float BaseRequiredAmount);
	void AddConvertItemResultLog(struct FPalNetArchive& Archive);
};

// 0x8 (0x220 - 0x218)
// Class Pal.PalMapObjectDamagedScarecrowModel
class UPalMapObjectDamagedScarecrowModel : public UPalMapObjectConcreteModelBase
{
public:
	float                                        ProgressTimeStartAtDamaged;                        // 0x218(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3652[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectDamagedScarecrowModel* GetDefaultObj();

	void OnDamage_ServerInternal(class UPalMapObjectModel* Model, struct FPalDamageInfo& DamageInfo, int32 LastHp);
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectDamageReactionComponent
class UPalMapObjectDamageReactionComponent : public UActorComponent
{
public:
	uint8                                        Pad_3653[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHitEffectSlot*                     EffectSlot;                                        // 0xA8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectDamageReactionComponent* GetDefaultObj();

};

// 0x240 (0x458 - 0x218)
// Class Pal.PalMapObjectPickableCharacterModelBase
class UPalMapObjectPickableCharacterModelBase : public UPalMapObjectConcreteModelBase
{
public:
	struct FPalCharacterStoredParameterId        StoredParameterId;                                 // 0x218(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalIndividualCharacterSaveParameter  ForRead_CharacterSaveParameter;                    // 0x228(0x218)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FGuid                                 LocationId;                                        // 0x440(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3657[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectPickableCharacterModelBase* GetDefaultObj();

	void RequestPickup_ServerInternal(int32 RequestPlayerId);
	void RequestPickup();
	void OnRemovedStoredCharacter_ServerInternal(struct FPalCharacterStoredParameterId& RemovedID);
	void OnDisappearTimeAt();
	struct FPalIndividualCharacterSaveParameter GetCharacterSaveParameter();
};

// 0x20 (0x478 - 0x458)
// Class Pal.PalMapObjectDeathDroppedCharacterModel
class UPalMapObjectDeathDroppedCharacterModel : public UPalMapObjectPickableCharacterModelBase
{
public:
	FMulticastInlineDelegateProperty_            OnNotifiedGuildUpdateInClientDelegate;             // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x468(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectDeathDroppedCharacterModel* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class UPalMapObjectDeathDroppedCharacterModel* Model);
	void OnChangedPlayerInfoInLocalPlayerGuild_ClientInternal(class APalPlayerState* LocalPlayerState);
	bool IsSameGuildInLocalPlayer();
};

// 0x8 (0x220 - 0x218)
// Class Pal.PalMapObjectItemStorageModel
class UPalMapObjectItemStorageModel : public UPalMapObjectConcreteModelBase
{
public:
	bool                                         bAutoDestroyIfEmpty;                               // 0x218(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_365C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectItemStorageModel* GetDefaultObj();

	void RequestSortContainer();
	void OnUpdateContainerContentInServer(class UPalItemContainer* Container);
};

// 0x30 (0x250 - 0x220)
// Class Pal.PalMapObjectDeathPenaltyStorageModel
class UPalMapObjectDeathPenaltyStorageModel : public UPalMapObjectItemStorageModel
{
public:
	FMulticastInlineDelegateProperty_            OnNotifiedGuildUpdateInClientDelegate;             // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x230(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 LocationId;                                        // 0x240(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectDeathPenaltyStorageModel* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class UPalMapObjectDeathPenaltyStorageModel* Model);
	void OnChangedPlayerInfoInLocalPlayerGuild_ClientInternal(class APalPlayerState* LocalPlayerState);
	bool IsSameGuildInLocalPlayer();
};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectDefenseModelBase
class UPalMapObjectDefenseModelBase : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectDefenseModelBase* GetDefaultObj();

	bool TryGetLauncherControlMapObject(class APalMapObject** OutMapObject);
	struct FVector GetLocation();
	enum class EPalMapObjectDefenseType GetDefenseType();
};

// 0x20 (0x238 - 0x218)
// Class Pal.PalMapObjectDefenseBulletLauncherModel
class UPalMapObjectDefenseBulletLauncherModel : public UPalMapObjectDefenseModelBase
{
public:
	TWeakObjectPtr<class APalMapObject>          WeakLauncherControlMapObject;                      // 0x218(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APalStationaryWeaponBase> WeakWeapon;                                        // 0x220(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RemainingBulletsNum;                               // 0x228(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MagazineSize;                                      // 0x22C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BulletItemName;                                    // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectDefenseBulletLauncherModel* GetDefaultObj();

	void UseBullet();
	void TurnToTarget(class AActor* TargetActor, float DeltaTime);
	bool TryGetWeapon(class APalStationaryWeaponBase** OutWeapon);
	void SetOwnerCharacter(class APalCharacter* OwnerCharacter);
	void SetEnableTrigger(bool EnableTrigger);
	void ReloadBullets(int32 ReloadBulletsNum);
	void OnUpdateEnergyModuleState(class UPalMapObjectEnergyModule* EnergyModule);
	int32 GetRemainingBulletsNum();
	int32 GetMagazineSize();
	class FName GetBulletName();
	float GetAttackableDistance();
	float GetAttackableAngle();
	bool CanAvailable();
};

// 0x8 (0x220 - 0x218)
// Class Pal.PalMapObjectDefenseWaitModel
class UPalMapObjectDefenseWaitModel : public UPalMapObjectDefenseModelBase
{
public:
	TWeakObjectPtr<class APalMapObject>          WeakLauncherControlMapObject;                      // 0x218(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectDefenseWaitModel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectOperationResultUtility
class UPalMapObjectOperationResultUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectOperationResultUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectInteractRestrictTypeUtility
class UPalMapObjectInteractRestrictTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectInteractRestrictTypeUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectModelInterface
class IPalMapObjectModelInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMapObjectModelInterface* GetDefaultObj();

	struct FGuid GetModelId();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectItemCollectableInterface
class IPalMapObjectItemCollectableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMapObjectItemCollectableInterface* GetDefaultObj();

	enum class EPalMapObjectItemCollectableType GetItemCollectableType();
	void GetCollectableStaticItemIds(TArray<class FName>* OutStaticItemIds);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectWorkerAvailableFacilityInterface
class IPalMapObjectWorkerAvailableFacilityInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMapObjectWorkerAvailableFacilityInterface* GetDefaultObj();

};

// 0xD8 (0x2F0 - 0x218)
// Class Pal.PalMapObjectDisplayCharacterModel
class UPalMapObjectDisplayCharacterModel : public UPalMapObjectConcreteModelBase
{
public:
	float                                        RecoverAmountBySec;                                // 0x218(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_366F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CharacterSpawnLocalTransform;                      // 0x220(0x60)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class AController>               ControllerClass;                                   // 0x280(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0x288(0x8)(Edit, Net, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalIndividualCharacterSlotsObserver*  CharacterSlotsObserver;                            // 0x290(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3670[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectDisplayCharacterModel* GetDefaultObj();

	void TryMoveToDisplayCage(class UPalIndividualCharacterSlot* FromSlot);
	void OnUpdateCharacterContainer_ServerInternal();
	void OnSpawnedPhantomCharacter_ServerInternal(const struct FPalInstanceID& IndividualId, int32 PhantomId);
	bool GetDisplaySlots(TArray<class UPalIndividualCharacterSlot*>* Slots);
};

// 0x80 (0x120 - 0xA0)
// Class Pal.PalMapObjectDisplayCharacterParameterComponent
class UPalMapObjectDisplayCharacterParameterComponent : public UActorComponent
{
public:
	int32                                        SlotNum;                                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoverAmountBySec;                                // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3675[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CharacterSpawnLocalTransform;                      // 0xB0(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AController>               ControllerClass;                                   // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectDisplayCharacterParameterComponent* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectDoorModel
class UPalMapObjectDoorModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectDoorModel* GetDefaultObj();

	void RequestTrigger_ServerInternal(int32 RequestPlayerId, int32 ToStateInt);
};

// 0x0 (0x3A0 - 0x3A0)
// Class Pal.PalMapObjectDropItem
class APalMapObjectDropItem : public APalMapObject
{
public:

	static class UClass* StaticClass();
	static class APalMapObjectDropItem* GetDefaultObj();

};

// 0x28 (0x240 - 0x218)
// Class Pal.PalMapObjectPickableItemModelBase
class UPalMapObjectPickableItemModelBase : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_367B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAutoPickedUp;                                     // 0x230(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_367C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          RemovePickupGuardTimerHandle;                      // 0x238(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectPickableItemModelBase* GetDefaultObj();

	void RequestPickup_ServerInternal(int32 RequestPlayerId);
	void RequestPickup();
	void OnTimer_RemovePickupGuard();
	TArray<struct FPalItemAndNum> CreatePickupItemInfo();
};

// 0x58 (0x298 - 0x240)
// Class Pal.PalMapObjectDropItemModel
class UPalMapObjectDropItemModel : public UPalMapObjectPickableItemModelBase
{
public:
	uint8                                        Pad_3680[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalItemId                            ItemId;                                            // 0x248(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ReleaseDirection;                                  // 0x270(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableInteract;                                   // 0x288(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3681[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectDropItemModel* GetDefaultObj();

	void OnUpdateItemContainerContentInServer(class UPalItemContainer* Container);
	void OnInteracting(float DeltaTime);
	void OnInteractEnd(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnInteractBegin(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnEnableTriggerInteract(TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectDropItemParameterComponent
class UPalMapObjectDropItemParameterComponent : public UActorComponent
{
public:
	TArray<struct FPalMapObjectDropItemData>     DropItems;                                         // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectDropItemParameterComponent* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Pal.PalMapObjectEnergyModule
class UPalMapObjectEnergyModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateCurrentStateDelegate;                      // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalEnergyType                    EnergyType;                                        // 0x40(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3683[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConsumeEnergySpeed;                                // 0x44(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentConsumeEnergySpeed;                         // 0x48(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalMapObjectEnergyModuleStatusType CurrentState;                                      // 0x4C(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRequiredConsumeEnergy;                            // 0x4D(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3685[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 StatusHUDId;                                       // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3686[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectEnergyModule* GetDefaultObj();

	void ReturnSelfMulticastDelegate__DelegateSignature(class UPalMapObjectEnergyModule* Module);
	void RemoveHUD();
	void OnRep_CurrentState();
	bool IsRequiredEnergy();
	enum class EPalEnergyType GetEnergyType();
	enum class EPalMapObjectEnergyModuleStatusType GetCurrentState();
	float GetCurrentConsumeEnergySpeed();
	float GetConsumeEnergySpeed();
	bool CanConsumeEnergy();
};

// 0x68 (0x280 - 0x218)
// Class Pal.PalMapObjectFarmBlockV2Model
class UPalMapObjectFarmBlockV2Model : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_368B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateStateDelegate;                             // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FReactivePropertyFloat                CropProgressRate;                                  // 0x230(0x18)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReactivePropertyFloat                WaterStackRate;                                    // 0x248(0x18)(BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMapObjectFarmBlockV2ModelStateBehaviourMachine* StateBehaviourMachine;                             // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CurrentCropDataId;                                 // 0x268(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalFarmCropState                 CurrentState;                                      // 0x270(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_368C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CropProgressRateValue;                             // 0x274(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WaterStackRateValue;                               // 0x278(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_368D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2Model* GetDefaultObj();

	void UpdateStateDelegate__DelegateSignature(enum class EPalFarmCropState LastState, enum class EPalFarmCropState NextState);
	void OnUpdateWaterStackRate(float UpdatedRate);
	void OnUpdateCropProgressRate(float ProgressRate);
	void OnRep_WaterStackRateValue();
	void OnRep_CurrentState();
	void OnRep_CropProgressRateValue();
	void NotifySimpleDelegate__DelegateSignature();
	enum class EPalFarmCropState GetCurrentState();
	class FName GetCurrentCropDataId();
};

// 0x60 (0x88 - 0x28)
// Class Pal.PalStateMachine
class UPalStateMachine : public UObject
{
public:
	TMap<class UClass*, class UPalStateMachineStateBase*> StateMap;                                          // 0x28(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class UPalStateMachineStateBase*             CurrentState;                                      // 0x78(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_368F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStateMachine* GetDefaultObj();

	void Tick(float DeltaTime);
	void Start(class UClass* StartClass);
	class UPalStateMachineStateBase* GetCurrentState();
	void Dispose();
	void ChangeState(class UClass* ToStateClass);
	void AddState(class UPalStateMachineStateBase* State);
};

// 0x10 (0x98 - 0x88)
// Class Pal.PalMapObjectFarmBlockV2ModelStateBehaviourMachine
class UPalMapObjectFarmBlockV2ModelStateBehaviourMachine : public UPalStateMachine
{
public:
	class UPalMapObjectFarmBlockV2ModelStateBehaviourBase* CurrentStateBehaviourCache;                        // 0x88(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3690[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2ModelStateBehaviourMachine* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalStateMachineStateBase
class UPalStateMachineStateBase : public UObject
{
public:
	uint8                                        Pad_3691[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStateMachineStateBase* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMapObjectFarmBlockV2ModelStateBehaviourBase
class UPalMapObjectFarmBlockV2ModelStateBehaviourBase : public UPalStateMachineStateBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2ModelStateBehaviourBase* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Pal.PalMapObjectFarmBlockV2ModelStateBehaviourSeeding
class UPalMapObjectFarmBlockV2ModelStateBehaviourSeeding : public UPalMapObjectFarmBlockV2ModelStateBehaviourBase
{
public:
	uint8                                        Pad_369A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2ModelStateBehaviourSeeding* GetDefaultObj();

	void UpdateProgressRateDelegate__DelegateSignature(float ProgressRate);
	void OnProgressWork(class UPalWorkProgress* WorkProgress);
	void OnFinishWorkInServer(class UPalWorkBase* Work);
};

// 0x10 (0x40 - 0x30)
// Class Pal.PalMapObjectFarmBlockV2ModelStateBehaviourWatering
class UPalMapObjectFarmBlockV2ModelStateBehaviourWatering : public UPalMapObjectFarmBlockV2ModelStateBehaviourBase
{
public:
	uint8                                        Pad_369C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2ModelStateBehaviourWatering* GetDefaultObj();

	void UpdateWaterStackRateDelegate__DelegateSignature(float WaterStackRate);
	void OnProgressWorkInServer(class UPalWorkProgress* WorkProgress);
	void OnFinishWorkInServer(class UPalWorkBase* Work);
};

// 0x18 (0x48 - 0x30)
// Class Pal.PalMapObjectFarmBlockV2ModelStateBehaviourGrowup
class UPalMapObjectFarmBlockV2ModelStateBehaviourGrowup : public UPalMapObjectFarmBlockV2ModelStateBehaviourBase
{
public:
	uint8                                        Pad_36A0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2ModelStateBehaviourGrowup* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class Pal.PalMapObjectFarmBlockV2ModelStateBehaviourHarvestable
class UPalMapObjectFarmBlockV2ModelStateBehaviourHarvestable : public UPalMapObjectFarmBlockV2ModelStateBehaviourBase
{
public:
	uint8                                        Pad_36A5[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFarmBlockV2ModelStateBehaviourHarvestable* GetDefaultObj();

	void UpdateHarvestProgressRateDelegate__DelegateSignature(float ProgressRate);
	void OnWorkStarted(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnProgressWork(class UPalWorkProgress* WorkProgress);
	void OnFinishWorkInServer(class UPalWorkBase* Work);
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalMapObjectFarmCrop
class APalMapObjectFarmCrop : public AActor
{
public:
	TArray<struct FPalFarmCropGrowupProcessSet>  GrowupProcessSets;                                 // 0x290(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalMapObjectFarmCrop* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectFarmCropDataUtility
class UPalMapObjectFarmCropDataUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectFarmCropDataUtility* GetDefaultObj();

	void MaterialInfos(struct FPalMapObjectFarmCropData& Data, TArray<struct FPalStaticItemIdAndNum>* MaterialInfos);
	bool IsValid(struct FPalMapObjectFarmCropData* Data);
};

// 0x10 (0x228 - 0x218)
// Class Pal.PalMapObjectFastTravelPointModel
class UPalMapObjectFastTravelPointModel : public UPalMapObjectConcreteModelBase
{
public:
	struct FGuid                                 LocationInstanceId;                                // 0x218(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectFastTravelPointModel* GetDefaultObj();

};

// 0x108 (0x130 - 0x28)
// Class Pal.PalMapObjectFoliage
class UPalMapObjectFoliage : public UObject
{
public:
	class UPalFoliagePresetDataSet*              PresetDataSet;                                     // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class UPalFoliageType_InstancedStaticMesh*> UsedPalFoliageTypeMap;                             // 0x30(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TSet<enum class EPalFoliagePresetType>       LoadedPresetTypeSet;                               // 0x80(0x50)(Transient, NativeAccessSpecifierPrivate)
	int32                                        GridSize;                                          // 0xD0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36AD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FPalCellCoord, class UPalFoliageGridModel*> GridModelMap;                                      // 0xD8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36AE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFoliage* GetDefaultObj();

};

// 0x118 (0x140 - 0x28)
// Class Pal.PalMapObjectFoliageModel
class UPalMapObjectFoliageModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnRespawn;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDamage;                                          // 0x38(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDestroy;                                         // 0x48(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdatedRequiredTickInServer;                     // 0x58(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisposeModelDelegate;                            // 0x68(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class FName                                  ModelId;                                           // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FPalFoliageInstanceId, class UPalFoliageInstance*> InstanceMap;                                       // 0x80(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36B6[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalCellCoord                         CellCoord;                                         // 0x120(0x18)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalFoliagePresetType             FoliagePresetType;                                 // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36B7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFoliageModel* GetDefaultObj();

	void ReturnSelfDelegate__DelegateSignature(class UPalMapObjectFoliageModel* Self);
	void RespawnInstance(class UPalFoliageInstance* Instance);
	void OnDestroyInstance(class UPalFoliageInstance* Instance);
	void InstanceDelegate__DelegateSignature(class UPalFoliageInstance* Instance);
	void InstanceDamageDelegate__DelegateSignature(class UPalFoliageInstance* Instance, int32 DamageValue);
};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectFoodBoxParameterComponent
class UPalMapObjectFoodBoxParameterComponent : public UActorComponent
{
public:
	float                                        CorruptionMultiplier;                              // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36B8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectFoodBoxParameterComponent* GetDefaultObj();

};

// 0x58 (0x270 - 0x218)
// Class Pal.PalMapObjectGateModel
class UPalMapObjectGateModel : public UPalMapObjectConcreteModelBase
{
public:
	struct FGameDateTime                         UnlockDateTime;                                    // 0x218(0x8)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FPalInstanceID, TWeakObjectPtr<class UPalIndividualCharacterParameter>> WeakInteractingCharacterParameters;                // 0x220(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectGateModel* GetDefaultObj();

	void RequestTrigger_ServerInternal(int32 RequestPlayerId, int32 ToStateInt);
	void OnInteractEnd(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnInteractBegin(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
};

// 0x30 (0x248 - 0x218)
// Class Pal.PalMapObjectGenerateEnergyModel
class UPalMapObjectGenerateEnergyModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_36BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateStoredEnergyAmountDelegate;                // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalEnergyType                    EnergyType;                                        // 0x230(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_36BD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GenerateEnergyRateByWorker;                        // 0x234(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxEnergyStorage;                                  // 0x238(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StoredEnergyAmount;                                // 0x23C(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConsumeEnergySpeed;                                // 0x240(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_36BE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectGenerateEnergyModel* GetDefaultObj();

	void UpdateEnergyAmountDelegate__DelegateSignature(class UPalMapObjectGenerateEnergyModel* Model);
	void OnUpdateAssignedCharacter_ServerInternal(class UPalWorkBase* Work);
	void OnRep_StoredEnergyAmount();
	float GetStoredEnergyAmount();
	float GetMaxEnergyStorage();
	enum class EPalEnergyType GetEnergyType();
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectGenerateEnergyParameterComponent
class UPalMapObjectGenerateEnergyParameterComponent : public UActorComponent
{
public:
	enum class EPalEnergyType                    GenerateEnergyType;                                // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GenerateEnergyRateByWorker;                        // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxEnergyStorage;                                  // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36C0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectGenerateEnergyParameterComponent* GetDefaultObj();

};

// 0x258 (0x470 - 0x218)
// Class Pal.PalMapObjectHatchingEggModel
class UPalMapObjectHatchingEggModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_36C7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateHatchedCharacterDelegate;                  // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateHatchTemperaturDelegate;                   // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalIndividualCharacterSaveParameter  HatchedCharacterSaveParameter;                     // 0x240(0x218)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bWorkable;                                         // 0x458(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0x460(0x8)(Net, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentPalEggTemperatureDiff;                      // 0x468(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36CA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectHatchingEggModel* GetDefaultObj();

	void UpdateWorkAmountBySec(float NewWorkAmountBySec);
	void UpdateHatchTemperatureDelegate__DelegateSignature(int32 Temperature);
	void UpdateHatchedCharacterDelegate__DelegateSignature(class UPalMapObjectHatchingEggModel* Model);
	void SetTemperatureDiff(int32 TemperatureDiff);
	void OnUpdateContainerContentInServer(class UPalItemContainer* Container);
	void OnRep_HatchTemperatureDiff();
	void OnRep_HatchedCharacterSaveParameter();
	void OnFinishWorkInServer(class UPalWorkBase* Work);
	void ObtainHatchedCharacter_ServerInternal(int32 RequestPlayerId);
	int32 GetTemperatureDiff();
	bool GetPalEggRankInfo(struct FPalEggRankInfo* OutPalEggRankInfo);
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_HatchingEgg
class UPalHUDDispatchParameter_HatchingEgg : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectHatchingEggModel*         HatchingEggModel;                                  // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_HatchingEgg* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectHatchingEggParameterComponent
class UPalMapObjectHatchingEggParameterComponent : public UActorComponent
{
public:
	float                                        AutoWorkAmountBySec;                               // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36CF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectHatchingEggParameterComponent* GetDefaultObj();

	float GetDefaultAutoWorkAmountBySec();
};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectHeatSourceModel
class UPalMapObjectHeatSourceModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectHeatSourceModel* GetDefaultObj();

	void OnUpdateEnergyModuleState_ServerInternal(class UPalMapObjectEnergyModule* EnergyModule);
	void OnUpdateAssignedCharacter_ServerInternal(class UPalWorkBase* Work);
};

// 0x8 (0x228 - 0x220)
// Class Pal.PalMapObjectItemChestModel
class UPalMapObjectItemChestModel : public UPalMapObjectItemStorageModel
{
public:
	uint8                                        Pad_36D2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectItemChestModel* GetDefaultObj();

	void OnUpdateLocalPlayerPasswordLockInfo(struct FPalMapObjectPasswordLockPlayerInfo& OldLocalPlayerInfo, struct FPalMapObjectPasswordLockPlayerInfo& NewLocalPlayerInfo);
};

// 0x30 (0xD0 - 0xA0)
// Class Pal.PalMapObjectItemChestParameterComponent
class UPalMapObjectItemChestParameterComponent : public UActorComponent
{
public:
	int32                                        SlotNum;                                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPalItemTypeA>             TargetTypesA;                                      // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EPalItemTypeB>             TargetTypesB;                                      // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EPalContainerOperationRestrictType OperationRestrictType;                             // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoDestroyIfEmpty;                               // 0xC9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36D4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CorruptionMultiplier;                              // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectItemChestParameterComponent* GetDefaultObj();

};

// 0x0 (0x228 - 0x228)
// Class Pal.PalMapObjectItemChest_AffectCorruption
class UPalMapObjectItemChest_AffectCorruption : public UPalMapObjectItemChestModel
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectItemChest_AffectCorruption* GetDefaultObj();

};

// 0xD0 (0x100 - 0x30)
// Class Pal.PalMapObjectItemContainerModule
class UPalMapObjectItemContainerModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	uint8                                        Pad_36DF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalItemContainer*                     TargetContainer;                                   // 0x40(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDropItemAtDisposed;                               // 0x48(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalMapObjectItemContainerModuleSlotIndexes> SlotAttributeIndexes;                              // 0x50(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<enum class EPalMapObjectItemContainerSlotAttribute> AllSlotAttribute;                                  // 0x60(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36E2[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalContainerUsageType            UsageType;                                         // 0xF0(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_36E3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectItemContainerModule* GetDefaultObj();

	void UpdateContentsMulticastDelegate__DelegateSignature(class UPalMapObjectItemContainerModule* Module);
	void UpdateContentsDelegate__DelegateSignature(class UPalMapObjectItemContainerModule* Module);
	void UnbindUpdateContents(FDelegateProperty_ Delegate);
	bool TryGetContainer(class UPalItemContainer** OutContainer);
	void RequestSortContainer_ServerInternal();
	void RequestSortContainer();
	void OnUpdateContents(class UPalItemContainer* Container);
	void OnRep_TargetContainer();
	struct FPalContainerId GetContainerId();
	class UPalItemContainer* GetContainer();
	void BindUpdateContents(FDelegateProperty_ Delegate);
};

// 0x30 (0xD0 - 0xA0)
// Class Pal.PalMapObjectItemConverterParameterComponent
class UPalMapObjectItemConverterParameterComponent : public UActorComponent
{
public:
	TArray<enum class EPalItemTypeA>             TargetTypesA;                                      // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EPalItemTypeB>             TargetTypesB;                                      // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TargetRankMax;                                     // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoWorkAmountBySec;                               // 0xC4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkSpeedAdditionalRate;                           // 0xC8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36E6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectItemConverterParameterComponent* GetDefaultObj();

};

// 0x28 (0x240 - 0x218)
// Class Pal.PalMapObjectItemDropOnDamagModel
class UPalMapObjectItemDropOnDamagModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_36EA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalItemAndNum>                DropItemInfos;                                     // 0x230(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectItemDropOnDamagModel* GetDefaultObj();

	void OnDamage_ServerInternal(class UPalMapObjectModel* Model, struct FPalDamageInfo& DamageInfo, int32 LastHp);
};

// 0x18 (0xB8 - 0xA0)
// Class Pal.PalMapObjectItemSimpleProductParameterComponent
class UPalMapObjectItemSimpleProductParameterComponent : public UActorComponent
{
public:
	struct FPalDataTableRowName_ItemProductData  ItemProductId;                                     // 0xA0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SlotNum;                                           // 0xA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WorkSpeedAdditionalRate;                           // 0xAC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGainExp;                                        // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_36EC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectItemSimpleProductParameterComponent* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectLampModel
class UPalMapObjectLampModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectLampModel* GetDefaultObj();

	void OnUpdateEnergyModuleState(class UPalMapObjectEnergyModule* EnergyModule);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectLauncherControlInterface
class IPalMapObjectLauncherControlInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMapObjectLauncherControlInterface* GetDefaultObj();

	void TurnToTarget(class AActor* TargetActor, float DeltaTime);
	void SetOwnerCharacter(class APalCharacter* OwnerCharacter);
	void SetEnableTrigger(bool EnableTrigger);
	struct FRotator GetCharacterRotation();
	struct FVector GetCharacterLocation();
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectLocationComponent
class UPalMapObjectLocationComponent : public UActorComponent
{
public:
	struct FGuid                                 LocationId;                                        // 0xA0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectLocationComponent* GetDefaultObj();

	void SetLocationId();
};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalMapObjectSpawnRequestHandler
class UPalMapObjectSpawnRequestHandler : public UObject
{
public:
	uint8                                        Pad_36F3[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalMapObjectModelInitializeExtraParameters ExtraParameters;                                   // 0x90(0x28)(NativeAccessSpecifierPublic)
	uint8                                        Pad_36F4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectSpawnRequestHandler* GetDefaultObj();

};

// 0x748 (0x7B8 - 0x70)
// Class Pal.PalMapObjectManager
class UPalMapObjectManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_3701[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCreateMapObjectModelInServerDelegate;            // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRepMapObjectModelDelegate;                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpawnedMapObjectModelByInServerDelegate;         // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3702[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TScriptInterface<class IPalBuildObjectSpawnValidationCheckInterface>> BuildSpawnValidationCheckers;                      // 0x110(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	class UDataTable*                            BuildObjectDataTable;                              // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BuildObjectNameTable;                              // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BuildObjectDescTable;                              // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            MapObjectAssignTable;                              // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBuildingSurfaceMaterialSet           BuildingSurfaceMaterialSet;                        // 0x140(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UPalFoliagePresetDataSet*              FoliagePresetDataSet;                              // 0x178(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APalFoliageModelChunk>     FoliageModelChunkClass;                            // 0x180(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FoliageGridSize;                                   // 0x188(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3703[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalMapObjectFoliage*                  Foliage;                                           // 0x190(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalBuildOperator*                     BuildOperator;                                     // 0x198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMapObjectWorldDisposer*            WorldDisposerForServer;                            // 0x1A0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalMapObjectModel*> MapObjectModelMapForServer;                        // 0x1A8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalMapObjectConcreteModelBase*> MapObjectConcreteModelMapForServer;                // 0x1F8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3706[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FPalMapObjectModelStaticData> MapObjectModelStaticDataCacheMap;                  // 0x338(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FPalMapObjectStaticData               StaticData;                                        // 0x388(0x48)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  DropItemMapObjectId;                               // 0x3D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BuildObjectId_PalStorage;                          // 0x3D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EObjectTypeQuery>          SearchObjectTypes;                                 // 0x3E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3707[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalMapObjectDestroyFXType, class UNiagaraSystem*> DestroyEffectMap;                                  // 0x3F8(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                  MapObjectDestroyFXUserParamName_BoxSize;           // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MapObjectDestroyFXUserParamName_BoxSurfaceArea;    // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        BuildStartEffect;                                  // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        BuildCompleteEffect;                               // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BuildFXUserParamName_BoxCenter;                    // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BuildFXUserParamName_BoxSize;                      // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BuildFXUserParamName_BoxSurfaceArea;               // 0x478(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         BuildCompleteSE;                                   // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        RepairEffect;                                      // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        DamageEffect;                                      // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DamageFXUserParamName_Alpha;                       // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DamageFXUserParamName_Rate;                        // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DamageFXUserParamName_Scale;                       // 0x4A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DamageFXUserParamName_RadiusScale;                 // 0x4B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DamageFXUserParamName_AddRate;                     // 0x4B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DamageFXUserParamName_EndAlpha;                    // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageParam_MaxRate;                               // 0x4C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageParam_MaxAddRate;                            // 0x4CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageParam_MaxScale;                              // 0x4D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageParam_MaxRadiusScale;                        // 0x4D4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageParam_RadiusScaleMultiplier;                 // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageFX_StartHPRate;                              // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageFX_DefaultBoundsSphereRadius;                // 0x4E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_370B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DamageFX_SpanwLocationOffset;                      // 0x4E8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageFX_EndFadeTime;                              // 0x500(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropItemSpawnLocationFromActorBounds;              // 0x504(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropItemSpawnDirectionZ;                           // 0x508(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_370C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FoliageDropItemSpawnOffset;                        // 0x510(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DropItemReleaseDirectionRelative;                  // 0x528(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FoliageDestroyFXExtentsDefault;                    // 0x540(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalHitEffectSlot>         HitEffectSlotClass;                                // 0x558(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPalMapObjectChangeMeshFXType, class UNiagaraSystem*> ChangeMeshEffectMap;                               // 0x560(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPalMapObjectVisualEffectAssets       VisualEffectAssets;                                // 0x5B0(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalMapObjectTreasureGradeType, struct FPalDataTableRowName_ItemData> TreasureBoxOpenRequiredItemMap;                    // 0x600(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalMapObjectModel*> MapObjectModelHandlingMap;                         // 0x650(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_370D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APalMapObject*>                 LevelMapObjectsToRegister;                         // 0x6B0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class APalTestMapObjectRegistrationToManager* Registrator;                                       // 0x6C0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_370E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, class UPalMapObjectSpawnRequestHandler*> SpawnRequestHandlerMap;                            // 0x6D0(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_370F[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InDoorCheckProcessIndex_AnyThread;                 // 0x768(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        InDoorCheckMaxNumPerFrame_AnyThread;               // 0x76C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APalMapObjectSpawnerBase*>      SpawnedSpawners;                                   // 0x770(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UObject>>        SkeletalLODComponentArrayExec;                     // 0x780(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class UObject>>        SkeletalLODComponentArrayWait;                     // 0x790(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_3710[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UObject>>        PointLightComponents;                              // 0x7A8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectManager* GetDefaultObj();

	void UpdateSkeletalMeshComponentForLOD(int32 InExecuteCount);
	void UpdatePointLightComponentForCulling();
	void UnResisterSkeletalMeshComponentForLOD(class UObject* InComponent);
	void UnResisterPointLightComponent(class UObject* InComponent);
	void ResisterSkeletalMeshComponentForLOD(class UObject* InComponent);
	void ResisterPointLightComponent(class UObject* InComponent);
	void RequestDismantleObject_OnResponseDialog(bool bResult, class UPalDialogParameterBase* DialogParameter);
	void RecalcPointLightOverlap();
	void MapObjectModelWithVectorDelegate__DelegateSignature(class UPalMapObjectModel* MapObjectModel, struct FVector& Vector);
	void MapObjectModelSpawnedByDelegate__DelegateSignature(class UPalMapObjectModel* MapObjectModel, class UPalMapObjectModelInitializeExtraParameterSpawnedBy* SpawnedBy);
	void MapObjectModelInterfaceDelegate__DelegateSignature(TScriptInterface<class IPalMapObjectModelInterface> MapObjectModel);
	void MapObjectModelDynamicDelegate__DelegateSignature(class UPalMapObjectModel* MapObjectModel);
	class UPalMapObjectFoliage* GetFoliage();
	class UPalBuildOperator* GetBuildOperator();
	class UPalMapObjectModel* FindModel(struct FGuid& InstanceId);
	class UPalMapObjectConcreteModelBase* FindConcreteModel(struct FGuid& InstanceId);
};

// 0x78 (0x290 - 0x218)
// Class Pal.PalMapObjectMedicalPalBedModel
class UPalMapObjectMedicalPalBedModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_3714[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateSleepingCharacterDelegate;                 // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalIndividualCharacterHandle*         SleepingCharacterHandle;                           // 0x250(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SleepLocationOffset;                               // 0x258(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RemovedSleepLocationOffset;                        // 0x270(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalHealingRate;                             // 0x288(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AffectSanityRate;                                  // 0x28C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectMedicalPalBedModel* GetDefaultObj();

	void SimpleDelegate__DelegateSignature(class UPalMapObjectMedicalPalBedModel* Model);
	void OnInteractBegin(class AActor* Other, TScriptInterface<class IPalInteractiveObjectComponentInterface> Component);
	void OnFinishSleepAction(class UPalAIActionBase* Action);
	class UPalIndividualCharacterHandle* GetSleepingHandle();
	void ClearSleepingCharacterHandle();
};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectMedicalPalBedParameterComponent
class UPalMapObjectMedicalPalBedParameterComponent : public UActorComponent
{
public:
	float                                        AdditionalHealingRate;                             // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AffectSanityRate;                                  // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectMedicalPalBedParameterComponent* GetDefaultObj();

};

// 0x348 (0x370 - 0x28)
// Class Pal.PalMapObjectModel
class UPalMapObjectModel : public UObject
{
public:
	uint8                                        Pad_371F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDamageInServerDelegate;                          // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDamageDelegate;                                  // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateHp;                                        // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDestroyDelegate;                                 // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisposeDelegateInServer;                         // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdatedEnableTickDelegate;                       // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateBaseCampIdBelongToInServerDelegate;        // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateGroupIdBelongToInServerDelegate;           // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRepBuildPlayerUIdDelegate_Client;                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3720[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 InstanceId;                                        // 0xF8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  MapObjectMasterDataId;                             // 0x108(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalBoundsTransform                   WorkableBounds;                                    // 0x110(0x80)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBox                                  MeshBoxBounds;                                     // 0x190(0x38)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGuid                                 ConcreteModelInstanceId;                           // 0x1C8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalMapObjectConcreteModelBase*        ConcreteModel;                                     // 0x1D8(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 BaseCampIdBelongTo;                                // 0x1E0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 GroupIdBelongTo;                                   // 0x1F0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BuildObjectId;                                     // 0x200(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalBuildProcess*                      BuildProcess;                                      // 0x208(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalMapObjectDamagableType        DamagableType;                                     // 0x210(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3721[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalMapObjectStatusValue              HP;                                                // 0x214(0x8)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3722[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            InitialTransformCache;                             // 0x220(0x60)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalMapObjectModelConnectorBase*       Connector;                                         // 0x280(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalMapObjectModelEffect*              Effect;                                            // 0x288(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 RepairWorkId;                                      // 0x290(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 OwnerSpawnerLevelObjectInstanceId;                 // 0x2A0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 OwnerInstanceId;                                   // 0x2B0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                 BuildPlayerUId;                                    // 0x2C0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInDoor;                                           // 0x2D0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalMapObjectInteractRestrictType InteractRestrictType;                              // 0x2D1(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3724[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameDateTime                         CreatedAt;                                         // 0x2D8(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3726[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeteriorationDamage;                               // 0x2E4(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DeteriorationTotalDamage;                          // 0x2E8(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIgnoredSave;                                      // 0x2EC(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3728[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 DungeonInstanceIdBelongTo;                         // 0x2F0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalStageInstanceId                   StageInstanceIdBelongTo;                           // 0x300(0x14)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3729[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        TickFlagContainer;                                 // 0x318(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_372A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModel* GetDefaultObj();

	void RequestRepairByPlayer_ToServer_ServerInternal(struct FGuid& RequestPlayerUId);
	void OnUpdateBuildProcess_ServerInternal(class UPalBuildProcess* TargetBuildProcess);
	void OnUnassignWorkRepairBuildObject(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnTriggeringInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType, float DeltaTime);
	void OnStartTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnRep_Effect();
	void OnRep_ConcreteModel();
	void OnRep_BuildPlayerUId();
	void OnEndTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnAssignWorkRepairBuildObject(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	bool IsDamaged();
	struct FPalMapObjectStatusValue GetHP();
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalMapObjectModelEffectBase
class UPalMapObjectModelEffectBase : public UObject
{
public:
	uint8                                        Pad_372B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffectBase* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectModelEffectGrantParameterBase
class UPalMapObjectModelEffectGrantParameterBase : public UObject
{
public:
	class UPalMapObjectModel*                    OwnerModel;                                        // 0x28(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffectGrantParameterBase* GetDefaultObj();

};

// 0x170 (0x198 - 0x28)
// Class Pal.PalMapObjectModelEffect
class UPalMapObjectModelEffect : public UObject
{
public:
	uint8                                        Pad_372E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalFastMapObjectModelEffectRepInfoArray RepInfoArray;                                      // 0x48(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_372F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffect* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class Pal.PalMapObjectModelEffect_AccumulateTrigger
class UPalMapObjectModelEffect_AccumulateTrigger : public UPalMapObjectModelEffectBase
{
public:
	uint8                                        Pad_3731[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AccumulateValue;                                   // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3732[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffect_AccumulateTrigger* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalMapObjectModelEffectGrantParameter_AccumulateTrigger
class UPalMapObjectModelEffectGrantParameter_AccumulateTrigger : public UPalMapObjectModelEffectGrantParameterBase
{
public:
	float                                        Value;                                             // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3733[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffectGrantParameter_AccumulateTrigger* GetDefaultObj();

};

// 0x10 (0x68 - 0x58)
// Class Pal.PalMapObjectModelEffect_Burn
class UPalMapObjectModelEffect_Burn : public UPalMapObjectModelEffect_AccumulateTrigger
{
public:
	bool                                         bBurning;                                          // 0x58(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3736[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PersistenceValue;                                  // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalHitCollisionBox*                   HitCollisionBox;                                   // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffect_Burn* GetDefaultObj();

	void OnRep_Burning(bool bLastValue);
	void OnHitCollisionBox(class UPrimitiveComponent* MyHitComponent, class AActor* OtherHitActor, class UPrimitiveComponent* OtherHitComponent, TArray<int32>& FoliageIndex, const struct FVector& HitLocation, int32 HitCount);
};

// 0x0 (0x38 - 0x38)
// Class Pal.PalMapObjectModelEffectGrantParameter_Burn
class UPalMapObjectModelEffectGrantParameter_Burn : public UPalMapObjectModelEffectGrantParameter_AccumulateTrigger
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectModelEffectGrantParameter_Burn* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterBase
class UPalMapObjectModelInitializeExtraParameterBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterBase* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterBuild
class UPalMapObjectModelInitializeExtraParameterBuild : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	float                                        BuildWorkAmount;                                   // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3738[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterBuild* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterSpawnedBy
class UPalMapObjectModelInitializeExtraParameterSpawnedBy : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	struct FGuid                                 ByMapObjectModelInstanceId;                        // 0x28(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterSpawnedBy* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterSpawner
class UPalMapObjectModelInitializeExtraParameterSpawner : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	struct FGuid                                 OwnerSpawnerLevelObjectInstanceId;                 // 0x28(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalStageInstanceId                   OwnerSpawnerStageInstanceId;                       // 0x38(0x14)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3739[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterSpawner* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterItem
class UPalMapObjectModelInitializeExtraParameterItem : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	TArray<struct FPalItemAndNum>                ItemInfos;                                         // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterItem* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterTreasureBox
class UPalMapObjectModelInitializeExtraParameterTreasureBox : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	enum class EPalMapObjectTreasureGradeType    GradeType;                                         // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_373C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterTreasureBox* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterDropItem
class UPalMapObjectModelInitializeExtraParameterDropItem : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	struct FPalContainerId                       TempContainerID;                                   // 0x28(0x10)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ReleaseDirection;                                  // 0x38(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoPickup;                                       // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_373D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterDropItem* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterItemDropObject
class UPalMapObjectModelInitializeExtraParameterItemDropObject : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	TArray<struct FPalItemAndNum>                ItemInfos;                                         // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterItemDropObject* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterInitialItem
class UPalMapObjectModelInitializeExtraParameterInitialItem : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	TArray<struct FPalItemAndNum>                ItemInfos;                                         // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterInitialItem* GetDefaultObj();

};

// 0x218 (0x240 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterInitialCharacter
class UPalMapObjectModelInitializeExtraParameterInitialCharacter : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	struct FPalIndividualCharacterSaveParameter  CharacterSaveParameter;                            // 0x28(0x218)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterInitialCharacter* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterPalEgg
class UPalMapObjectModelInitializeExtraParameterPalEgg : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	class FName                                  CharacterID;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterPalEgg* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterNote
class UPalMapObjectModelInitializeExtraParameterNote : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	class FName                                  NoteRowName;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterNote* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterInteract
class UPalMapObjectModelInitializeExtraParameterInteract : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	enum class EPalMapObjectInteractRestrictType RestrictType;                                      // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3742[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterInteract* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterItemContainerAttribute
class UPalMapObjectModelInitializeExtraParameterItemContainerAttribute : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	TArray<enum class EPalMapObjectItemContainerSlotAttribute> AllSlotAttribute;                                  // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterItemContainerAttribute* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectModelInitializeExtraParameterByPlayerUId
class UPalMapObjectModelInitializeExtraParameterByPlayerUId : public UPalMapObjectModelInitializeExtraParameterBase
{
public:
	struct FGuid                                 ByPlayerUId;                                       // 0x28(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectModelInitializeExtraParameterByPlayerUId* GetDefaultObj();

};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectMonsterFarmModel
class UPalMapObjectMonsterFarmModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectMonsterFarmModel* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectMonsterFarmParameterComponent
class UPalMapObjectMonsterFarmParameterComponent : public UActorComponent
{
public:
	struct FFloatInterval                        ActionIntervalSeconds;                             // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectMonsterFarmParameterComponent* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectNoteObjectParameterComponent
class UPalMapObjectNoteObjectParameterComponent : public UActorComponent
{
public:
	struct FPalDataTableRowName_NoteData         NoteRowName;                                       // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectNoteObjectParameterComponent* GetDefaultObj();

};

// 0x8 (0x3A8 - 0x3A0)
// Class Pal.PalMapObjectPalEgg
class APalMapObjectPalEgg : public APalMapObject
{
public:
	class UPalMapObjectPickupItemPalEggParameterComponent* ParameterComponent;                                // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalMapObjectPalEgg* GetDefaultObj();

	class FName GetCharacterID();
};

// 0x10 (0x250 - 0x240)
// Class Pal.PalMapObjectPickupItemOnLevelModel
class UPalMapObjectPickupItemOnLevelModel : public UPalMapObjectPickableItemModelBase
{
public:
	uint8                                        Pad_3745[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VisualStaticItemId;                                // 0x248(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectPickupItemOnLevelModel* GetDefaultObj();

	void OnUpdateItemContainerContents(class UPalItemContainer* Container);
	class FName GetVisualStaticItemId();
};

// 0x0 (0x250 - 0x250)
// Class Pal.PalMapObjectPalEggModel
class UPalMapObjectPalEggModel : public UPalMapObjectPickupItemOnLevelModel
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectPalEggModel* GetDefaultObj();

};

// 0x8 (0x220 - 0x218)
// Class Pal.PalMapObjectPalFoodBoxModel
class UPalMapObjectPalFoodBoxModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_3748[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectPalFoodBoxModel* GetDefaultObj();

};

// 0xE8 (0x300 - 0x218)
// Class Pal.PalMapObjectPalStorageModel
class UPalMapObjectPalStorageModel : public UPalMapObjectConcreteModelBase
{
public:
	FMulticastInlineDelegateProperty_            OnSpawnedCharacterDelegate;                        // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3752[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalInstanceID>                SpawnedIndividualIds;                              // 0x2F0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectPalStorageModel* GetDefaultObj();

	void SpawnedCharacterDelegate__DelegateSignature(const struct FPalInstanceID& IndividualId, int32 PhantomId);
	void OnUpdateGuildPalStorage_ServerInternal(class UPalBaseCampModel* BaseCampModel, class UPalGuildPalStorage* GuildPalStorage);
	void OnTriggerInteract_BP(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnSpawnedPhantomCharacter(const struct FPalInstanceID& IndividualId, int32 PhantomId);
	void OnOverlapEndCageWalls(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp);
	void OnOverlapBeginCageWalls(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp);
	void OnDroppedCharacterToPhantom(const struct FPalInstanceID& IndividualId, int32 PhantomId);
	void OnAddGuildPalStorage_ServerInternal(class UPalIndividualCharacterHandle* NewCharacter);
};

// 0x8 (0x48 - 0x40)
// Class Pal.PalHUDDispatchParameter_Authentication
class UPalHUDDispatchParameter_Authentication : public UPalHUDDispatchParameter_MapObject
{
public:
	bool                                         IsAuthentication;                                  // 0x40(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3753[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_Authentication* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Pal.PalMapObjectPasswordLockModule
class UPalMapObjectPasswordLockModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateLockStateDelegate;                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_375E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAuthenticationResultNotifyDelegate;              // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalMapObjectPasswordLockState    LockState;                                         // 0x80(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_375F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Password;                                          // 0x88(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPalMapObjectPasswordLockPlayerInfo> PlayerInfos;                                       // 0x98(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	int32                                        TryAuthenticateMaxNum;                             // 0xA8(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3760[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectPasswordLockModule* GetDefaultObj();

	void ReturnSelfMulticastDelegate__DelegateSignature(class UPalMapObjectPasswordLockModule* Module);
	void ReturnSelfAndPasswordMulticastDelegate__DelegateSignature(class UPalMapObjectPasswordLockModule* Module, const class FString& Password);
	void ReturnPlayerInfoDelegate__DelegateSignature(struct FPalMapObjectPasswordLockPlayerInfo& OldLocalPlayerInfo, struct FPalMapObjectPasswordLockPlayerInfo& NewLocalPlayerInfo);
	void RequestUpdateUnlock_ServerInternal(int32 RequestPlayerId);
	void RequestUpdatePassword_ServerInternal(int32 RequestPlayerId, struct FPalNetArchive& Archive);
	void RequestUpdatePassword(const class FString& NewPassword);
	void RequestUpdateLock(enum class EPalMapObjectPasswordLockState NewLockState);
	void RequestOpenUIPasswordSetting();
	void RequestAuthenticate_ServerInternal(int32 RequestPlayerId, struct FPalNetArchive& Archive);
	void RequestAuthenticate(const class FString& InputPassword);
	void OpenMenuSecuritySetting();
	void OnRep_PlayerInfos(TArray<struct FPalMapObjectPasswordLockPlayerInfo>& OldValue);
	void NotifyAuthenticationResultDelegate__DelegateSignature(bool Passed);
	void NotifyAuthenticationResult(bool Passed);
	enum class EPalMapObjectPasswordLockState GetLockState();
	bool CanTryAuthenticateByPlayer(struct FGuid& RequestPlayerUId);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalMapObjectPickupItemParameterComponentBase
class UPalMapObjectPickupItemParameterComponentBase : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectPickupItemParameterComponentBase* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectPickupItemParameterComponent
class UPalMapObjectPickupItemParameterComponent : public UPalMapObjectPickupItemParameterComponentBase
{
public:
	TArray<struct FPalMapObjectPickupItemData>   DropItems;                                         // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectPickupItemParameterComponent* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Pal.PalMapObjectPickupItemPalEggParameterComponent
class UPalMapObjectPickupItemPalEggParameterComponent : public UPalMapObjectPickupItemParameterComponent
{
public:
	struct FPalMapObjectPickupItemPalEggData     PalEggData;                                        // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectPickupItemPalEggParameterComponent* GetDefaultObj();

};

// 0x30 (0x248 - 0x218)
// Class Pal.PalMapObjectPlayerBedModel
class UPalMapObjectPlayerBedModel : public UPalMapObjectConcreteModelBase
{
public:
	struct FVector                               RespawnLocationOffset;                             // 0x218(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasAuthority;                                     // 0x230(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3767[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            SleepingCharacter;                                 // 0x238(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalAction_SleepPlayerBed*             SleepPlayerBedAction;                              // 0x240(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectPlayerBedModel* GetDefaultObj();

	void RequestTriggerSleepPlayerBed_ToServer(int32 RequestPlayerId);
	void RequestTriggerGetupPlayerBed_ToServer(int32 RequestPlayerId);
	void ReceiveTriggerSleepPlayerBedSuccess(int32 RequestPlayerId);
	void ReceiveTriggerGetupPlayerBedSuccess(int32 RequestPlayerId);
	void PutPlayerToSleep(class UPalIndividualCharacterHandle* CharacterHandle);
	void OnPlayerActionBegin(class UPalActionBase* ActionBase);
	void OnGetupTrigger();
	void OnEndSleep();
	void OnDispose(class UPalMapObjectModel* MapObjectModel, struct FPalMapObjectDisposeOptions& Options);
	void OnDamagePlayer(const struct FPalDamageResult& DamageResult);
	void BP_OnTriggerInteract_SleepPlayerBed(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
};

// 0x48 (0x78 - 0x30)
// Class Pal.PalMapObjectPlayerRecordModule
class UPalMapObjectPlayerRecordModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePlayerRecordBoolValDelegate;               // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdatePlayerRecordIntValDelegate;                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_376E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetKey;                                         // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectPlayerRecordModule* GetDefaultObj();

	void OnUpdatePlayerRecordIntVal(class FName Key, int32 Value);
	void OnUpdatePlayerRecordBoolVal(class FName Key, bool Value);
	void OnCompleteSyncPlayerFromServer_InClient(class APalPlayerState* LocalPlayerState);
	void MulticastIntValDelegate__DelegateSignature(class UPalMapObjectPlayerRecordModule* Module, class FName Key, int32 Value);
	void MulticastBoolValDelegate__DelegateSignature(class UPalMapObjectPlayerRecordModule* Module, class FName Key, bool Value);
};

// 0x28 (0x240 - 0x218)
// Class Pal.PalMapObjectProductItemModel
class UPalMapObjectProductItemModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_3773[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnFinishProductOneLoopDelegate;                    // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsWorkable;                                       // 0x230(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3774[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ProductItemId;                                     // 0x234(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WorkSpeedAdditionalRate;                           // 0x23C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectProductItemModel* GetDefaultObj();

	void SimpleDelegate__DelegateSignature(class UPalMapObjectProductItemModel* Model);
	void OnUpdateContainerContent(class UPalItemContainer* Container);
	void OnFinishWorkInServer(class UPalWorkBase* Work);
	class FName GetProductItemId();
	class UPalItemContainer* GetItemContainer();
	float CalcRequiredAmount(float BaseRequiredAmount);
};

// 0x28 (0x240 - 0x218)
// Class Pal.PalMapObjectRankUpCharacterModel
class UPalMapObjectRankUpCharacterModel : public UPalMapObjectConcreteModelBase
{
public:
	FMulticastInlineDelegateProperty_            OnReceiveRequestResultDelegate;                    // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 BaseCampIdBelongTo;                                // 0x228(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectRankUpCharacterModel* GetDefaultObj();

	void RequestRankup_ServerInternal(int32 RequestPlayerId, struct FPalNetArchive& Archive);
	void ReceiveOperationResult(int32 ResultInt);
};

// 0x18 (0x230 - 0x218)
// Class Pal.PalMapObjectRecoverOtomoModel
class UPalMapObjectRecoverOtomoModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_377C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecoverAmountBySec;                                // 0x220(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_377D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0x228(0x8)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectRecoverOtomoModel* GetDefaultObj();

	void StoreAllOtomo_ServerInternal(int32 RequestPlayerId);
	void RequestRecoverAllOtomo_ServerInternal(int32 RequestPlayerId);
	void OnUpdateCharacterContainer(class UPalIndividualCharacterContainer* Container);
	void ObtainAll_ServerInternal(int32 RequestPlayerId);
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalMapObjectRecoverOtomoParameterComponent
class UPalMapObjectRecoverOtomoParameterComponent : public UActorComponent
{
public:
	int32                                        SlotNum;                                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoverAmountBySec;                                // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectRecoverOtomoParameterComponent* GetDefaultObj();

};

// 0x20 (0x238 - 0x218)
// Class Pal.PalMapObjectRepairItemModel
class UPalMapObjectRepairItemModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_3781[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RequiredRepairItemRate;                            // 0x228(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3782[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUserWidgetOverlayUI>   WidgetClass;                                       // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectRepairItemModel* GetDefaultObj();

	void RequestRepairItem(TArray<struct FPalItemSlotId>& TargetItemSlotIdArray);
	void RepairItem_ServerInternal(int32 RequestPlayerId, struct FPalNetArchive& Archive);
	void OnNotifyRepairResult__DelegateSignature(bool IsSuccess);
	void NotifyRepairResult(bool IsSuccess);
	void GetRequiredMaterials(TArray<struct FPalItemId>& TargetRepairItemIdArray, TArray<struct FPalStaticItemIdAndNum>* OutRequiredMaterials);
};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectRepairItemParameterComponent
class UPalMapObjectRepairItemParameterComponent : public UActorComponent
{
public:
	float                                        RequiredRepairItemPercent;                         // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3783[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectRepairItemParameterComponent* GetDefaultObj();

};

// 0x10 (0x228 - 0x218)
// Class Pal.PalMapObjectRespawnPointModel
class UPalMapObjectRespawnPointModel : public UPalMapObjectConcreteModelBase
{
public:
	struct FGuid                                 LocationId;                                        // 0x218(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectRespawnPointModel* GetDefaultObj();

};

// 0x10 (0x228 - 0x218)
// Class Pal.PalMapObjectShippingItemModel
class UPalMapObjectShippingItemModel : public UPalMapObjectConcreteModelBase
{
public:
	TArray<int32>                                ShippingHours;                                     // 0x218(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectShippingItemModel* GetDefaultObj();

	void OnChangeTimeHoursInServer();
};

// 0x18 (0xB8 - 0xA0)
// Class Pal.PalMapObjectShippingItemParameterComponent
class UPalMapObjectShippingItemParameterComponent : public UActorComponent
{
public:
	int32                                        SlotNum;                                           // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3785[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ShippingHours;                                     // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectShippingItemParameterComponent* GetDefaultObj();

};

// 0x30 (0x248 - 0x218)
// Class Pal.PalMapObjectSignboardModel
class UPalMapObjectSignboardModel : public UPalMapObjectConcreteModelBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateSignboardTextDelegate;                     // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0x228(0x8)(Net, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                SignboardText;                                     // 0x230(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsEditing;                                        // 0x240(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_378A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectSignboardModel* GetDefaultObj();

	void UpdateSignboardTextDelegate__DelegateSignature(const class FString& TextValue);
	void RequestUpdateText(int32 RequestPlayerId, struct FPalNetArchive& Archive);
	void RequestEditText(int32 RequestPlayerId, bool IsEditing);
	void OnUpdateText(const class FString& Text);
	void OnRep_Text();
	void OnOpenEdit();
	class FString GetSignboardText();
};

// 0x30 (0x70 - 0x40)
// Class Pal.PalHUDDispatchParameter_Signboard
class UPalHUDDispatchParameter_Signboard : public UPalHUDDispatchParameter_MapObject
{
public:
	class FString                                InText;                                            // 0x40(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OutText;                                           // 0x50(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateTextDelegate;                              // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_Signboard* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectSignboardParameterComponent
class UPalMapObjectSignboardParameterComponent : public UActorComponent
{
public:
	TSubclassOf<class UPalUserWidgetOverlayUI>   MenuUIWidgetClass;                                 // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectSignboardParameterComponent* GetDefaultObj();

};

// 0x28 (0x2D0 - 0x2A8)
// Class Pal.PalMapObjectSpawnerBase
class APalMapObjectSpawnerBase : public APalLevelObjectActor
{
public:
	int32                                        ProbabilityRespawn;                                // 0x2A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LotteryCoolTimeMinutes;                            // 0x2AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalStageInstanceId                   StageInstanceIdBelongTo;                           // 0x2B0(0x14)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_378D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      LocateSphere;                                      // 0x2C8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalMapObjectSpawnerBase* GetDefaultObj();

	void OnWorldMapObjectSpawnableInServer();
};

// 0x0 (0x2D0 - 0x2D0)
// Class Pal.PalMapObjectSpawnerSingleBase
class APalMapObjectSpawnerSingleBase : public APalMapObjectSpawnerBase
{
public:

	static class UClass* StaticClass();
	static class APalMapObjectSpawnerSingleBase* GetDefaultObj();

};

// 0x18 (0xB8 - 0xA0)
// Class Pal.PalMapObjectSpawnerDamageReactionComponent
class UPalMapObjectSpawnerDamageReactionComponent : public UActorComponent
{
public:
	uint8                                        Pad_3790[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDropItemOnDamaged;                                // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3791[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalHitEffectSlot*                     EffectSlot;                                        // 0xB0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectSpawnerDamageReactionComponent* GetDefaultObj();

};

// 0x60 (0x330 - 0x2D0)
// Class Pal.PalMapObjectSpawnerMultiItem
class APalMapObjectSpawnerMultiItem : public APalMapObjectSpawnerBase
{
public:
	uint8                                        Pad_3794[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalDataTableRowName_FieldLotteryNameData FieldLotteryName;                                  // 0x320(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnTimeMinutesObtained;                        // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3795[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalMapObjectSpawnerMultiItem* GetDefaultObj();

};

// 0x0 (0x5F0 - 0x5F0)
// Class Pal.PalMapObjectSpawnerMultiItemLocationComponent
class UPalMapObjectSpawnerMultiItemLocationComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectSpawnerMultiItemLocationComponent* GetDefaultObj();

};

// 0x18 (0x2E8 - 0x2D0)
// Class Pal.PalMapObjectSpawnerPalEgg
class APalMapObjectSpawnerPalEgg : public APalMapObjectSpawnerSingleBase
{
public:
	TArray<struct FPalMapObjectPickupItemPalEggLotteryData> SpawnPalEggLotteryDataArray;                       // 0x2D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        RespawnTimeMinutesObtained;                        // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRespawnableMulti;                                 // 0x2E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_379C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalMapObjectSpawnerPalEgg* GetDefaultObj();

	void OnFinishedSpawningMapObjectModel(const struct FGuid& InstanceId, enum class EPalMapObjectOperationResult Result);
};

// 0x8 (0x2D8 - 0x2D0)
// Class Pal.PalMapObjectSpawnerSimple
class APalMapObjectSpawnerSimple : public APalMapObjectSpawnerSingleBase
{
public:
	struct FPalDataTableRowName_MapObjectData    MapObjectId;                                       // 0x2D0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalMapObjectSpawnerSimple* GetDefaultObj();

	void OnFinishedSpawningMapObjectModel(const struct FGuid& InstanceId, enum class EPalMapObjectOperationResult Result);
};

// 0x18 (0x2E8 - 0x2D0)
// Class Pal.PalMapObjectSpawnerTreasureBox
class APalMapObjectSpawnerTreasureBox : public APalMapObjectSpawnerSingleBase
{
public:
	struct FPalDataTableRowName_MapObjectData    SpawnMapObjectId;                                  // 0x2D0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_FieldLotteryNameData FieldLotteryName;                                  // 0x2D8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnTimeMinutesObtained;                        // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRespawnableMulti;                                 // 0x2E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_37A2[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalMapObjectSpawnerTreasureBox* GetDefaultObj();

	void OnFinishedSpawningMapObjectModel(const struct FGuid& InstanceId, enum class EPalMapObjectOperationResult Result);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalBuildObjectSpawnValidationCheckInterface
class IPalBuildObjectSpawnValidationCheckInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalBuildObjectSpawnValidationCheckInterface* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Pal.PalMapObjectStatusObserverModule
class UPalMapObjectStatusObserverModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	FMulticastInlineDelegateProperty_            OnDamageInServerDelegate;                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectStatusObserverModule* GetDefaultObj();

	void OnDamage_ServerInternal(class UPalMapObjectModel* Model, struct FPalDamageInfo& DamageInfo, int32 LastHp);
};

// 0x18 (0x48 - 0x30)
// Class Pal.PalMapObjectSwitchModule
class UPalMapObjectSwitchModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateSwitchStateDelegate;                       // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EPalMapObjectSwitchState          SwitchState;                                       // 0x40(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37A6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectSwitchModule* GetDefaultObj();

	void ReturnSelfMulticastDelegate__DelegateSignature(class UPalMapObjectSwitchModule* Module);
	void OnRep_SwitchState();
	enum class EPalMapObjectSwitchState GetSwitchState();
};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectSwitchOnInWorking
class UPalMapObjectSwitchOnInWorking : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectSwitchOnInWorking* GetDefaultObj();

	void OnUpdateAssignedCharacter_ServerInternal(class UPalWorkBase* Work);
};

// 0x8 (0x220 - 0x218)
// Class Pal.PalMapObjectTestFunctionModel
class UPalMapObjectTestFunctionModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_37A9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectTestFunctionModel* GetDefaultObj();

	void RequestCountUpSIngle_ServerInternal(int32 RequestPlayerId);
	void RequestCountUp_ServerInternal(int32 RequestPlayerId, int32 IncrementNum);
	void RequestCountUp(int32 IncrementNum);
	void OnRecieveCountUp(int32 ReflectedCounter);
};

// 0x0 (0x218 - 0x218)
// Class Pal.PalMapObjectTestGlobalContainerModel
class UPalMapObjectTestGlobalContainerModel : public UPalMapObjectConcreteModelBase
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectTestGlobalContainerModel* GetDefaultObj();

	void WatchContainer();
	void Swap(int32 ASlotIndex, int32 BSlotIndex);
	void ProduceWithSlotWithConsume(class FName StaticItemId, int32 Num, int32 SlotIndex, int32 ConsumeSlotIndex, int32 ConsumeNum);
	void ProduceWithSlot(class FName StaticItemId, int32 Num, int32 SlotIndex);
	void Produce(class FName StaticItemId, int32 Num);
	void OpenContainerUI();
	void Move(int32 Num, int32 ToSlotIndex, int32 FromSlotIndex);
	void Dispose(int32 SlotIndex, int32 Num);
	void CloseContainerUI();
};

// 0x10 (0x228 - 0x218)
// Class Pal.PalMapObjectTestItemDestroyedDropModel
class UPalMapObjectTestItemDestroyedDropModel : public UPalMapObjectConcreteModelBase
{
public:
	TArray<struct FPalItemAndNum>                DropItemInfos;                                     // 0x218(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMapObjectTestItemDestroyedDropModel* GetDefaultObj();

	void OnDestroy_ServerInternal(class UPalMapObjectModel* Model);
};

// 0x10 (0x228 - 0x218)
// Class Pal.PalMapObjectTorchModel
class UPalMapObjectTorchModel : public UPalMapObjectConcreteModelBase
{
public:
	int32                                        IgnitionMinutes;                                   // 0x218(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameDateTime                         ExtinctionDateTime;                                // 0x220(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectTorchModel* GetDefaultObj();

	void RequestTriggerIgnition_ToServer(int32 RequestPlayerId);
	void OnWorkBootUp_ServerInternal(class UPalWorkBootUp* Work);
};

// 0x8 (0xA8 - 0xA0)
// Class Pal.PalMapObjectTorchParameterComponent
class UPalMapObjectTorchParameterComponent : public UActorComponent
{
public:
	int32                                        IgnitionMinutes;                                   // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_37AE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectTorchParameterComponent* GetDefaultObj();

};

// 0x30 (0x3D0 - 0x3A0)
// Class Pal.PalMapObjectTreasureBox
class APalMapObjectTreasureBox : public APalMapObject
{
public:
	struct FVector                               DropItemLocalLocation;                             // 0x3A0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_37B0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalMapObjectTreasureBox* GetDefaultObj();

	void TriggerOpen();
	void OnReceiveOpenInServer(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void NotifyStartOpenInAnimation();
	void BroadcastTriggerOpen();
};

// 0x38 (0x250 - 0x218)
// Class Pal.PalMapObjectTreasureBoxModel
class UPalMapObjectTreasureBoxModel : public UPalMapObjectConcreteModelBase
{
public:
	uint8                                        Pad_37B6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPalMapObjectTreasureGradeType    TreasureGradeType;                                 // 0x228(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37B7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DropItemLocalLocation;                             // 0x230(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOpened;                                           // 0x248(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_37B8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectTreasureBoxModel* GetDefaultObj();

	void RequestOpen_ServerInternal(int32 RequestPlayerId);
	void ReceiveOpenSuccess_ClientInternal(struct FPalNetArchive& Archive);
	void ReceiveOpenFailed_ClientInternal(struct FPalNetArchive& Archive);
	enum class EPalMapObjectTreasureGradeType GetTreasureGradeType();
	void Debug_ReceiveObtainInfo_ClientInternal(struct FPalNetArchive& Archive);
	TArray<struct FPalItemAndNum> CreateItemInfo();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectUtility
class UPalMapObjectUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMapObjectUtility* GetDefaultObj();

	bool TryGetItemVisualModelStaticMesh(TSubclassOf<class AActor> ActorClass, class UStaticMesh** OutStaticMesh, struct FTransform* OutComponentTransform, struct FVector* OutCenterOfMass, class UMaterialInterface** OutMaterialInterface);
	enum class EPalMapObjectOperationResult ToMapObjectOperationResult(int32 ResultIntValue);
	enum class EPalMapObjectOperationResult SelectPriorityResult(enum class EPalMapObjectOperationResult Result1, enum class EPalMapObjectOperationResult Result2);
	class FString MapObjectOperationResultToString(enum class EPalMapObjectOperationResult Result);
	bool IsContainsCollisionProfiles(class UPrimitiveComponent* Component, TArray<class FName>& CollisionProfiles);
};

// 0x50 (0xF0 - 0xA0)
// Class Pal.PalMapObjectVisualEffectComponent
class UPalMapObjectVisualEffectComponent : public UActorComponent
{
public:
	TMap<enum class EPalMapObjectVisualEffectType, struct FPalMapObjectVisualEffectInstanceSet> SpawnedEffectMap;                                  // 0xA0(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectVisualEffectComponent* GetDefaultObj();

	void UpdateVisualByEffect(class UPalMapObjectModelEffectBase* Effect);
	void OnRemoveEffect(class UPalMapObjectModel* Model, class UPalMapObjectModelEffectBase* Effect);
	void OnGrantedEffect(class UPalMapObjectModel* Model, class UPalMapObjectModelEffectBase* Effect);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapObjectWaterRecievableInterface
class IPalMapObjectWaterRecievableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMapObjectWaterRecievableInterface* GetDefaultObj();

	void OnWaterOneshot(class AActor* Waterer);
	void OnWateringEnd(class AActor* Waterer);
	void OnWateringBegin(class AActor* Waterer);
};

// 0x8 (0x38 - 0x30)
// Class Pal.PalMapObjectWorkeeModule
class UPalMapObjectWorkeeModule : public UPalMapObjectConcreteModelModuleBase
{
public:
	class UPalWorkBase*                          TargetWork;                                        // 0x30(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectWorkeeModule* GetDefaultObj();

	void OnRep_TargetWork();
	class UPalWorkProgress* GetWorkProgress();
	class UPalWorkBase* GetWork();
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalMapObjectWorldDisposer
class UPalMapObjectWorldDisposer : public UObject
{
public:
	TArray<class UPalMapObjectWorldDisposerBase*> WorldDisposers;                                    // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectWorldDisposer* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMapObjectWorldDisposerBase
class UPalMapObjectWorldDisposerBase : public UObject
{
public:
	uint8                                        Pad_37C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMapObjectWorldDisposerBase* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Pal.PalMapObjectWorldDisposer_DropItem
class UPalMapObjectWorldDisposer_DropItem : public UPalMapObjectWorldDisposerBase
{
public:
	uint8                                        Pad_37CA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalDropItemType, struct FPalMapObjectWorldDropItemInfoSet> DropItemInfoSetMap;                                // 0x40(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalMapObjectWorldDisposer_DropItem* GetDefaultObj();

	void OnRestoreMapObject_ServerInternal(class UPalMapObjectModel* Model);
	void OnCreateMapObject_ServerInternal(class UPalMapObjectModel* SpawnedModel, struct FVector& SpawnLocation);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalMasterDataTableAccessBase
class UPalMasterDataTableAccessBase : public UObject
{
public:
	class UDataTable*                            DataTable;                                         // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccessBase* GetDefaultObj();

	TArray<class FName> GetRowNames();
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_LocalizeText
class UPalMasterDataTableAccess_LocalizeText : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_LocalizeText* GetDefaultObj();

	class FText FindRow(class FName RowName);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_WildSpawnerData
class UPalMasterDataTableAccess_WildSpawnerData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_WildSpawnerData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_ItemRecipe
class UPalMasterDataTableAccess_ItemRecipe : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_ItemRecipe* GetDefaultObj();

	void BPExec_FindRow(class FName RowName, enum class EPalMasterDataExecPinType* ExecType, struct FPalItemRecipe* OutData);
	struct FPalItemRecipe BP_FindRow(class FName RowName, bool* bResult);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_FarmCropData
class UPalMasterDataTableAccess_FarmCropData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_FarmCropData* GetDefaultObj();

	void BPExec_FindRowByCropItemId(class FName CropItemId, enum class EPalMasterDataExecPinType* ExecType, struct FPalMapObjectFarmCropData* OutData);
	void BPExec_FindRow(class FName RowName, enum class EPalMasterDataExecPinType* ExecType, struct FPalMapObjectFarmCropData* OutData);
	struct FPalMapObjectFarmCropData BP_FindRowByCropItemId(class FName CropItemId, bool* bResult);
	struct FPalMapObjectFarmCropData BP_FindRow(class FName RowName, bool* bResult);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_MapObjectMasterData
class UPalMasterDataTableAccess_MapObjectMasterData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_MapObjectMasterData* GetDefaultObj();

	void BPExec_FindRow(class FName RowName, enum class EPalMasterDataExecPinType* ExecType, struct FPalMapObjectMasterData* OutData);
	struct FPalMapObjectMasterData BP_FindRow(class FName RowName, bool* bResult);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_BuildObjectData
class UPalMasterDataTableAccess_BuildObjectData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_BuildObjectData* GetDefaultObj();

	void BPExec_FindRowByMapObjectId(class FName MapObjectId, enum class EPalMasterDataExecPinType* ExecType, struct FPalBuildObjectData* OutData);
	void BPExec_FindRow(class FName RowName, enum class EPalMasterDataExecPinType* ExecType, struct FPalBuildObjectData* OutData);
	struct FPalBuildObjectData BP_FindRowByMapObjectId(class FName MapObjectId, class FName* OutRowName, bool* bResult);
	struct FPalBuildObjectData BP_FindRow(class FName RowName, bool* bResult);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_BuildObjectIconData
class UPalMasterDataTableAccess_BuildObjectIconData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_BuildObjectIconData* GetDefaultObj();

	void BPExec_FindRow(class FName RowName, enum class EPalMasterDataExecPinType* ExecType, struct FPalBuildObjectIconData* OutData);
	struct FPalBuildObjectIconData BP_FindRow(class FName RowName, bool* bResult);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_ItemProductData
class UPalMasterDataTableAccess_ItemProductData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_ItemProductData* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalMasterDataTableAccess_BaseCampLevelData
class UPalMasterDataTableAccess_BaseCampLevelData : public UPalMasterDataTableAccessBase
{
public:
	uint8                                        Pad_37F2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_BaseCampLevelData* GetDefaultObj();

	int32 GetMaxLevel();
	struct FPalBaseCampLevelMasterData GetLevelInfo(int32 Level);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_DungeonSpawnAreaData
class UPalMasterDataTableAccess_DungeonSpawnAreaData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_DungeonSpawnAreaData* GetDefaultObj();

	struct FPalDungeonSpawnAreaData BP_FindRow(class FName RowName, bool* bResult);
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_DungeonLevelData
class UPalMasterDataTableAccess_DungeonLevelData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_DungeonLevelData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_DungeonEnemySpawnerData
class UPalMasterDataTableAccess_DungeonEnemySpawnerData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_DungeonEnemySpawnerData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_DungeonItemLotteryData
class UPalMasterDataTableAccess_DungeonItemLotteryData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_DungeonItemLotteryData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_FieldLotteryNameData
class UPalMasterDataTableAccess_FieldLotteryNameData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_FieldLotteryNameData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_ItemLotteryData
class UPalMasterDataTableAccess_ItemLotteryData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_ItemLotteryData* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Pal.PalMasterDataTableAccess_PlayerStatusRankData
class UPalMasterDataTableAccess_PlayerStatusRankData : public UPalMasterDataTableAccessBase
{
public:
	uint8                                        Pad_37F7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_PlayerStatusRankData* GetDefaultObj();

	int32 GetMaxRank();
};

// 0x8 (0x38 - 0x30)
// Class Pal.PalMasterDataTableAccess_CharacterUpgradeData
class UPalMasterDataTableAccess_CharacterUpgradeData : public UPalMasterDataTableAccessBase
{
public:
	uint8                                        Pad_37F8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_CharacterUpgradeData* GetDefaultObj();

	int32 GetMaxRank();
};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_UIInputActionData
class UPalMasterDataTableAccess_UIInputActionData : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_UIInputActionData* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_ItemShopLottery
class UPalMasterDataTableAccess_ItemShopLottery : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_ItemShopLottery* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_ItemShop
class UPalMasterDataTableAccess_ItemShop : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_ItemShop* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalMasterDataTableAccess_PalShop
class UPalMasterDataTableAccess_PalShop : public UPalMasterDataTableAccessBase
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTableAccess_PalShop* GetDefaultObj();

};

// 0x210 (0x238 - 0x28)
// Class Pal.PalMasterDataTables
class UPalMasterDataTables : public UObject
{
public:
	class UDataTable*                            WildSpawnerDataTable;                              // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_WildSpawnerData* Access_WildSpawnerDataTable;                       // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemRecipeDataTable;                               // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_ItemRecipe*  Access_ItemRecipeDataTable;                        // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            FarmCropDataTable;                                 // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_FarmCropData* Access_FarmCropDataTable;                          // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            MapObjectDataTable;                                // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_MapObjectMasterData* Access_MapObjectDataTable;                         // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BuildObjectDataTable;                              // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_BuildObjectData* Access_BuildObjectDataTable;                       // 0x70(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BuildObjectIconDataTable;                          // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_BuildObjectIconData* Access_BuildObjectIconDataTable;                   // 0x80(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemProductDataTable;                              // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_ItemProductData* Access_ItemProductDataTable;                       // 0x90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BaseCampLevelDataTable;                            // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_BaseCampLevelData* Access_BaseCampLevelDataTable;                     // 0xA0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            DungeonSpawnAreaDataTable;                         // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_DungeonSpawnAreaData* Access_DungeonSpawnAreaDataTable;                  // 0xB0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            DungeonLevelDataTable;                             // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_DungeonLevelData* Access_DungeonLevelDataTable;                      // 0xC0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            DungeonEnemySpawnerDataTable;                      // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_DungeonEnemySpawnerData* Access_DungeonEnemySpawnerDataTable;               // 0xD0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            DungeonItemLotteryDataTable;                       // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_DungeonItemLotteryData* Access_DungeonItemLotteryDataTable;                // 0xE0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            FieldLotteryNameDataTable;                         // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_FieldLotteryNameData* Access_FieldLotteryNameDataTable;                  // 0xF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemLotteryDataTable;                              // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_ItemLotteryData* Access_ItemLotteryDataTable;                       // 0x100(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PlayerStatusRankDataTable;                         // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_PlayerStatusRankData* Access_PlayerStatusRankDataTable;                  // 0x110(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            CharacterUpgradeDataTable;                         // 0x118(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_CharacterUpgradeData* Access_CharacterUpgradeDataTable;                  // 0x120(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalNoteDataAsset*                     NoteDataAsset;                                     // 0x128(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalNoteDataAsset*                     HelpGuideDataAsset;                                // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPalLocalizeTextCategory, class UDataTable*> LocalizeTextDataTableMap;                          // 0x138(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalLocalizeTextCategory, class UPalMasterDataTableAccess_LocalizeText*> Access_LocalizeTextDataTables;                     // 0x188(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            UIInputActionDataTable;                            // 0x1D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_UIInputActionData* Access_UIInputActionDataTable;                     // 0x1E0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalTechnologyDataSet                 TechnologyDataSet;                                 // 0x1E8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            WorldMapDataTable;                                 // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemShopLotteryDataTable;                          // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_ItemShopLottery* Access_ItemShopLotteryDataTable;                   // 0x210(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemShopDataTable;                                 // 0x218(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_ItemShop*    Access_ItemShopDataTable;                          // 0x220(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PalShopDataTable;                                  // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalMasterDataTableAccess_PalShop*     Access_PalShopDataTable;                           // 0x230(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalMasterDataTables* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMasterDataTablesUtility
class UPalMasterDataTablesUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMasterDataTablesUtility* GetDefaultObj();

	class UPalMasterDataTableAccess_WildSpawnerData* GetWildSpawnerDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetWildSpawnerDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_UIInputActionData* GetUIInputActionDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetUIInputActionDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_PlayerStatusRankData* GetPlayerStatusRankDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetPlayerStatusRankDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_PalShop* GetPalShopDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetPalShopDataTable(class UObject* WorldContextObject);
	class UPalNoteDataAsset* GetNoteDataAsset(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_MapObjectMasterData* GetMapObjectDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetMapObjectDataTable(class UObject* WorldContextObject);
	class FText GetLocalizedText(class UObject* WorldContextObject, enum class EPalLocalizeTextCategory TextCategory, class FName TextId);
	class UPalMasterDataTableAccess_ItemShopLottery* GetItemShopLotteryDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetItemShopLotteryDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_ItemShop* GetItemShopDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetItemShopDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_ItemRecipe* GetItemRecipeDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetItemRecipeDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_ItemLotteryData* GetItemLotteryDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetItemLotteryDataTable(class UObject* WorldContextObject);
	class UPalNoteDataAsset* GetHelpGuideDataAsset(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_FieldLotteryNameData* GetFieldLotteryNameDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetFieldLotteryNameDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_FarmCropData* GetFarmCropDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetFarmCropDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_DungeonSpawnAreaData* GetDungeonSpawnAreaDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetDungeonSpawnAreaDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_DungeonLevelData* GetDungeonLevelDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetDungeonLevelDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_DungeonItemLotteryData* GetDungeonItemLotteryDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetDungeonItemLotteryDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_DungeonEnemySpawnerData* GetDungeonEnemySpawnerDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetDungeonEnemySpawnerDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_CharacterUpgradeData* GetCharacterUpgradeDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetCharacterUpgradeDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_BuildObjectIconData* GetBuildObjectIconDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetBuildObjectIconDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_BuildObjectData* GetBuildObjectDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetBuildObjectDataTable(class UObject* WorldContextObject);
	class UPalMasterDataTableAccess_BaseCampLevelData* GetBaseCampLevelDataTableAccess(class UObject* WorldContextObject);
	class UDataTable* GetBaseCampLevelDataTable(class UObject* WorldContextObject);
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalMoneyData
class UPalMoneyData : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatedMoneyDelegate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddMoneyDelegate;                                // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalPlayerInventoryData*               ParentInventoryData;                               // 0x48(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_380C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalMoneyData* GetDefaultObj();

	void UpdatedMoneyDelegate__DelegateSignature(int64 NowMoney);
	void OnUpdateInventorylContainer(class UPalItemContainer* Container);
	int64 GetNowMoney();
	void AddMoneyDelegate__DelegateSignature(int64 OldMoney, int64 AddMoney);
};

// 0x18 (0x810 - 0x7F8)
// Class Pal.PalNPC
class APalNPC : public APalCharacter
{
public:
	class UPalNPCWeaponGenerator*                WeaponGenerator;                                   // 0x7F8(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableJumpEffect;                                // 0x800(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_380D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultVoiceID;                                    // 0x804(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_380E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalNPC* GetDefaultObj();

	void OnCompletedInitParam(class APalCharacter* InCharacter);
};

// 0x80 (0x890 - 0x810)
// Class Pal.PalMonsterCharacter
class APalMonsterCharacter : public APalNPC
{
public:
	uint8                                        Pad_3810[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObj;                                    // 0x818(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCharacterLiftupObjectComponent*    LiftupObjectComponent;                             // 0x828(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3811[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalMonsterCharacter* GetDefaultObj();

	void SelectedFeedingItem(struct FPalItemSlotId& ItemSlotId, int32 Num);
	void OnTriggerInteract(class AActor* OtherActor, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnSelectedOrderWorkerRadialMenu(class UPalHUDDispatchParameterBase* Parameter);
	void MasterWazaUpdateWhenLevelUp(int32 AddLevel, int32 NowLevel);
	void MasterWazaSetup(class APalCharacter* InCharacter);
	bool IsLiftupObject();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMonsterControllerBaseCampLogTypeUtility
class UPalMonsterControllerBaseCampLogTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMonsterControllerBaseCampLogTypeUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMonsterControllerBaseCampUtility
class UPalMonsterControllerBaseCampUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMonsterControllerBaseCampUtility* GetDefaultObj();

	struct FPalMonsterControllerBaseCampHungryParameter SetHungryParameterToDefault(class UObject* WorldObjectContext, const struct FPalMonsterControllerBaseCampHungryParameter& Parameter);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMonsterControllerBaseCampInterface
class IPalMonsterControllerBaseCampInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMonsterControllerBaseCampInterface* GetDefaultObj();

	void TerminateBaseCampActionByClass(TSubclassOf<class UPalAIActionBase> ActionClass);
	void SetDefaultPositionAction();
	void SetCapturedStorageAction();
	void SetBaseCampFighterGunnerAction();
	void SetBaseCampFighterAction();
	void SetBaseCampActionWithFixAssign(struct FGuid& TargetWorkProgressId, float DistanceFixAssignTargetting);
	void SetBaseCampActionSpawningForWork();
	void SetBaseCampActionSleepMedicalBed(struct FGuid& TargetBedConcreteModelId);
	class UPalAIActionBaseCampSleep* SetBaseCampActionSleep();
	void SetBaseCampActionLift();
	class UPalAIActionBase* SetBaseCampActionByClass(TSubclassOf<class UPalAIActionBase> ActionClass);
	void SetBaseCampAction();
	void NotifyOrderCommand(enum class EPalMapBaseCampWorkerOrderType OrderType);
	void InterruptSleepActivelyAction(struct FPalAIActionBaseCampSleepActivelyParameter& Parameter);
	void InterruptReturnBackToBaseCamp();
	void InterruptRecoverHungryAction(const struct FPalMonsterControllerBaseCampHungryParameter& Parameter);
	void InterruptPlayWorkerEventAction(class UPalAIActionBase* Action, enum class EAIRequestPriority Priority);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMonsterControllerLogInterface
class IPalMonsterControllerLogInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalMonsterControllerLogInterface* GetDefaultObj();

	void ShowBaseCampLog(struct FPalMonsterControllerBaseCampLogContent& Content);
};

// 0x2A8 (0x538 - 0x290)
// Class Pal.PalWeaponBase
class APalWeaponBase : public AActor
{
public:
	uint8                                        Pad_383F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnReloadDelegate;                                  // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUseBulletDelegate;                               // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShootBulletDelegate;                             // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeCoolDownStateDelegate;                     // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCoolDownUpdateDelegate;                          // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCreatedBulletDelegate;                           // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGetWeaponDamageDelegate;                         // 0x2F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAttachWeaponDelegate;                            // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDetachWeaponDelegate;                            // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeaponNotifyDelegate;                            // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        BulletDeleteTime;                                  // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BulletDecayStartRate;                              // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           RecoilCurve;                                       // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilYawRange;                                    // 0x348(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilPitchTotalMax;                               // 0x34C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilDecaySpeed;                                  // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3842[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UCameraShakeBase>          ShotCameraShake;                                   // 0x358(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponCoopType                   WeaponCoopType;                                    // 0x360(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalWeaponType                    WeaponType;                                        // 0x361(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRequiredBullet;                                  // 0x362(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3843[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BulletItemName;                                    // 0x364(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3845[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    ShootBlurMaterial;                                 // 0x370(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ShootBlurAlphaCurve;                               // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalSpecialAttackRateInfo>     SpecialAttackRateInfos;                            // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             WeaponIconTexture;                                 // 0x390(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalDamageAnimationReactionType   WeaponBulletDamageReactionType;                    // 0x3C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3847[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UPalSoundSlot>           PalSoundSlotClass;                                 // 0x3C8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponPlaySoundType, struct FPalDataTableRowName_SoundID> PlaySoundIds;                                      // 0x3F8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         IsEmptyOtomoPal;                                   // 0x448(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3849[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoolDownTime;                                      // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              ShootBlurMaterialDynamic;                          // 0x450(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_384A[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalItemId                            OwnItemID;                                         // 0x46C(0x28)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_384B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalItemData                          OwnItemData;                                       // 0x498(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	class UPalStaticWeaponItemData*              OwnWeaponStaticData;                               // 0x4A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalDynamicWeaponItemDataBase*         OwnWeaponDynamicData;                              // 0x4B0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        HiddenWeapon;                                      // 0x4B8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	class UPalSoundSlot*                         PalSoundSlotCache;                                 // 0x508(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecoilPowerRate;                                   // 0x510(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsScopeMode;                                       // 0x514(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOneBulletReloadWeapon;                           // 0x515(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_384D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayDestorySecond;                                // 0x518(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsUnnecessaryDynamicData;                          // 0x51C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalShooterFlagContainerPriority  ShooterFlagPriority;                               // 0x51D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_384E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalBackWeaponBase>        BackWeaponClass;                                   // 0x520(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APalBackWeaponBase*                    BackWeaponModel;                                   // 0x528(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LoadoutSelectorIndex;                              // 0x530(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3850[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalWeaponBase* GetDefaultObj();

	void WeaponNotifyDelegate__DelegateSignature(enum class EWeaponNotifyType NotifyType);
	void UseBulletDelegate__DelegateSignature(int32 RemainingBulletsNum);
	void UnbindGetWeaponDamageDelegate();
	class UPalDynamicWeaponItemDataBase* TryGetDynamicWeaponData();
	void StartCoolDown();
	void SetupWeaponSkill();
	void SetHiddenWeaponMyself(bool IsHidden);
	void SetHiddenWeaponDefault(bool IsHidden);
	void SetHiddenWeapon(class FName FlagName, bool IsHidden);
	void SendWeaponNotify(enum class EWeaponNotifyType Type);
	bool SeekRightHandOpen();
	bool SeekLeftHandOpen();
	void RPCDummy();
	void RequestConsumeItem_ForThrowWeapon(class FName& StaticItemId, int32 ConsumeNum);
	void RequestConsumeItem(class FName& StaticItemId, int32 ConsumeNum);
	void ReloadBulletsDelegate__DelegateSignature(int32 bulletsNum);
	bool ReloadBullets();
	void PlaySoundWithOption(struct FPalDataTableRowName_SoundID& ID, struct FPalSoundOptions& Arg);
	void PlaySound(struct FPalDataTableRowName_SoundID& ID);
	void OnWeaponNotify(enum class EWeaponNotifyType Type);
	void OnStartAim();
	void OnShootBulletDelegate__DelegateSignature();
	void OnRequestClosing();
	void OnReloadStart();
	void OnReleaseTrigger();
	void OnPullTrigger();
	void OnPullCancel();
	void OnEndAim();
	void OnDetachWeaponDelegate__DelegateSignature();
	void OnDetachWeapon(class AActor* DetachActor);
	void OnCreatedBullet(class APalBullet* Bullet);
	void OnCoolDownUpdateDelegate__DelegateSignature(float RemainingTime, float CoolDownTime);
	void OnChangeTargetDirection(const struct FVector& Direction);
	void OnChangeCoolDownStateDelegate__DelegateSignature(bool IsStart);
	void OnAttachWeaponDelegate__DelegateSignature();
	void OnAttachWeapon(class AActor* AttachActor);
	bool IsUseLeftHandAttach();
	bool IsHiddenWeapon();
	bool IsFullMagazine();
	bool IsExistBulletInPlayerInventory();
	bool IsEnableAutoAim();
	bool IsEmptyMagazine();
	bool IsCoolDown();
	int32 GetWeaponEffectValue();
	enum class EPalAdditionalEffectType GetWeaponEffectType();
	int32 GetWeaponDamageFromDelegate();
	int32 GetWeaponDamageDelegate__DelegateSignature();
	int32 GetWeaponDamage();
	int32 GetWeaponBaseDamage();
	class AActor* GetWeaponAttacker();
	float GetSneakAttackRate();
	TArray<struct FPalPassiveSkillEffect> GetSkillEffectList();
	float GetShooterComponentBlurRate();
	void GetRequiredBulletName(class FName* OutName);
	float GetRemainingCoolDownTime();
	int32 GetRemainBulletCount();
	float GetRandomFloat(float Min, float Max);
	float GetParameterWithPassiveSkillEffect(float OriginalValue, enum class EPalPassiveSkillEffectType EffectType);
	class APalCharacter* GetOwnerCharacter();
	int32 GetNPCWeaponDamage();
	class USceneComponent* GetMainMesh();
	int32 GetMagazineSize();
	struct FTransform GetLeftHandTransform();
	struct FPalItemId GetItemId();
	class FName GetEquipSocketName();
	float GetDefaultBlurAngle();
	float GetBlurModifierValue();
	int32 DecrementCurrentSelectPalSphere(int32 RequestConsumeNum, class FName* UsedItemID);
	bool DecrementBullet();
	void CreatedBulletDelegate__DelegateSignature(class APalBullet* Bullet);
	void ClearWeaponSkill();
	float CalcStability();
	float CalcRange();
	float CalcDPS();
	float CalcAccuracy();
};

// 0x18 (0x550 - 0x538)
// Class Pal.PalMonsterEquipWeaponBase
class APalMonsterEquipWeaponBase : public APalWeaponBase
{
public:
	struct FVector                               BattleAimTargetLocation;                           // 0x538(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalMonsterEquipWeaponBase* GetDefaultObj();

	class APalBullet* ShootOneBulletDefault();
	class APalBullet* ShootOneBullet(TSubclassOf<class APalBullet> bulletClass, class UNiagaraSystem* MuzzleEffect, const struct FVector& MuzzleLocation, const struct FRotator& MuzzleRotate, float BulrAngle);
	struct FRotator GetMuzzleRotation();
	struct FVector GetMuzzleLocation();
	class UNiagaraSystem* GetMuzzleEffect();
	struct FVector GetCommonTargetLocation();
	float GetBulrAngle();
	TSubclassOf<class APalBullet> GetBulletClass();
};

// 0x0 (0x48 - 0x48)
// Class Pal.PalNavArea_HighObstacle
class UPalNavArea_HighObstacle : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UPalNavArea_HighObstacle* GetDefaultObj();

};

// 0x68 (0x110 - 0xA8)
// Class Pal.PalNavigationInvokerComponent
class UPalNavigationInvokerComponent : public UNavigationInvokerComponent
{
public:
	uint8                                        Pad_3866[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsAutoActivateInvoker;                            // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsWaitWorldPartition;                             // 0xB1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3867[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FIntPoint                             AreaBelongTo;                                      // 0xB4(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3868[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        IsDisableInvorkerFlag;                             // 0xC0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalNavigationInvokerComponent* GetDefaultObj();

	void SetDisableInvorkerFlag(class FName FlagName, bool IsDisable);
	bool IsDisableInvorker();
	void ActivateInvoker();
};

// 0x58 (0x1588 - 0x1530)
// Class Pal.PalNavigationSystemV1
class UPalNavigationSystemV1 : public UNavigationSystemV1
{
public:
	uint8                                        Pad_386A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UpdateInvokerCounter;                              // 0x1580(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_386B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNavigationSystemV1* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalNetArchiveObject
class UPalNetArchiveObject : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalNetArchiveObject* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkBaseCampComponent
class UPalNetworkBaseCampComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkBaseCampComponent* GetDefaultObj();

	void RequestModule_Server_void(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName);
	void RequestModule_Server_int32(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, int32 Value);
	void RequestModule_Server_FVector(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, const struct FVector& Value);
	void RequestModule_Server_FPalNetArchive(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, const struct FPalNetArchive& Value);
	void RequestModule_Server_bool(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, bool Value);
	void Request_Server_void(struct FGuid& BaseCampId, class FName FunctionName);
	void Request_Server_int32(struct FGuid& BaseCampId, class FName FunctionName, int32 Value);
	void Request_Server_FVector(struct FGuid& BaseCampId, class FName FunctionName, const struct FVector& Value);
	void Request_Server_FPalNetArchive(struct FGuid& BaseCampId, class FName FunctionName, const struct FPalNetArchive& Value);
	void Request_Server_bool(struct FGuid& BaseCampId, class FName FunctionName, bool Value);
	void NotifyModule_RequestClient_void(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName);
	void NotifyModule_RequestClient_int32(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, int32 Value);
	void NotifyModule_RequestClient_FVector(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, const struct FVector& Value);
	void NotifyModule_RequestClient_FPalNetArchive(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyModule_RequestClient_bool(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, bool Value);
	void NotifyModule_Multicast_void(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName);
	void NotifyModule_Multicast_int32(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, int32 Value);
	void NotifyModule_Multicast_FVector(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, const struct FVector& Value);
	void NotifyModule_Multicast_FPalNetArchive(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyModule_Multicast_bool(struct FGuid& BaseCampId, enum class EPalBaseCampModuleType ModuleType, class FName FunctionName, bool Value);
	void Notify_RequestClient_void(struct FGuid& BaseCampId, class FName FunctionName);
	void Notify_RequestClient_int32(struct FGuid& BaseCampId, class FName FunctionName, int32 Value);
	void Notify_RequestClient_FVector(struct FGuid& BaseCampId, class FName FunctionName, const struct FVector& Value);
	void Notify_RequestClient_FPalNetArchive(struct FGuid& BaseCampId, class FName FunctionName, const struct FPalNetArchive& Value);
	void Notify_RequestClient_bool(struct FGuid& BaseCampId, class FName FunctionName, bool Value);
	void Notify_Multicast_void(struct FGuid& BaseCampId, class FName FunctionName);
	void Notify_Multicast_int32(struct FGuid& BaseCampId, class FName FunctionName, int32 Value);
	void Notify_Multicast_FVector(struct FGuid& BaseCampId, class FName FunctionName, const struct FVector& Value);
	void Notify_Multicast_FPalNetArchive(struct FGuid& BaseCampId, class FName FunctionName, const struct FPalNetArchive& Value);
	void Notify_Multicast_bool(struct FGuid& BaseCampId, class FName FunctionName, bool Value);
	void BroadcastBaseCampWorkerLog_Server(enum class EPalLogType DisplayLogType, struct FPalInstanceID& WorkerCharacterInstanceId, class FName& EventDataID);
	void BroadcastBaseCampLog_Server(struct FPalMonsterControllerBaseCampLogContent& LogContent);
	void AddBaseCampWorkerLog_Client(enum class EPalLogType DisplayLogType, struct FPalInstanceID& WorkerCharacterInstanceId, class FName& EventDataID);
	void AddBaseCampLog_Client(struct FPalMonsterControllerBaseCampLogContent& LogContent);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkBossBattleComponent
class UPalNetworkBossBattleComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkBossBattleComponent* GetDefaultObj();

	void UnlockAchievement_ToClient(enum class EPalBossType BossType);
	void RequestBossBattleStart_ToServer(enum class EPalBossType BossType, class APalPlayerCharacter* StartPlayer);
	void RequestBossBattleStart_ToClient(bool IsSuccess, enum class EPalBossType BossType, const struct FPalStageInstanceId& StageInstanceId, TArray<class APalPlayerCharacter*>& JoinPlayers);
	void RequestBossBattleEntry_ToServer(enum class EPalBossType BossType, class APalPlayerCharacter* EntryPlayer);
	void RemovePlayerFromRoom_ToClient(enum class EPalBossType BossType, class APalPlayerCharacter* DeadPlayer);
	void NoticeSequenceEnd_ToServer(enum class EPalBossType BossType, class APalPlayerCharacter* Player);
	void CombatResult_ToClient(enum class EPalBossType BossType, enum class EPalBossBattleCombatResult CombatResult);
	void ChangeSequence_ToClient(enum class EPalBossType BossType, enum class EPalBossBattleSequenceType NextSequence);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkCharacterComponent
class UPalNetworkCharacterComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkCharacterComponent* GetDefaultObj();

	void RequestReflectAction_ToServer(class APalCharacter* Character);
	void ReflectAction_ToClient(class APalCharacter* Character, const struct FActionDynamicParameter& Param, TSubclassOf<class UPalActionBase> ActionClass);
	void NotifyTalkStart_ToServer(class APalPlayerCharacter* TalkPlayer, class APalCharacter* TargetNPC);
	void NotifyTalkEnd_ToServer(class APalPlayerCharacter* TalkPlayer, class APalCharacter* TargetNPC);
};

// 0x50 (0xF0 - 0xA0)
// Class Pal.PalNetworkCharacterContainerComponent
class UPalNetworkCharacterContainerComponent : public UActorComponent
{
public:
	TMap<struct FGuid, struct FPalNetworkCharacterContainerParameter> ContainerParamMap;                                 // 0xA0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNetworkCharacterContainerComponent* GetDefaultObj();

	void RequestUnlockSlot_ToServer(struct FGuid& RequestID, struct FPalCharacterSlotId& SlotID);
	void RequestSwap_ToServer_Rep(struct FPalCharacterSlotId& SlotIdA, struct FPalCharacterSlotId& SlotIdB);
	void RequestSortContainer_ToServer(struct FPalContainerId& ContainerId, enum class EPalCharacterContainerSortType SortType);
	void RequestEmptySlot_ToServer_Rep(struct FPalCharacterSlotId& SlotID);
	void RequestAddToContainer_ToServer_Rep(struct FPalContainerId& ContainerId, struct FPalInstanceID& IndividualId);
	void RecieveUnlockSlot_ToRequestClient(struct FGuid& RequestID, enum class EPalCharacterContainerOperationResult Result);
	void RecieveUnlockSlot_ToClient(struct FPalCharacterSlotId& SlotID);
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalNetworkCharacterStatusOperationComponent
class UPalNetworkCharacterStatusOperationComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnReceiveRequestResultDelegate;                    // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalNetworkCharacterStatusOperationComponent* GetDefaultObj();

	void RequestReviveCharacterFromDying_ToServer(class APalCharacter* Character);
	void RequestReviveCharacterFromDying(class APalCharacter* Character);
	void RequestPlayerStatusUp_ToServer(int32 ToRank);
	void RequestPlayerStatusClear_ToServer();
	void RequestPlayerRankClear();
	void RequestPlayerRankAdd(int32 ToRank);
	void RequestOtomoStatusPointClearAll_ToServer(struct FPalInstanceID& IndividualId);
	void RequestOtomoStatusPointClearAll(class UPalIndividualCharacterHandle* IndividualHandle);
	void RequestOtomoStatusPointClear_ToServer(struct FPalInstanceID& IndividualId, enum class EPalCharacterStatusOperationName StatusName);
	void RequestOtomoStatusPointClear(class UPalIndividualCharacterHandle* IndividualHandle, enum class EPalCharacterStatusOperationName StatusName);
	void RequestOtomoStatusPointAdd_ToServer(struct FPalInstanceID& IndividualId, enum class EPalCharacterStatusOperationName StatusName, int32 ToRank);
	void RequestOtomoStatusPointAdd(class UPalIndividualCharacterHandle* IndividualHandle, enum class EPalCharacterStatusOperationName StatusName, int32 ToRank);
	void ReceiveOperationResult_ToClient(enum class EPalCharacterStatusOperationResult Result);
	class UPalNetworkCharacterStatusOperationComponent* NetCharacterStatusOperation(class UObject* WorldContextObject);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalNetworkComponentUtility
class UPalNetworkComponentUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkComponentUtility* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkGroupComponent
class UPalNetworkGroupComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkGroupComponent* GetDefaultObj();

	void RequestJoinGuildRequestForPlayer_ToServer(struct FGuid& RequestPlayerUId, struct FGuid& TargetPlayerUId);
	void RequestJoinGuildForPlayer_ToServer(struct FGuid& RequestPlayerUId, struct FGuid& TargetPlayerUId);
	void RequestExitGuild_ToServer(struct FGuid& TargetPlayerUId);
	void RequestChangeGuildName_ToServer(struct FGuid& GroupID, const class FString& NewGuildName);
	void RequestChangeGuildAdmin_ToServer(struct FGuid& RequestPlayerUId, struct FGuid& TargetPlayerUId);
	void NotifyJoinGuildRequestResult_ToServer(struct FGuid& RequestPlayerUId, struct FGuid& NotifyTargetPlayerUId, enum class EPalGuildJoinRequestResult ResultType);
};

// 0x168 (0x208 - 0xA0)
// Class Pal.PalNetworkIndividualComponent
class UPalNetworkIndividualComponent : public UActorComponent
{
public:
	uint8                                        Pad_3942[0x168];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNetworkIndividualComponent* GetDefaultObj();

	void UpdateCharacterParameter_ToServer(struct FPalInstanceID& ID, struct FPalNetArchive& ParameterArchive, const struct FGuid& Guid);
	void UpdateCharacterParameter_ToAll(struct FPalInstanceID& ID, struct FPalNetArchive& ParameterArchive, const struct FGuid& Guid);
	void UpdateCharacterNickName_ToServer(struct FPalInstanceID& ID, const class FString& NewNickName);
	void SpawnPhantomActor_ToServer(const struct FPalInstanceID& ID, const struct FNetworkActorSpawnParameters& SpawnParameter, const struct FGuid& Guid);
	void SpawnPhantomActor_ToALL(const struct FPalInstanceID& ID, int32 PhantomId, class AActor* Actor, const struct FGuid& Guid);
	void SpawnPhantomActor_SyncCheck(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void SpawnIndividualActor_ToServer(const struct FPalInstanceID& ID, const struct FNetworkActorSpawnParameters& SpawnParameter, const struct FGuid& Guid);
	void SpawnIndividualActor_ToALL(const struct FPalInstanceID& ID, class AActor* Actor, const struct FGuid& Guid);
	void SpawnIndividualActor_SyncCheck(const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void SetWorkerSick_ToServer(struct FPalInstanceID& ID, enum class EPalBaseCampWorkerSickType SickType);
	void ResetStatusPoint_ToServer(struct FPalInstanceID& ID);
	void ReplaceEquipWaza_ToServer(struct FPalInstanceID& ID, enum class EPalWazaID OldWaza, enum class EPalWazaID NewWaza);
	void RemoveHighPriorityList_ToServer(struct FPalInstanceID& ID, class APalCharacter* TargetPlayer);
	void RemoveEquipWaza_ToServer(struct FPalInstanceID& ID, enum class EPalWazaID TargetWaza);
	void RaiseToMainActor_ToServer(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void RaiseToMainActor_ToALL(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void EatItem_ToServer(struct FPalInstanceID& ID, class UPalStaticConsumeItemData* ItemData, int32 Num);
	void DropToPhantomActor_ToServer(const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void DropToPhantomActor_ToALL(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void DespawnPhantomActor_ToServer(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void DespawnPhantomActor_ToALL(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void DespawnPhantomActor_SyncCheck(const struct FPalInstanceID& ID, int32 PhantomId, const struct FGuid& Guid);
	void DespawnIndividualActor_ToServer(const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void DespawnIndividualActor_ToALL(const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void DespawnIndividualActor_SyncCheck(const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void CreateIndividualID_ToServer(const struct FPalIndividualCharacterSaveParameter& InitParameter, const struct FGuid& Guid, int32 RequestPlayerId);
	void CreateIndividualID_ToALL(const struct FPalIndividualCharacterSaveParameter& InitParameter, const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void CreateIndividualID_SyncCheck(const struct FPalInstanceID& ID, const struct FGuid& Guid);
	void CreateFixedIndividualID_ToServer(const struct FPalInstanceID& ID, const struct FPalIndividualCharacterSaveParameter& InitParameter, const struct FGuid& Guid, int32 RequestPlayerId);
	void BroadcastChangeOwnerCharacter_ToAll(const struct FPalInstanceID& ID, struct FGuid& PlayerUId, const struct FDateTime& OwnedTime);
	void AddPlayerCharacterStatusPoint_ToServer(struct FPalInstanceID& ID, TArray<struct FPalGotStatusPoint>& AddStatusPointArray);
	void AddMasteredWaza_ToServer(struct FPalInstanceID& ID, enum class EPalWazaID WazaID);
	void AddHighPriorityList_ToServer(struct FPalInstanceID& ID, class APalCharacter* TargetPlayer);
	void AddEquipWaza_ToServer(struct FPalInstanceID& ID, enum class EPalWazaID NewWaza);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkInvaderComponent
class UPalNetworkInvaderComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkInvaderComponent* GetDefaultObj();

	void OnInvaderStart(struct FPalIncidentBroadcastParameter& Parameter);
	void OnInvaderEnd(struct FPalIncidentBroadcastParameter& Parameter);
	void OnInvaderArrived(struct FPalIncidentBroadcastParameter& Parameter);
};

// 0x140 (0x1E0 - 0xA0)
// Class Pal.PalNetworkItemComponent
class UPalNetworkItemComponent : public UActorComponent
{
public:
	TMap<struct FGuid, struct FPalNetworkDynamicItemParameter> DynamicItemParamMap;                               // 0xA0(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FPalNetworkContainerParameter> ContainerParamMap;                                 // 0xF0(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FPalNetworkItemOperationParameter> ItemOperationParamMap;                             // 0x140(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FPalNetworkParameter> OperationParamMap;                                 // 0x190(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNetworkItemComponent* GetDefaultObj();

	void RequestSwap_ToServer(struct FGuid& RequestID, struct FPalItemAndSlot& SlotA, struct FPalItemPermission& APermission, struct FPalItemAndSlot& SlotB, struct FPalItemPermission& BPermission);
	void RequestProduceWithSlot_ToServer(struct FGuid& RequestID, struct FPalStaticItemIdAndNum& ProductData, struct FPalItemAndSlot& To, struct FPalNetArchive& CreateParamArchive);
	void RequestProduce_ToServer(struct FGuid& RequestID, struct FPalStaticItemIdAndNum& ProductData, struct FPalContainerId& ContainerId, struct FPalNetArchive& CreateParamArchive);
	void RequestMoveToContainer_ToServer(struct FGuid& RequestID, struct FPalItemId& ItemId, struct FPalContainerId& ToContainerId, struct FPalItemPermission& ToPermission, TArray<struct FPalSlotItemAndNum>& Froms);
	void RequestMove_ToServer(struct FGuid& RequestID, struct FPalItemId& ItemId, struct FPalItemAndSlot& To, struct FPalItemPermission& ToPermission, TArray<struct FPalSlotItemAndNum>& Froms);
	void RequestDrop_ToServer(TArray<struct FPalItemSlotIdAndNum>& DropSlotAndNumArray, struct FVector& DropLocation, bool IsAutoPickup);
	void RequestDispose_ToServer(struct FGuid& RequestID, struct FPalSlotItemAndNum& SlotInfo);
	void ReceiveProduceWithSlotResult_ToRequestClient(struct FGuid& RequestID, enum class EPalItemOperationResult Result);
	void ReceiveProduceResult_ToRequestClient(struct FGuid& RequestID, enum class EPalItemOperationResult Result);
};

// 0xA0 (0x140 - 0xA0)
// Class Pal.PalNetworkMapObjectComponent
class UPalNetworkMapObjectComponent : public UActorComponent
{
public:
	TMap<struct FGuid, struct FPalNetworkMapObjectSpawnRequestParameter> MapObjectSpawnRequestParameterMap;                 // 0xA0(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalMapObjectSpawnRequestHandler*> SpawnRequestHandlerMap;                            // 0xF0(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNetworkMapObjectComponent* GetDefaultObj();

	void RequestSpawnMapObject_ToServer(struct FGuid& RequestID, class FName MapObjectId, struct FVector& Location, struct FQuat& Rotation, TArray<struct FPalNetArchive>& ExtraParameterArchives);
	void RequestRepair_ToServer(struct FGuid& InstanceId);
	void RequestDismantleObject_ToServer(struct FGuid& InstanceId);
	void RequestDamageMapObjectSpawner_ToServer(class APalMapObjectSpawnerBase* TargetSpawnerActor, struct FPalDamageInfo& DamageInfo);
	void RequestDamageMapObject_ToServer(struct FGuid& InstanceId, struct FPalDamageInfo& Info);
	void RequestDamageFoliage_ToServer(struct FPalCellCoord& CellCoord, class FName ModelId, TArray<struct FPalFoliageInstanceId>& InstanceIds, struct FPalDamageInfo& DamageInfo);
	void RequestConcreteModelModule_Server_void(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName);
	void RequestConcreteModelModule_Server_int32(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, int32 Value);
	void RequestConcreteModelModule_Server_FVector(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, const struct FVector& Value);
	void RequestConcreteModelModule_Server_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, const struct FPalNetArchive& Value);
	void RequestConcreteModelModule_Server_bool(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, bool Value);
	void RequestConcreteModel_void(struct FGuid& ConcreteModelInstanceId, class FName FunctionName);
	void RequestConcreteModel_Server_void(struct FGuid& ConcreteModelInstanceId, class FName FunctionName);
	void RequestConcreteModel_Server_int32(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, int32 Value);
	void RequestConcreteModel_Server_FVector(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FVector& Value);
	void RequestConcreteModel_Server_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FPalNetArchive& Value);
	void RequestConcreteModel_Server_bool(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, bool Value);
	void RequestConcreteModel_int32(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, int32 Value);
	void RequestConcreteModel_FVector(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FVector& Value);
	void RequestConcreteModel_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FPalNetArchive& Value);
	void RequestConcreteModel_bool(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, bool Value);
	void RequestBuildCancel_ToServer(struct FGuid& InstanceId);
	void RecieveDestroyMapObject_Multicast(struct FGuid& InstanceId);
	void RecieveDamageMapObject_ToClient(struct FGuid& InstanceId, struct FPalDamageInfo& Info, int32 DamagedHp);
	void ReceiveUpdateHp_ToClient(struct FGuid& InstanceId, int32 UpdatedHp);
	void ReceiveDismantleObjectResult_ToClient(enum class EPalMapObjectOperationResult Result, struct FGuid& InstanceId);
	void NotifyReceivePickupResultSuccess_ToClient(struct FPalNetArchive& PickupItemArchive, class UPalMapObjectPickableItemModelBase* Model, bool IsAllPickup);
	void NotifyReceivePickupResultFailed_ToClient(class UPalMapObjectPickableItemModelBase* Model);
	void NotifyConcreteModelModule_RequestClient_void(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName);
	void NotifyConcreteModelModule_RequestClient_int32(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, int32 Value);
	void NotifyConcreteModelModule_RequestClient_FVector(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, const struct FVector& Value);
	void NotifyConcreteModelModule_RequestClient_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyConcreteModelModule_RequestClient_bool(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, bool Value);
	void NotifyConcreteModelModule_Multicast_void(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName);
	void NotifyConcreteModelModule_Multicast_int32(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, int32 Value);
	void NotifyConcreteModelModule_Multicast_FVector(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, const struct FVector& Value);
	void NotifyConcreteModelModule_Multicast_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyConcreteModelModule_Multicast_bool(struct FGuid& ConcreteModelInstanceId, enum class EPalMapObjectConcreteModelModuleType ModuleType, class FName FunctionName, bool Value);
	void NotifyConcreteModel_ToRequestClient_void(struct FGuid& ConcreteModelInstanceId, int32 RequestPlayerId, class FName FunctionName);
	void NotifyConcreteModel_ToRequestClient_int32(struct FGuid& ConcreteModelInstanceId, int32 RequestPlayerId, class FName FunctionName, int32 Value);
	void NotifyConcreteModel_ToRequestClient_FVector(struct FGuid& ConcreteModelInstanceId, int32 RequestPlayerId, class FName FunctionName, const struct FVector& Value);
	void NotifyConcreteModel_ToRequestClient_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, int32 RequestPlayerId, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyConcreteModel_ToRequestClient_bool(struct FGuid& ConcreteModelInstanceId, int32 RequestPlayerId, class FName FunctionName, bool Value);
	void NotifyConcreteModel_ToMulticast_void(struct FGuid& ConcreteModelInstanceId, class FName FunctionName);
	void NotifyConcreteModel_ToMulticast_int32(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, int32 Value);
	void NotifyConcreteModel_ToMulticast_FVector(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FVector& Value);
	void NotifyConcreteModel_ToMulticast_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyConcreteModel_ToMulticast_bool(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, bool Value);
	void NotifyConcreteModel_RequestClient_void(struct FGuid& ConcreteModelInstanceId, class FName FunctionName);
	void NotifyConcreteModel_RequestClient_int32(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, int32 Value);
	void NotifyConcreteModel_RequestClient_FVector(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FVector& Value);
	void NotifyConcreteModel_RequestClient_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyConcreteModel_RequestClient_bool(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, bool Value);
	void NotifyConcreteModel_Multicast_void(struct FGuid& ConcreteModelInstanceId, class FName FunctionName);
	void NotifyConcreteModel_Multicast_int32(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, int32 Value);
	void NotifyConcreteModel_Multicast_FVector(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FVector& Value);
	void NotifyConcreteModel_Multicast_FPalNetArchive(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, const struct FPalNetArchive& Value);
	void NotifyConcreteModel_Multicast_bool(struct FGuid& ConcreteModelInstanceId, class FName FunctionName, bool Value);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkMulticastGateComponent
class UPalNetworkMulticastGateComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkMulticastGateComponent* GetDefaultObj();

	void SendToServer_void(int32 ID, class UObject* Instance, class FName FunctionName);
	void SendToServer_object(int32 ID, class UObject* Instance, class FName FunctionName, class UObject* Value);
	void SendToServer_int32(int32 ID, class UObject* Instance, class FName FunctionName, int32 Value);
	void SendToServer_FVector(int32 ID, class UObject* Instance, class FName FunctionName, const struct FVector& Value);
	void SendToServer_FPalNetArchive(int32 ID, class UObject* Instance, class FName FunctionName, const struct FPalNetArchive& Value);
	void SendToServer_FPalInstanceID(int32 ID, class UObject* Instance, class FName FunctionName, const struct FPalInstanceID& Value);
	void SendToServer_float(int32 ID, class UObject* Instance, class FName FunctionName, float Value);
	void SendToServer_FGuid(int32 ID, class UObject* Instance, class FName FunctionName, const struct FGuid& Value);
	void SendToServer_bool(int32 ID, class UObject* Instance, class FName FunctionName, bool Value);
	void SendToALL_void(int32 ID, class UObject* Instance, class FName FunctionName);
	void SendToALL_object(int32 ID, class UObject* Instance, class FName FunctionName, class UObject* Value);
	void SendToALL_int32(int32 ID, class UObject* Instance, class FName FunctionName, int32 Value);
	void SendToALL_FVector(int32 ID, class UObject* Instance, class FName FunctionName, const struct FVector& Value);
	void SendToALL_FPalNetArchive(int32 ID, class UObject* Instance, class FName FunctionName, const struct FPalNetArchive& Value);
	void SendToALL_FPalInstanceID(int32 ID, class UObject* Instance, class FName FunctionName, const struct FPalInstanceID& Value);
	void SendToALL_float(int32 ID, class UObject* Instance, class FName FunctionName, float Value);
	void SendToALL_FGuid(int32 ID, class UObject* Instance, class FName FunctionName, const struct FGuid& Value);
	void SendToALL_bool(int32 ID, class UObject* Instance, class FName FunctionName, bool Value);
	void SendInternal_void(class UObject* Instance, class FName FunctionName);
	void SendInternal_object(class UObject* Instance, class FName FunctionName, class UObject* Value);
	void SendInternal_int32(class UObject* Instance, class FName FunctionName, int32 Value);
	void SendInternal_FVector(class UObject* Instance, class FName FunctionName, const struct FVector& Value);
	void SendInternal_FPalNetArchive(class UObject* Instance, class FName FunctionName, const struct FPalNetArchive& Value);
	void SendInternal_FPalInstanceID(class UObject* Instance, class FName FunctionName, const struct FPalInstanceID& Value);
	void SendInternal_float(class UObject* Instance, class FName FunctionName, float Value);
	void SendInternal_FGuid(class UObject* Instance, class FName FunctionName, const struct FGuid& Value);
	void SendInternal_bool(class UObject* Instance, class FName FunctionName, bool Value);
	void Send_void(class UObject* Instance, class FName FunctionName);
	void Send_object(class UObject* Instance, class FName FunctionName, class UObject* Value);
	void Send_int32(class UObject* Instance, class FName FunctionName, int32 Value);
	void Send_FVector(class UObject* Instance, class FName FunctionName, const struct FVector& Value);
	void Send_FPalNetArchive(class UObject* Instance, class FName FunctionName, const struct FPalNetArchive& Value);
	void Send_FPalInstanceID(class UObject* Instance, class FName FunctionName, const struct FPalInstanceID& Value);
	void Send_float(class UObject* Instance, class FName FunctionName, float Value);
	void Send_FGuid(class UObject* Instance, class FName FunctionName, const struct FGuid& Value);
	void Send_bool(class UObject* Instance, class FName FunctionName, bool Value);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkPlayerComponent
class UPalNetworkPlayerComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkPlayerComponent* GetDefaultObj();

	void ShowBossDefeatRewardUI_ToClient(int32 TechPoint, bool AfterTeleport, int32 DelayTime);
	void SetCurrentSelectPalSphereIndex_ToServer(int32 NextIndex, class UPalLoadoutSelectorComponent* LoadoutSelector);
	void RequestUnlockTechnology_ToServer(class FName& UnlockTechnologyName);
	void RequestTrashItemFromInventoryDropSlot_ToServer();
	void RequestSortInventory_ToServer();
	void RequestMoveItemToInventoryFromSlot(class UPalItemSlot* FromSlot, bool IsTryEquip);
	void RequestMoveItemToInventoryFromContainer(class UPalItemContainer* FromContainer, bool IsTryEquip);
	void RequestExitStage_ToServer();
	void RequestEnterStage_ToServer(struct FPalStageInstanceId& StageInstanceId);
	void RequestDropOtomoPal_ToServer(int32 OtomoIndex);
	void RequestDropItemFromInventoryDropSlot_ToServer();
	void RequestChangeVoiceID_ToServer(int32 NewVoiceID);
	void RequestAddTechnolgyPointByItem_ToServer(struct FPalItemSlotId& ConsumeItemSlotID);
	void RequestAddTechnolgyPoint_ToServer(int32 AddPoint);
	void RequestAddItem_ToServer(class FName StaticItemId, int32 Count, bool IsAssignPassive);
	void RegisterRespawnLocation_ToServer(struct FGuid& PlayerUId, struct FVector& Location);
	void ReceiveExitStageRequestResult_ToRequestClient(enum class EPalStageRequestResult Result);
	void ReceiveEnterStageRequestResult_ToRequestClient(struct FPalStageInstanceId& StageInstanceId, enum class EPalStageRequestResult Result);
	void NotifyStartCrime_ToClient(const struct FGuid& CrimeInstanceId);
	void NotifyReportCriminal_ToClient(class UPalIndividualCharacterHandle* CriminalHandle, TArray<class FName>& CrimeIds);
	void NotifyReleaseWanted_ToClient(class UPalIndividualCharacterHandle* CriminalHandle);
	void NotifyEndCrime_ToClient(const struct FGuid& CrimeInstanceId);
	void LoadoutSelectorRemoveEquipItem(class UPalLoadoutSelectorComponent* LoadoutSelector);
	void LoadoutSelectorEquipItem(class UPalLoadoutSelectorComponent* LoadoutSelector, enum class EPalPlayerInventoryType InventoryType, int32 Index);
	void Dev_RequestTeleportToDungeonEntranceByIndex_ToServer(int32 Index);
	void Dev_RequestTeleportToDungeonEntranceByDataLayer_ToServer(class FName DataLayerName);
	void Dev_RequestTeleportToCurrentDungeonTreasureBox_ToServer();
	void Dev_RequestTeleportToCurrentDungeonGoal_ToServer();
	void Dev_RequestTeleportToBossTower_ToServer(enum class EPalBossType BossType);
};

// 0x50 (0xF0 - 0xA0)
// Class Pal.PalNetworkPlayerStateComponent
class UPalNetworkPlayerStateComponent : public UActorComponent
{
public:
	TMap<struct FGuid, struct FPalNetworkPlayerObtainClientParameter> ObtainClientParamMap;                              // 0xA0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNetworkPlayerStateComponent* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkShopComponent
class UPalNetworkShopComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkShopComponent* GetDefaultObj();

	void SetupShopDataForActor_ToServer(class AActor* VenderActor);
	void RequestSellPals_ToServer(struct FGuid& RequestPlayerUId, struct FGuid& ShopID, TArray<struct FPalCharacterSlotId>& SellPalSlotIDArray);
	void RequestSellItems_ToServer(struct FGuid& RequestPlayerUId, struct FGuid& ShopID, TArray<struct FPalItemSlotIdAndNum>& SellItemSlotIDArray);
	void RequestCollectDroppedPalProductData(struct FGuid& RequestPlayerUId, int32 MaxCollectNum);
	void RequestBuyProduct_ToServer(struct FPalInstanceID& RequestPlayerInstanceId, struct FGuid& ShopID, struct FGuid& ProductId, int32 BuyNum);
	void RequestBuyLostPal_ToServer(struct FGuid& RequestPlayerUId, struct FPalCharacterStoredParameterId& StoredParameterId);
	void RemoveShopData_ToServer(struct FGuid& RemoveShopID);
	void RecieveBuyResult_ToClient(enum class EPalShopBuyResultType ResultType);
	void ReceiveDroppedPalProductData_ToClient(TArray<struct FPalDroppedPalProductDataForShop>& CollectedData);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkTimeComponent
class UPalNetworkTimeComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkTimeComponent* GetDefaultObj();

	void PreNightSkip_ToClient();
	void NightSkip_ToClient();
};

// 0xD8 (0x368 - 0x290)
// Class Pal.PalNetworkTransmitter
class APalNetworkTransmitter : public AActor
{
public:
	uint8                                        Pad_3A16[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalNetworkMapObjectComponent*         MapObject;                                         // 0x2E0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkItemComponent*              Item;                                              // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkBaseCampComponent*          BaseCamp;                                          // 0x2F0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkCharacterContainerComponent* CharacterContainer;                                // 0x2F8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkGroupComponent*             Group;                                             // 0x300(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkPlayerComponent*            Player;                                            // 0x308(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkCharacterComponent*         Character;                                         // 0x310(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkWorkProgressComponent*      WorkProgress;                                      // 0x318(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkWorldSecurityComponent*     WorldSecurity;                                     // 0x320(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkBossBattleComponent*        BossBattle;                                        // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkTimeComponent*              Time;                                              // 0x330(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkShopComponent*              Shop;                                              // 0x338(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkInvaderComponent*           Invader;                                           // 0x340(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkCharacterStatusOperationComponent* CharacterStatusOperation;                          // 0x348(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalNetworkIndividualComponent*        NetworkIndividualComponent;                        // 0x350(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPalNetworkTransmitterDelaySpawnInfo> DelayDelegateCallQueue;                            // 0x358(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalNetworkTransmitter* GetDefaultObj();

	struct FGuid SpawnReliableActorBroadcast(class UClass* ActorClass, const struct FNetworkActorSpawnParameters& SpawnParameter, FDelegateProperty_ SpawnDelegate);
	struct FGuid SpawnNonReliableActorBroadcast(class UClass* ActorClass, const struct FNetworkActorSpawnParameters& SpawnParameter, FDelegateProperty_ SpawnDelegate);
	void SpawnNonReliableActor_ToServer(class UClass* ActorClass, const struct FNetworkActorSpawnParameters& SpawnParameter, int32 IssuerID);
	void SpawnedNonReliableActor_ToALL(class UClass* ActorClass, const struct FNetworkActorSpawnParameters& SpawnParameter, int32 IssuerID);
	void SpawnedActor_ToALL(class AActor* SpawnedActor, class AActor* SpawnedController, const struct FNetworkActorSpawnParameters& SpawnParameter, const struct FGuid& Guid);
	struct FGuid SpawnActorBroadcast(class UClass* ActorClass, const struct FNetworkActorSpawnParameters& SpawnParameter, FDelegateProperty_ SpawnDelegate);
	void SpawnActor_ToServer(class UClass* ActorClass, const struct FNetworkActorSpawnParameters& SpawnParameter, const struct FGuid& Guid);
	void SetupBroadcast_FromServer();
	class UPalNetworkWorldSecurityComponent* GetWorldSecurity();
	class UPalNetworkWorkProgressComponent* GetWorkProgress();
	class UPalNetworkTimeComponent* GetTime();
	class UPalNetworkShopComponent* GetShop();
	class UPalNetworkPlayerComponent* GetPlayer();
	class UPalNetworkMapObjectComponent* GetMapObject();
	class UPalNetworkItemComponent* GetItem();
	class UPalNetworkInvaderComponent* GetInvader();
	class UPalNetworkGroupComponent* GetGroup();
	class UPalNetworkCharacterStatusOperationComponent* GetCharacterStatusOperation();
	class UPalNetworkCharacterContainerComponent* GetCharacterContainer();
	class UPalNetworkCharacterComponent* GetCharacter();
	class UPalNetworkBossBattleComponent* GetBossBattle();
	class UPalNetworkBaseCampComponent* GetBaseCamp();
	void DummyReliableFunction();
	void Debug_RequestLogTreasureBoxLocalPlayerAround_ToServer();
	void Debug_ReceiveLogTreasureBoxLocalPlayerAround_ToRequestPlayer(const class FString& Message);
};

// 0x50 (0xF0 - 0xA0)
// Class Pal.PalNetworkWorkProgressComponent
class UPalNetworkWorkProgressComponent : public UActorComponent
{
public:
	uint8                                        Pad_3A1C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNetworkWorkProgressComponent* GetDefaultObj();

	void RequestStartPlayerWork_ToServer(struct FGuid& RequestID, struct FGuid& WorkProgressId);
	void RequestEndPlayerWork_ToServer(struct FGuid& WorkId);
	void ReceiveStartPlayerWork_ToRequestClient(struct FGuid& RequestID, enum class EPalWorkRequestResult Result);
	void AddCompleteBuildWorkLog(struct FPalNetArchive& Archive);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalNetworkWorldSecurityComponent
class UPalNetworkWorldSecurityComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalNetworkWorldSecurityComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalNiagaraSoundStopInterface
class IPalNiagaraSoundStopInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalNiagaraSoundStopInterface* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Pal.PalNiagaraDataInterfaceSoundPlayer
class UPalNiagaraDataInterfaceSoundPlayer : public UNiagaraDataInterface
{
public:
	class UAkAudioEvent*                         AkEvent;                                           // 0x38(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutDuration;                                   // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A22[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNiagaraDataInterfaceSoundPlayer* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Pal.PalNoteData
class UPalNoteData : public UObject
{
public:
	class FName                                  TextId_Description;                                // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             Texture;                                           // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalNoteData* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Pal.PalNoteDataAsset
class UPalNoteDataAsset : public UDataAsset
{
public:
	TMap<class FName, class UPalNoteData*>       NoteDataMap;                                       // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalNoteDataAsset* GetDefaultObj();

	class UPalNoteData* Find(class FName ID);
};

// 0xB8 (0xE0 - 0x28)
// Class Pal.PalNPCAIWeaponHandle
class UPalNPCAIWeaponHandle : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnInitializeEnd;                                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<enum class EPalWeaponType, struct FPalNPCWeaponCombatInfo> CombatAIParamMap;                                  // 0x38(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AActor*                                ShooterHuman;                                      // 0x88(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3A43[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNPCAIWeaponHandle* GetDefaultObj();

	void UnequipWeapon();
	void TerminateNPCWeapon();
	void ShootOneBullet();
	void ShootBurstBullet(float PullSecond);
	void ReleaseTrigger();
	void OnInitializeEnd__DelegateSignature();
	bool IsTargetInConeShap();
	bool IsNear_NearRange(class AActor* TargetActor, float NearRangePlusOffset);
	bool IsNear_FarRange(class AActor* TargetActor, float FarRangePlusOffset);
	bool IsMagazineEmpty();
	bool IsEndInitialize();
	void InitializeNPCWeapon(class APalWeaponBase* WeaponActor);
	bool GetUseSideDashMovement();
	float GetShootInterval();
	int32 GetRemainingBullet();
	float GetReloadTime();
	float GetRandomMoveTimeMin();
	int32 GetMaxShootCount();
	bool GetIsMeleeAttackWithGun();
	TSubclassOf<class UPalStateMachineStateBase> GetFireStateClass();
	TSubclassOf<class UPalAIActionBase> GetCombatClass();
	void FullReload();
	void EquipWeapon();
	void DecreaseBullet();
	void AimToTarget(class AActor* TargetActor, bool Aim, float DeltaTime);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalNPCCampSpawnerBase
class APalNPCCampSpawnerBase : public AActor
{
public:
	class FName                                  CampSpawnerName;                                   // 0x290(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalNPCCampSpawnerBase* GetDefaultObj();

	float CalcRemainRespawnTime(struct FPalEnemyCampStatus& CampStatus);
	float CalcRemainDespawnTime(struct FPalEnemyCampStatus& CampStatus);
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalNPCInteractCondition
class UPalNPCInteractCondition : public UObject
{
public:
	uint8                                        Pad_3A53[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNPCInteractCondition* GetDefaultObj();

	void SetResult(bool bResult);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalNPCInteractConditionFunctions
class UPalNPCInteractConditionFunctions : public UObject
{
public:
	class UObject*                               Owner;                                             // 0x28(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalNPCInteractConditionFunctions* GetDefaultObj();

	void SetOwner(class UObject* Owner);
	class UObject* GetOwner();
};

// 0xD8 (0x178 - 0xA0)
// Class Pal.PalNPCInteractionComponent
class UPalNPCInteractionComponent : public UActorComponent
{
public:
	uint8                                        Pad_3A56[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            NPCInteractionDataTable;                           // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            NPCInteractConditionConstValDataTable;             // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalNPCInteractConditionFunctions> ConditionFunctionClass;                            // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A57[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, enum class EPalIncidentTalkType> TalkTypeMap;                                       // 0xD0(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	TMap<class FName, class UPalNPCInteractCondition*> InteractConditions;                                // 0x120(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	class UPalNPCInteractConditionFunctions*     ConditionFunctions;                                // 0x170(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNPCInteractionComponent* GetDefaultObj();

	void OnTriggerInteract(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void Initialize();
	void EndTalk(class APalPlayerCharacter* TalkPlayer);
	void DebugInteractConditionString(const class FString& TestText);
	void BeginPlay();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalNPCInteractionDataTableUtility
class UPalNPCInteractionDataTableUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalNPCInteractionDataTableUtility* GetDefaultObj();

	void GetJSONStringByInteractionDataTable(class FString* OutString, TMap<class FName, struct FPalNPCInteractionDataTableRow>& DataRows);
};

// 0x218 (0x240 - 0x28)
// Class Pal.PalNPCManager
class UPalNPCManager : public UObject
{
public:
	uint8                                        Pad_3A65[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavigationQueryFilter>    AIOnNavMeshFilterClass;                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UPalIndividualCharacterHandle*, FDelegateProperty_> CallbackMap;                                       // 0x38(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UPalIndividualCharacterHandle*, struct FPalNPCSpawnInfo> SpawnInfoMap;                                      // 0x88(0x50)(Transient, NativeAccessSpecifierPrivate)
	class UPalWildPalDrinkWaterSpotProvider*     DrinkWaterSpotProvider;                            // 0xD8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, bool>                      RespawnDisableFlag;                                // 0xE0(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3A67[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalAIController>          NPCAIControllerBaseClass;                          // 0x180(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            UniqueNPCDataTable;                                // 0x188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            NPCOneTalkDataTable;                               // 0x190(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            NPCMultiTalkDataTable;                             // 0x198(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPalNPCTalkUIType, class UDataTable*> TalkDataTableMap;                                  // 0x1A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, enum class EPalNPCTalkUIType> NPCNameTalkTypeMap;                                // 0x1F0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalNPCManager* GetDefaultObj();

	void SpawNPCCallback(const struct FPalInstanceID& ID);
	class UPalIndividualCharacterHandle* SpawnNPCForServer(const struct FPalNPCSpawnInfo& SpawnInfo, FDelegateProperty_ SpawnCallback);
	void SetEnemyCampStatus(class FName KeyName, const struct FPalEnemyCampStatus& EnemyCampStatus);
	void RemoveGroupWhenDestoryActor(class AActor* DestoryActor);
	void NPCSpawnCallback__DelegateSignature(const struct FPalInstanceID& ID);
	bool IsTalkable(class APalCharacter* Character);
	enum class EPalNPCTalkUIType GetTalkUIType(class APalCharacter* Character);
	class UDataTable* GetNPCTalkDTFromTalkUIType(enum class EPalNPCTalkUIType TalkUIType);
	class UDataTable* GetNPCOneTalkDTFromTalkId(class FName TalkId);
	class UDataTable* GetNPCOneTalkDTFromCharacter(class APalCharacter* Character);
	TSubclassOf<class UPalNPCMultiTalkHandle> GetNPCMultiTalkClassFromTalkId(class FName TalkId);
	TSubclassOf<class UPalNPCMultiTalkHandle> GetNPCMultiTalkClass(class APalCharacter* Character);
	class UDataTable* GetNPCCharacterTalkDT(class FName CharacterID);
	struct FPalEnemyCampStatus GetEnemyCampStatus(class FName KeyName);
	class UPalWildPalDrinkWaterSpotProvider* GetDrinkWaterSpotProvider();
	class FName GetCharacterIDFromCharacterIDAndUniqueNPCID(class FName CharacterID, class FName UniqueNPCID);
	void AllResetBossRespawnFlag();
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalNPCMultiTalkHandle
class UPalNPCMultiTalkHandle : public UObject
{
public:
	class FName                                  TalkId;                                            // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNPCMultiTalkHandle* GetDefaultObj();

	void OnFinishOneTalk();
	void IncrementTalkCountRecord();
	class FName GetTalkId();
	class UDataTable* GetTalkData(class FName& InTalkID);
	class UPalPlayerDataStorage* GetPlayerDataStorage();
	class UPalPlayerLocalRecordData* GetLocalRecordData();
	int32 GetCurrentTalkCount();
};

// 0xD8 (0x368 - 0x290)
// Class Pal.PalNPCSpawnerBase
class APalNPCSpawnerBase : public AActor
{
public:
	bool                                         bIsRunOnAnyThread;                                 // 0x290(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Ignore_DebugSettingDisable;                        // 0x291(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Ignore_DistanceLocationReset;                      // 0x292(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Ignore_FarCheck;                                   // 0x293(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDoSpawnedTick;                                    // 0x294(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalSpawnRadiusType               SpawnRadiusType;                                   // 0x295(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsSquadBehaviour;                                  // 0x296(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3A85[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DebugOrganizationName;                             // 0x298(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocationResetDistance_SpawnerToCharacterTooFar;    // 0x2A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocationResetHeight_SpawnerToCharacterTooLow;      // 0x2AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GroupName;                                         // 0x2B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalNavigationInvokerComponent*        NavInvokerComponent;                               // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       NPCLocations;                                      // 0x2C8(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnCreatedGroupDelegate;                            // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3A87[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 WildGroupGuid;                                     // 0x2F8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalSquad*                             Squad;                                             // 0x308(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DisableSpawn;                                      // 0x310(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	enum class EPalSpwnerImportanceType          ImportanceType;                                    // 0x360(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3A88[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalNPCSpawnerBase* GetDefaultObj();

	void Tick_Spawning(float DeltaTime);
	void Tick_Spawned(float DeltaTime);
	void Tick_Despawning(float DeltaTime);
	void SpawnRequest_ByOutside(bool IsDeleteAliveCharacter);
	void SetSpawnedFlag(bool IsSpawned);
	void SetSpawnDisableFlag(class FName& Name, bool IsDisable);
	void SetDisableBossSpawner_ToSaveData(class FName KeyName);
	void SetCheckRadius(float SpawnRadius, float DespawnRadius);
	void SetAllNPCLocation();
	void RequestCreateGroup(const TArray<class FName>& CharacterIDList);
	void Request_TickSpawningForGameThread(float DeltaTime);
	void Request_TickSpawnedForGameThread(float DeltaTime);
	void Request_TickDespawningForGameThread(float DeltaTime);
	void RemoveGroupWhenDestoryActor(class AActor* DestoryActor);
	void RemoveGroupCharacter(class UPalIndividualCharacterHandle* RemoveIndividualHandle);
	bool RandomSpawnLocationByRadiusLineTraceWithWorldLocation(struct FVector* OutLocation, float Radius, float RayStartUpOffset, float RayEndDownOffset, struct FVector& WorldPos, int32 SumSpawnNum, int32 SelfIndexInAll);
	bool RandomSpawnLocationByRadiusLineTrace(struct FVector* OutLocation, float Radius, float RayStartUpOffset, float RayEndDownOffset, int32 SumSpawnNum, int32 SelfIndexInAll);
	void ProcessBossDefeatInfo_ServerInternal(class AActor* BossActor, class FName SpawnerName);
	void PathWalkNameSort(const TArray<class UObject*>& WalkPoint, TArray<class UObject*>* OutSortedWalkPoint);
	void OnInitialized();
	bool IsSuppressedByRandomIncident();
	bool IsSpawned();
	bool IsSpawnDisable();
	bool IsNearBaseCamp();
	float GetSpawnRadiusCM();
	float GetSpawnPointRadius();
	int32 GetSpawnNumRandom_OneTribe(const struct FPalSpawnerOneTribeInfo& Info);
	int32 GetSpawnLevelRandom_OneTribe(const struct FPalSpawnerOneTribeInfo& Info);
	float GetSpawnerRadiusByType();
	class FString GetSpawnDisableDebugInfo();
	int32 GetMaxMonsterLevel();
	bool GetIsServer();
	bool GetDisableBossSpawnerFlag_FromSaveData(class FName KeyName);
	void GetAllSpawnedNPCHandle(TArray<class UPalIndividualCharacterHandle*>* Handles);
	void GetAllNPCLocation(TArray<struct FVector>* OutLocations);
	void CreatedGroupDelegate__DelegateSignature();
	void CreateDebugSpawnerGroupInfo(const struct FPalSpawnerGroupInfo& OneGroupInfo);
	enum class EPalCheckSpawnResultType CheckSpawnDistance(bool IsSpawned);
	void BlueprintTick_Spawning(float DeltaTime);
	void BlueprintTick_Spawned(float DeltaTime);
	void BlueprintTick_Despawning(float DeltaTime);
	void BlueprintTick_AnyThread(float DeltaTime);
	void BlueprintTick(float DeltaTime);
	void AddGroupCharacterByGroupId(class UPalIndividualCharacterHandle* AddIndividualHandle, struct FGuid& GroupID, const class FString& DebugName);
	void AddGroupCharacter(class UPalIndividualCharacterHandle* AddIndividualHandle);
};

// 0x28 (0xC8 - 0xA0)
// Class Pal.PalNPCTalkComponent
class UPalNPCTalkComponent : public UActorComponent
{
public:
	bool                                         IsTalking;                                         // 0xA0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3A8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTalkStartDelegate;                               // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTalkEndDelegate;                                 // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalNPCTalkComponent* GetDefaultObj();

	void TriggerStartTalk(class AActor* Other, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void TriggerEndTalk(class AActor* Other);
	void TalkStartDelegate__DelegateSignature(class AActor* SelfActor, class AActor* TargetActor);
	void TalkEndDelegate__DelegateSignature(class AActor* SelfActor, class AActor* TargetActor);
	void StartTalk(class AActor* Other);
	bool HasTalkData(class APalCharacter* TalkCharacter);
	bool GetIsTalking();
};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalNPCTalkSystem
class UPalNPCTalkSystem : public UObject
{
public:
	uint8                                        Pad_3A9E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalTalkWidgetParameter*               TalkWidgetParameter;                               // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalTalkWindowWidgetBase*              TalkWidget;                                        // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalNPCTalkData                       NowExecutedTalkData;                               // 0x40(0x58)(NativeAccessSpecifierPrivate)
	int32                                        NowTalkDataIndex;                                  // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  NowTalkDataSeqenceName;                            // 0x9C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AA1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          DefaultYesNoChoiceText;                            // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFunction*                             TargetFunc;                                        // 0xB8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            FuncParam;                                         // 0xC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalNPCTalkCustomFunctionResult   CustomFuncResult;                                  // 0xC8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AA4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CustomFuncChoseIndex;                              // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalNPCTalkSystem* GetDefaultObj();

	void SetCustomFunctionResult_Implementation(enum class EPalNPCTalkCustomFunctionResult Result);
	void SetCustomFunctionChoseIndex_Implementation(int32 Index);
	enum class EPalNPCTalkProceedResult Proceed();
	void Initialize(class UPalTalkWidgetParameter* InParameter, class UPalTalkWindowWidgetBase* InTalkWidget);
	bool ChangeSeqence(class FName TargetSeqenceName);
	bool CallCustomFunc();
	void AddArgument_Implementation(const class FString& Key, class FText& Text);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalNPCTalkSystemCustomFunctionInterface
class IPalNPCTalkSystemCustomFunctionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalNPCTalkSystemCustomFunctionInterface* GetDefaultObj();

	void SetCustomFunctionResult(enum class EPalNPCTalkCustomFunctionResult CustomFunctionResult);
	void SetCustomFunctionChoseIndex(int32 Index);
	void AddArgument(const class FString& Key, class FText& Text);
};

// 0x70 (0x98 - 0x28)
// Class Pal.PalNPCWeaponGenerator
class UPalNPCWeaponGenerator : public UObject
{
public:
	TMap<enum class EPalWeaponType, class FName> WeaponIDMap;                                       // 0x28(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPalContainerId                       WeaponContainerId;                                 // 0x78(0x10)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalWeaponBase*                        WeaponActorBP;                                     // 0x88(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsDefaultEquipWeapon;                              // 0x90(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AB1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalNPCWeaponGenerator* GetDefaultObj();

	void OnSpawnEvent(class APalWeaponBase* WeaponActor);
	void GenerateWeapn(enum class EPalWeaponType WeaponType, bool IsDefaultEquip);
};

// 0x198 (0x208 - 0x70)
// Class Pal.PalObjectCollector
class UPalObjectCollector : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_3AB3[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APalCharacter*>                 PalCharacter_All;                                  // 0xD0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class APalCharacter*>                 PalCharacter_NPC;                                  // 0xE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class APalCharacter*>                 PalCharacter_Player;                               // 0xF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class APalMapObjectSpawnerBase*>      MapObject_SpawnerBase;                             // 0x100(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class APalCharacter*, struct FPalCharacterList> NearestCharacter_FromPlayer;                       // 0x110(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<class APalMapObjectSpawnerBase*>      NearestSpawnerBase;                                // 0x160(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<class APalCharacter*, struct FPalCharacterList> CalculationNearestCharacter_FromPlayer;            // 0x170(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<class APalMapObjectSpawnerBase*>      CalculationNearSpawnerBase_FromPlayer;             // 0x1C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       BaseCampLocationList;                              // 0x1D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bIsUpdateBaseCamp;                                 // 0x1E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APalMapObjectSpawnerBase*>      CalculationNearSpawnerBase_FromBaseCamp;           // 0x1E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	float                                        NearStartDistanceForSpawnerBase;                   // 0x1F8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NearEndDistanceForSpawnerBase;                     // 0x1FC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NearDistanceForSpawnerBaseFromBaseCamp;            // 0x200(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AB8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalObjectCollector* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalObjectDurabilityInterface
class IPalObjectDurabilityInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalObjectDurabilityInterface* GetDefaultObj();

	void SetDurability(float NewDurability);
	float GetMaxDurability();
	float GetDurability();
};

// 0x10 (0xB0 - 0xA0)
// Class Pal.PalObjectReplicatorComponent
class UPalObjectReplicatorComponent : public UActorComponent
{
public:
	TArray<class UObject*>                       ReplicateObject;                                   // 0xA0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalObjectReplicatorComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalOnlineSubsystemSteam
class UPalOnlineSubsystemSteam : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalOnlineSubsystemSteam* GetDefaultObj();

};

// 0x490 (0x4B8 - 0x28)
// Class Pal.PalOptimizeParameterSetting
class UPalOptimizeParameterSetting : public UObject
{
public:
	struct FPalOptimizeParameter                 Parameter;                                         // 0x28(0x490)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalOptimizeParameterSetting* GetDefaultObj();

};

// 0x128 (0x150 - 0x28)
// Class Pal.PalOptionReplicator
class UPalOptionReplicator : public UPalGameStateReplicatorBase
{
public:
	struct FPalOptionWorldSettings               OptionWorldSettings;                               // 0x28(0x128)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalOptionReplicator* GetDefaultObj();

	void OnRep_OptionWorldSettings();
};

// 0x5D0 (0x640 - 0x70)
// Class Pal.PalOptionSubsystem
class UPalOptionSubsystem : public UPalWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnChangeKeyboardDelegate;                          // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangePadDelegate;                               // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeGraphicsDelegate;                          // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeWorldSettingsDelegate;                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeKeyConfigDelegate;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeScreenRatioDelegate;                       // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FPalOptionWorldStaticSettings         OptionWorldStaticSettings;                         // 0xD0(0xF0)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPalOptionLocalStaticSettings         OptionLocalStaticSettings;                         // 0x1C0(0x40)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPalOptionWorldSettings               OptionWorldSettings;                               // 0x200(0x128)(Protected, NativeAccessSpecifierProtected)
	struct FPalOptionWorldSettings               OptionWorldSettingsCache;                          // 0x328(0x128)(Protected, NativeAccessSpecifierProtected)
	struct FPalOptionGraphicsSettings            GraphicsSettings;                                  // 0x450(0x54)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPalOptionAudioSettings               AudioSettings;                                     // 0x4A4(0x1C)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPalOptionCommonSettings              CommonSettings;                                    // 0x4C0(0x20)(Protected, NativeAccessSpecifierProtected)
	struct FPalOptionKeyboardSettings            KeyboardSettings;                                  // 0x4E0(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPalOptionPadSettings                 PadSettings;                                       // 0x4F0(0x18)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPalKeyConfigSettings                 KeyConfigSettings;                                 // 0x508(0xC0)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3AED[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseFov;                                           // 0x5E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AEE[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Namespace;                                         // 0x600(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3AEF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            OptionWorldPresetTable;                            // 0x618(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            OptionWorldModePresetTable;                        // 0x620(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            OptionGraphicsPresetTable;                         // 0x628(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class APalPlayerCharacter>       PalPlayerCharacterClass;                           // 0x630(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AF2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalOptionSubsystem* GetDefaultObj();

	void SetPadSettings(struct FPalOptionPadSettings& InPadSettings);
	void SetOptionWorldSettings(struct FPalOptionWorldSettings& InOptionWorldSettings);
	void SetKeyConfigSettings(struct FPalKeyConfigSettings& InKeyConfigSettings);
	void SetKeyboardSettings(struct FPalOptionKeyboardSettings& InKeyboardSettings);
	void SetGraphicsSettings(struct FPalOptionGraphicsSettings& InGraphicsSettings);
	void SetCommonSettings(struct FPalOptionCommonSettings& InCommonSettings);
	void SetAudioSettings(struct FPalOptionAudioSettings& InAudioSettings);
	void SaveLocalSettings();
	void RefreshBanList();
	void OnCompletedGetBanlist(const class FString& ResponseBody, bool bResponseOK, int32 ResponseCode);
	void OnChangeWorldSettingsDelegate__DelegateSignature(struct FPalOptionWorldSettings& PrevSettings, struct FPalOptionWorldSettings& NewSettings);
	void OnChangeScreenRatioDelegate__DelegateSignature(float NewRatio);
	void OnChangePadDelegate__DelegateSignature(struct FPalOptionPadSettings& PrevSettings, struct FPalOptionPadSettings& NewSettings);
	void OnChangeKeyConfigDelegate__DelegateSignature(struct FPalKeyConfigSettings& PrevSettings, struct FPalKeyConfigSettings& NewSettings);
	void OnChangeKeyboardDelegate__DelegateSignature(struct FPalOptionKeyboardSettings& PrevSettings, struct FPalOptionKeyboardSettings& NewSettings);
	void OnChangeGraphicsDelegate__DelegateSignature(struct FPalOptionGraphicsSettings& PrevSettings, struct FPalOptionGraphicsSettings& NewSettings);
	void GetSupportScreenSizes(TArray<struct FIntPoint>* SupportResolutions, enum class EWindowMode WindowMode);
	struct FPalOptionPadSettings GetPadSettings();
	struct FPalOptionWorldStaticSettings GetOptionWorldStaticSettings();
	struct FPalOptionWorldSettings GetOptionWorldSettings();
	struct FPalOptionLocalStaticSettings GetOptionLocalStaticSettings();
	struct FPalKeyConfigSettings GetKeyConfigSettings();
	struct FPalOptionKeyboardSettings GetKeyboardSettings();
	struct FPalOptionGraphicsSettings GetGraphicsSettings();
	struct FIntPoint GetGameResolution();
	struct FPalOptionCommonSettings GetCommonSettings();
	struct FPalOptionAudioSettings GetAudioSettings();
	void ApplyWorldSettings();
	void ApplyWorldPreset(struct FPalOptionWorldSettings& OutSettings, enum class EPalOptionWorldDifficulty Difficulty);
	void ApplyWorldModePreset(struct FPalOptionWorldSettings& OutSettings, bool bIsPvP);
	void ApplyGraphicsPresetByBenchMark(struct FPalOptionGraphicsSettings& OutSettings);
	void ApplyGraphicsPreset(struct FPalOptionGraphicsSettings& OutSettings, enum class EPalOptionGraphicsLevel GraphicsLevel);
};

// 0x180 (0x1A8 - 0x28)
// Class Pal.PalOptionSaveGame
class UPalOptionSaveGame : public USaveGame
{
public:
	struct FPalOptionSaveData                    OptionSaveData;                                    // 0x28(0x180)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalOptionSaveGame* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalOtomoAttackStopJudgeByBall
class UPalOtomoAttackStopJudgeByBall : public UObject
{
public:
	bool                                         IsProhibitAttack;                                  // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3AF4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalOtomoAttackStopJudgeByBall* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Pal.PalOtomoAttackStopJudgeByBallList
class UPalOtomoAttackStopJudgeByBallList : public UObject
{
public:
	TMap<struct FGuid, class UPalOtomoAttackStopJudgeByBall*> JudgeList;                                         // 0x28(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalOtomoAttackStopJudgeByBallList* GetDefaultObj();

	void OnHitCaptureBall(class AActor* Attacker);
};

// 0x78 (0x118 - 0xA0)
// Class Pal.PalOtomoHolderComponentBase
class UPalOtomoHolderComponentBase : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnCreatedCharacterContainerDelegate;               // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateOtomoSlotDelegate;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateOtomoSlotWithActorDelegate;                // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateOtomoSlotWithInitializedParameterDelegate; // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOtomoSpawnedDelegate;                            // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UPalOtomoSpawnCollisionChecker*        CollisionChecker;                                  // 0xF0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalOtomoPalOrderType             OtomoOrder;                                        // 0xF8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B31[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIndividualCharacterContainer*      CharacterContainer;                                // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPalIndividualCharacterHandle*> CreatingHandleCache;                               // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalOtomoHolderComponentBase* GetDefaultObj();

	void UpdateOtomoSlotWithInitializedParameterDelegate__DelegateSignature(class APalCharacter* Character);
	void UpdateOtomoSlotDelegate__DelegateSignature(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle);
	class UPalIndividualCharacterHandle* TryGetSpawnedOtomoHandle();
	class APalCharacter* TryGetSpawnedOtomo();
	class APawn* TryGetOwnerControlledPawn();
	class APalCharacter* TryGetOwnerControlledCharacter();
	class APalCharacter* TryGetOtomoActorBySlotIndex(int32 SlotIndex);
	void TryGetLoadedOtomoData(bool* bLoaded, TMap<struct FPalInstanceID, struct FPalIndividualCharacterSaveParameter>* OutParameterMap);
	class APalCharacter* TryGetCurrentSelectPalActor();
	bool TryGetContainer(class UPalIndividualCharacterContainer** Container);
	void TryFixAssignNearestWorkSelectedOtomo(class AActor* HitActor);
	void Tmp_EmptySlot(struct FPalCharacterSlotId& SlotID);
	void SpawnOtomoByLoad(int32 SlotIndex);
	void SetSelectOtomoID_Internal(int32 Index);
	void SetSelectOtomoID(int32 Index);
	void SetOtomoOrder_ToServer(enum class EPalOtomoPalOrderType OrderType);
	void SetInteractComponent(class AActor* SpawnPal);
	void OtomoSpawnedDelegate__DelegateSignature(class AController* HolderController, class APalCharacter* OtomoPal);
	void OnUpdateSlot(class UPalIndividualCharacterSlot* Slot, class UPalIndividualCharacterHandle* LastHandle);
	void OnUpdateIndividualActor(class UPalIndividualCharacterHandle* LastHandle);
	void OnSpawnOtomoCallback_ServerInternal(const struct FPalInstanceID& ID);
	void OnSpawnDebugOtomoCallback_ServerInternal(const struct FPalInstanceID& ID);
	void OnReplicated_CharacterContainer_AllSlots(class UPalIndividualCharacterContainer* Container);
	void OnRep_CharacterContainer();
	void OnInitializedCharacter(class APalCharacter* Character);
	void OnCreatedCharacterContainer__DelegateSignature();
	void OnCreatedCharacterContainer();
	void OnChangeOtomoActive(class APalCharacter* Otomo, bool IsActive);
	void LostOtomoByID_ToClient(const struct FPalInstanceID& ID);
	bool IsValidCurrentSelectPalActor();
	bool IsRidingBySpawnSlotID();
	bool IsRidingBySelectSlotID();
	bool IsFullMember();
	bool IsDeadSelectedOtomo();
	bool IsCreatedOtomoContainer();
	bool IsControlledByPlayer();
	bool IsALLEmpty();
	bool IsAllDeadOtomo();
	bool IsActivatedSelectOtomo();
	void Initialize_ServerInternal();
	void Initialize();
	void IncrementSelectOtomoID_Internal();
	void IncrementSelectOtomoID();
	void InactiveOtomoByHandle_PreProcess(class UPalIndividualCharacterHandle* Handle);
	void InactivateCurrentOtomo();
	struct FTransform GetTransform_SpawnPalNearTrainer();
	int32 GetSpawnedOtomoID();
	void GetSlots(TArray<class UPalIndividualCharacterSlot*>* Slots);
	int32 GetSlotIndexByIndividualHandle(class UPalIndividualCharacterHandle* IndividualHandle);
	int32 GetSelectedOtomoID();
	int32 GetPreviousOtomoSlotID();
	enum class EPalOtomoPalOrderType GetOtomoOrder();
	class UPalIndividualCharacterHandle* GetOtomoIndividualHandle(int32 SlotIndex);
	class UPalIndividualCharacterSlot* GetOtomoIndividualCharacterSlot_Internal(int32 SlotIndex);
	class UPalIndividualCharacterSlot* GetOtomoIndividualCharacterSlot(int32 SlotIndex);
	int32 GetOtomoCount();
	int32 GetNextOtomoSlotID();
	int32 GetMaxOtomoNum();
	class APalCharacter* GetEnemyWhenOtomoThrow(const struct FVector& OtomoAppearedLocation);
	class UPalIndividualCharacterSlot* GetEmptySlot();
	void GetAllIndividualHandle(TArray<class UPalIndividualCharacterHandle*>* OutArray);
	void DecrementSelectOtomoID_Internal();
	void DecrementSelectOtomoID();
	void CoopCallCommand();
	void CallCancelCommand();
	bool AddOtomoHandleToFreeSlot(class UPalIndividualCharacterHandle* Handle);
	void AddLogOtomoPartnerSkill_Waza_ToClient(class AActor* Otomo, enum class EPalLogType PalLogType);
	void AddLogOtomoPartnerSkill_ToClient(class AActor* Otomo, enum class EPalLogType PalLogType, int32 Value, bool AddSkillName);
	bool ActivateCurrentOtomoNearThePlayer();
	bool ActivateCurrentOtomo(const struct FTransform& SpawnTransform);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalOtomoSpawnCollisionChecker
class UPalOtomoSpawnCollisionChecker : public UObject
{
public:
	uint8                                        Pad_3B3C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalOtomoSpawnCollisionChecker* GetDefaultObj();

	struct FTransform GetTransform_WhenSpawnPalNearTrainer(class AActor* Trainer);
	struct FVector GetLocation_WhenSpawnPalSphgereThrow(const struct FHitResult& Hit, class APawn* CurrentSelectPalActor);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalOtomoUiBase
class UPalOtomoUiBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalOtomoUiBase* GetDefaultObj();

	enum class EPalTribeID GetTribeIDFromClass(TSubclassOf<class AActor>& TargetActorClass);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalOwnerCharacterAcquirableInterface
class IPalOwnerCharacterAcquirableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalOwnerCharacterAcquirableInterface* GetDefaultObj();

	class APalCharacter* GetOwnerCharacter();
};

// 0x168 (0x208 - 0xA0)
// Class Pal.PalPartnerSkillParameterComponent
class UPalPartnerSkillParameterComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnOverheat;                                        // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCoolDownCompleted;                               // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEffectTimeChanged;                               // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCoolDownTimeChanged;                             // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStart;                                           // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStop;                                            // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleExecute;                                   // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSearchEffectExecute;                             // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FPalDataTableRowName_ItemData> RestrictionItems;                                  // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  SkillName;                                         // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalWazaID                        WazaID;                                            // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B59[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFixedPoint                           EffectTime;                                        // 0x13C(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint                           EffectTimeMax;                                     // 0x140(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint                           ExecCost;                                          // 0x144(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint                           IdleCost;                                          // 0x148(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint                           IdleTime;                                          // 0x14C(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint                           CoolDownTime;                                      // 0x150(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FFixedPoint                           CoolDownTimeMax;                                   // 0x154(0x4)(Edit, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bCanThrowPal;                                      // 0x158(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanChangeWeapon;                                  // 0x159(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsToggleKey;                                      // 0x15A(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIdlelCostDecreaseEveryFrame;                      // 0x15B(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsExecSkillContinuation;                          // 0x15C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRunning;                                        // 0x15D(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOverheat;                                       // 0x15E(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsExecuting;                                      // 0x15F(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCoopSkillModuleBase*               SkillModule;                                       // 0x160(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPalPassivePartnerSkillIdAndParameters> PassiveSkills;                                     // 0x168(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FPalPartnerSkillParameterRide         RideParameter;                                     // 0x178(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class APalFunnelCharacter>       FunnelCharacterClass;                              // 0x180(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APalAIController>          FunnelControllerClass;                             // 0x188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWazaID                        FunnelAttackWazaID;                                // 0x190(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3B5A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalPartnerSkillPassiveSkill*          PassiveSkill;                                      // 0x198(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B5B[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ActiveSkill_MainValue_Overview_EditorOnly;         // 0x1F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                ActiveSkill_MainValueByRank;                       // 0x1F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalPartnerSkillParameterComponent* GetDefaultObj();

	void Stop();
	void Start();
	void SetName(class FName Name);
	void SetDisableFlagsBySetting(bool IsDisable);
	void SetCoopFlag_ForServer(bool IsCoop);
	void Recover();
	void OnUpdateInventoryContainer(class UPalItemContainer* Container);
	void OnToggleExecute__DelegateSignature(bool IsExecuting);
	void OnStop__DelegateSignature();
	void OnStart__DelegateSignature();
	void OnSearchEffect__DelegateSignature();
	void OnRideInactivated();
	void OnRideActivated();
	void OnOwnerCharacterSpawned(const struct FPalInstanceID& ID);
	void OnOverheat__DelegateSignature();
	void OnInitializedCharacter(class APalCharacter* OwnerCharacter);
	void OnInactivatedAsWorker();
	void OnInactivatedAsPartner();
	void OnInactivatedAsOtomoHolder();
	void OnExec();
	void OnEffectTimeChanged__DelegateSignature(const struct FFixedPoint& EffectTime, const struct FFixedPoint& EffectTimeMax);
	void OnCoolDownTimeChanged__DelegateSignature(const struct FFixedPoint& CoolDownTime, const struct FFixedPoint& CoolDownTimeMax);
	void OnCoolDownCompleted__DelegateSignature();
	void OnComplated();
	void OnActivatedAsWorker();
	void OnActivatedAsPartner();
	void OnActivatedAsOtomoHolder();
	bool IsToggleKey();
	bool IsRunning();
	bool IsRestrictedByItems(class AActor* Trainer);
	bool IsOverheat();
	bool IsExistActiveSkill();
	bool IsCoolDown();
	float GetWazaPowerRate(enum class EPalWazaID Waza);
	enum class EPalWazaID GetWazaID();
	class FName GetSkillName();
	void GetRideParameter(struct FPalPartnerSkillParameterRide* OutParam);
	TArray<struct FPalDataTableRowName_ItemData> GetRestrictionItems();
	struct FFixedPoint GetMainDamage();
	float GetEffectTimeRatio();
	struct FFixedPoint GetEffectTimeMax();
	struct FFixedPoint GetEffectTime();
	float GetCoolDownTimeRatio();
	struct FFixedPoint GetCoolDownTimeMax();
	struct FFixedPoint GetCoolDownTime();
	float GetActiveSkillMainValueByRank();
	void ForceOverheat();
	void ExecDuring(float DeltaTime);
	class UPalCoopSkillModuleBase* CreateSkillModule(TSubclassOf<class UPalCoopSkillModuleBase> SkillModuleClass);
	bool CanExec();
	bool CanChangeWeapon();
	void CallOnToggleExecute_ToAll(bool Execute);
	void CallOnStop_ToAll();
	void CallOnStartSearchEffect_ToAll(struct FGuid& RequestPlayerUId, struct FPalCoopSkillSearchEffectParameter& EffectParam);
	void CallOnStart_ToAll();
	void CallOnOverheat_ToAll();
	void CallOnEffectTimeChanged_ToAll(const struct FFixedPoint& EffectTime, const struct FFixedPoint& EffectTimeMax);
	void CallOnCoolDownTimeChanged_ToAll(const struct FFixedPoint& CoolDownTime, const struct FFixedPoint& CoolDownTimeMax);
	void CallOnCoolDownCompleted_ToAll();
};

// 0xD0 (0xF8 - 0x28)
// Class Pal.PalPartnerSkillPassiveSkill
class UPalPartnerSkillPassiveSkill : public UObject
{
public:
	FDelegateProperty_                           IsRestrictedDelegate;                              // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsReserving;                                       // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRestricted;                                     // 0x39(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequireWorkerWorkingPassiveSkill;                 // 0x3A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsWorking;                                        // 0x3B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B65[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalPassivePartnerSkillIdAndParameters> PassiveSkills;                                     // 0x40(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FPalDataTableRowName_PassiveSkillData, struct FPalPassivePartnerSkillStatus> SkillStatus;                                       // 0x50(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	int32                                        CurrentRank;                                       // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3B66[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPartnerSkillPassiveSkill* GetDefaultObj();

	void OnWorkerAssignChanged(class UPalCharacterParameterComponent* Parameter);
	void OnUpdateOtomoHolder(class APalCharacter* Character);
	void OnUpdateInventoryContainer();
	void OnRideInactivated();
	void OnRideActivated();
	void OnReserveInactivated();
	void OnReserveActivated();
	void OnInactivatedAsWorker();
	void OnInactivatedAsOtomoHolder();
	void OnInactivatedAsOtomo();
	void OnActivatedAsWorker();
	void OnActivatedAsOtomoHolder();
	void OnActivatedAsOtomo();
	void ObserveWorking();
	bool IsRestricted__DelegateSignature(class AActor* Trainer);
	bool IsRestricted();
	void Initialize(TArray<struct FPalPassivePartnerSkillIdAndParameters>& _PassiveSkills);
	void InactivateWorkingSkill();
	class APalPlayerController* GetTrainerController();
	class APalCharacter* GetTrainerActor();
	class ACharacter* GetTrainer();
	TArray<class FName> GetPassiveSkillList();
	class APalCharacter* GetOwner();
	int32 GetOtomoRank();
};

// 0x140 (0x1E0 - 0xA0)
// Class Pal.PalPassiveSkillComponent
class UPalPassiveSkillComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnStartSkillEffectDelegate;                        // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeSkillEffectValueDelegate;                  // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndSkillEffectDelegate;                          // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B91[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalPassiveSkillEffectInfos>   SkillInfos;                                        // 0x120(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FPalPassiveSkillEffectInfos>   SkillInfosMirror;                                  // 0x130(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EPalPassiveSkillEffectType, enum class EPalStatusID> SkillStatusMap;                                    // 0x140(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_3B93[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPassiveSkillComponent* GetDefaultObj();

	void SetupSkillFromSelf(class UObject* OwnerObject, TArray<class FName>& SkillList);
	void OverrideDamageInfoBySkill(struct FPalDamageInfo* InoutDamageInfo);
	void OnStartSkillEffect__DelegateSignature(enum class EPalPassiveSkillEffectType EffectType, float Value);
	void OnStartSkillEffect(enum class EPalPassiveSkillEffectType EffectType, float Value);
	void OnRep_SkillInfos();
	void OnEndSkillEffect__DelegateSignature(enum class EPalPassiveSkillEffectType EffectType);
	void OnEndSkillEffect(enum class EPalPassiveSkillEffectType EffectType);
	void OnChangeSkillEffectValue__DelegateSignature(enum class EPalPassiveSkillEffectType EffectType, float Value);
	void OnChangeSkillEffectValue(enum class EPalPassiveSkillEffectType EffectType, float Value);
	float GetParameterWithPassiveSkillEffect(float OriginalValue, enum class EPalPassiveSkillEffectType EffectType);
	void AddSpecialAttackRateInfo(TArray<struct FPalSpecialAttackRateInfo>* SpecialAttackRateInfos);
};

// 0x1E8 (0x210 - 0x28)
// Class Pal.PalPassiveSkillManager
class UPalPassiveSkillManager : public UObject
{
public:
	class UDataTable*                            PassiveSkillDataTable;                             // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPalPassiveSkillDatabaseRow> PalAssignableSkillMap;                             // 0x30(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPalPassiveSkillDatabaseRow> RarePalAssignableSkillMap;                         // 0x80(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPalPassiveSkillDatabaseRow> RangedWeaponAssignableSkillMap;                    // 0xD0(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPalPassiveSkillDatabaseRow> MeleeWeaponAssignableSkillMap;                     // 0x120(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPalPassiveSkillDatabaseRow> ArmorAssignableSkillMap;                           // 0x170(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPalPassiveSkillDatabaseRow> AccessoryAssignableSkillMap;                       // 0x1C0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalPassiveSkillManager* GetDefaultObj();

	void OnCreatedDynamicItemDataInServer(class UPalDynamicItemDataBase* CreatedItemData, struct FPalItemCreateParameter& CreateParameter);
	TArray<enum class EPalPassiveSkillEffectType> GetSkillEffectTypes(class FName SkillName);
	bool GetSkillData(class FName& SkillName, struct FPalPassiveSkillDatabaseRow* OutSkillData);
	TArray<class FName> GetPassiveSkillNamesRowName(TArray<class FName>& PassiveList);
	TArray<struct FPalPassiveSkillEffect> GetPassiveSkillEffect(class FName& SkillName, bool bTargetToSelf);
	float GetParameterWithSkillEffect(float OriginalValue, enum class EPalPassiveSkillEffectType EffectType, TArray<struct FPalPassiveSkillEffect>& SkillEffectList);
	class FName GetNameTextId(class FName SkillName);
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalPersistentSoundPlayer
class UPalPersistentSoundPlayer : public UObject
{
public:
	class UAkAudioEvent*                         AudioEvent;                                        // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FadeDuration;                                      // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3BA7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 PlayActor;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalPersistentSoundPlayer* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Pal.PalPettingPresset
class UPalPettingPresset : public UObject
{
public:
	struct FPalPettingParameter                  SmallPreset;                                       // 0x28(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FPalPettingParameter                  SmallMiddlePreset;                                 // 0x34(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FPalPettingParameter                  MediumPreset;                                      // 0x40(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FPalPettingParameter                  LargePreset;                                       // 0x4C(0xC)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalPettingPresset* GetDefaultObj();

	float GetDistance(class AActor* Pal);
	float GetCameraHeight(class AActor* Pal);
	float GetCameraCenterDistance(class AActor* Pal);
	float GetCameraArmLength(class AActor* Pal);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPhysicsDefine
class UPalPhysicsDefine : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalPhysicsDefine* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPhysicsUtility
class UPalPhysicsUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalPhysicsUtility* GetDefaultObj();

	void SetCanEverAffectNavigation(class UActorComponent* Component, bool bAffect);
};

// 0xC8 (0xF0 - 0x28)
// Class Pal.PalPlayerAccount
class UPalPlayerAccount : public UObject
{
public:
	struct FGuid                                 PlayerUId;                                         // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalPlayerAccountState            State;                                             // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BB4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIndividualCharacterHandle*         IndividualHandle;                                  // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BB5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LastSavedTransform;                                // 0x50(0x60)(Edit, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerOtomoData*                   OtomoData;                                         // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerDataCharacterMake*           CharacterMakeData;                                 // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerInventoryData*               InventoryData;                                     // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerDataPalStorage*              PalStorage;                                        // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalTechnologyData*                    TechnologyData;                                    // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerRecordData*                  RecordData;                                        // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsSelectedInitMapPoint;                           // 0xE0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BB8[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerAccount* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class Pal.PalPlayerBattleSituation
class UPalPlayerBattleSituation : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnBattleRankDownDelegate;                          // 0x28(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnemyAddRemoveDelegate;                          // 0x38(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeNearEnemyDelegate;                         // 0x48(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FPalInstanceID, struct FPalPlayerBattleEnemyInfo> BattleEnemyList;                                   // 0x58(0x50)(Transient, NativeAccessSpecifierPrivate)
	bool                                         IsNearCommonEnemy;                                 // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BB9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NearDistanceSqr;                                   // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          DistanceUpdateTimerHandle;                         // 0xB0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalPlayerBattleSituation* GetDefaultObj();

};

// 0x1D8 (0x9D0 - 0x7F8)
// Class Pal.PalPlayerCharacter
class APalPlayerCharacter : public APalCharacter
{
public:
	uint8                                        Pad_3BD3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalShooterComponent*                  ShooterComponent;                                  // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalInteractComponent*                 InteractComponent;                                 // 0x808(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalBuilderComponent*                  BuilderComponent;                                  // 0x810(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalLoadoutSelectorComponent*          LoadoutSelectorComponent;                          // 0x818(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalInsideBaseCampCheckComponent*      InsideBaseCampCheckComponent;                      // 0x820(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalObjectReplicatorComponent*         HighPriorityObjectReplicatorComponent;             // 0x828(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerReviveDelegate;                            // 0x830(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerRespawnDelegate;                           // 0x840(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerMoveToRespawnLocationDelegate;             // 0x850(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCombatRankDownDelegate;                          // 0x860(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddRemoveEnemyDelegate;                          // 0x870(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeBattleModeDelegate_ForPlayer;              // 0x880(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerDeathAction;                               // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeBossTowerEntrancePlayer;                   // 0x8A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeBossEntrancePlayer;                        // 0x8B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCombatStartUIAction;                             // 0x8C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeRegionArea;                                // 0x8D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  LastInsideRegionNameID;                            // 0x8E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerCameraYaw;                                   // 0x8E8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlayerCameraPitch;                                 // 0x8EC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsAdjustedLocationByLoad;                          // 0x8F0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BD5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          IdleAnimMontage;                                   // 0x8F8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerBattleSituation*             PlayerBattleSituation;                             // 0x900(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsNearCommonEnemyFlag;                             // 0x908(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsSetRespawnTelemetry;                            // 0x909(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BD7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          InDoorTimerHandle;                                 // 0x910(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalPlayerGenderChanger>   GenderChangerClass;                                // 0x920(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerGenderChanger*               GenderChanger;                                     // 0x928(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSpectatorMode;                                    // 0x930(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BD9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalPlayerDataCharacterMakeInfo       CharacterMakeInfo;                                 // 0x934(0x94)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3BDA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalPlayerCharacter* GetDefaultObj();

	void StopIdleAnimation();
	void SetSpectatorMode(bool bSpectator);
	void SetNearCommonEnemy(bool IsExistNearEnemy);
	void PlayIdleAnimation(class UAnimMontage* Montage);
	void PlayEatAnimation();
	void OnUpdateEssentialItemContainer(class UPalItemContainer* Container);
	void OnTriggerInteract(class AActor* OtherActor, enum class EPalInteractiveObjectIndicatorType IndicatorType);
	void OnStartGliding();
	void OnSPOverhead();
	void OnRep_SpectatorMode(bool before);
	void OnRep_CharacterMakeInfo();
	void OnReloadStart();
	void OnPlayerReviveDelegate__DelegateSignature(class APalPlayerCharacter* Player);
	void OnPlayerRespawnDelegate__DelegateSignature(class APalPlayerCharacter* Player);
	void OnPlayerMoveToRespawnLocationDelegate__DelegateSignature(class APalPlayerCharacter* Player, const struct FVector& Location);
	void OnPlayerDeathAction__DelegateSignature();
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnJumpDisable();
	void OnEnterBaseCamp_StartBaseCampCombat(class UPalBaseCampModel* CampModel);
	void OnEndIdle();
	void OnEndGliding();
	void OnDownBattleEnemyRank(enum class EPalPlayerBattleFinishType FinishType);
	void OnDamagePlayer_Server(const struct FPalDamageResult& DamageResult);
	void OnCombatStartUIActionDelegate__DelegateSignature();
	void OnCombatRankDownDelegate__DelegateSignature(enum class EPalPlayerBattleFinishType FinishType);
	void OnChangeShooterState(bool IsAim, bool IsShoot);
	void OnChangeRegionAreaDelegate__DelegateSignature(class FName& RegionNameID);
	void OnChangePrevWeapon();
	void OnChangePlayerBattleMode__DelegateSignature(bool IsBattle);
	void OnChangeNextWeapon();
	void OnChangeNearEnemy_ToAll(bool IsExist);
	void OnChangeMovementMode(class UPalCharacterMovementComponent* Component, enum class EMovementMode PrevMode, enum class EMovementMode NewMode, enum class EPalCharacterMovementCustomMode PrevCustomMode, enum class EPalCharacterMovementCustomMode NewCustomMode);
	void OnChangeBossTowerEntrancePlayer__DelegateSignature(class FName BossType, TArray<class APalPlayerCharacter*>& PlayerList);
	void OnChangeBattleEnemyRank(enum class EPalBattleBGMType Rank, bool IsAdd);
	void OnBeginAction(class UPalActionBase* Action);
	void OnAddRemoveEnemyDelegate__DelegateSignature(enum class EPalBattleBGMType Rank, bool IsAdd);
	bool IsIdle();
	bool IsGuildMaster();
	bool IsGliding();
	bool IsAdjustedLocation();
	class APalPlayerController* GetPalPlayerController();
	void GetLastInsideRegionNameID(class FName* OutNameID);
	struct FPalPlayerDataCharacterMakeInfo GetCharacterMakeInfo();
	struct FRotator GetCameraRotator();
	void CreateLantern();
	void ChangeToMale();
	void ChangeToFemale();
	void CallReviveDelegate();
	void CallRespawnDelegate();
	void CallMoveToRespawnLocationDelegate(const struct FVector& Location);
	void AdjustLocationByLoad(class APalCharacter* InCharacter);
};

// 0x498 (0xCE8 - 0x850)
// Class Pal.PalPlayerController
class APalPlayerController : public ACommonPlayerController
{
public:
	bool                                         bAdmin;                                            // 0x850(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C43[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalAIActionComponent*                 AIActionComponent;                                 // 0x858(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalNetworkMulticastGateComponent*     MulticastGateComponent;                            // 0x860(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalCutsceneComponent*                 CutsceneComponent;                                 // 0x868(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APalNetworkTransmitter*                Transmitter;                                       // 0x870(0x8)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WeaponPaletteLongPressTime;                        // 0x878(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnChangeCameraInterpChangeTime;                  // 0x87C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOpenConstructionMenu;                            // 0x880(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C44[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCoopRequestDelegate;                             // 0x888(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCoopReleaseDelegate;                             // 0x898(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractDelegate;                                // 0x8A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPressedJumpDelegate;                             // 0x8B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputMoveForwardDelegate;                        // 0x8C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3C45[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPressedThrowPalButtonDelegate;                   // 0x8E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnReleasedThrowPalButtonDelegate;                  // 0x8F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnPressedSpawnPalButtonDelegate;                   // 0x908(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnLongPressedSpawnPalButtonDelegate;               // 0x918(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnReleasedSpawnPalButtonDelegate;                  // 0x928(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnLongReleasedSpawnPalButtonDelegate;              // 0x938(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnPressedPartnerInstructionsButtonDelegate;        // 0x948(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnPressConstructionMenuButtonDelegate;             // 0x958(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C47[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RecoilCurve;                                       // 0xA30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C48[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TimerGaugeDisplayOffset;                           // 0xAA8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCameraShakeBase>          DamageCameraShake;                                 // 0xAC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalPlayerDamageCamShakeRegulator> DamageCamShakeRegulatorClass;                      // 0xAC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalPlayerDamageCamShakeRegulator*     DamageCamShakeRegulator;                           // 0xAD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalLongPressObject*>           LongPressObjects;                                  // 0xAD8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     CameraRotateModifierMap;                           // 0xAE8(0x50)(NativeAccessSpecifierPrivate)
	TArray<struct FRotator>                      AutoAimRotatorList;                                // 0xB38(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C49[0x100];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDelegateTickFunction                 PawnAfterTickFunction;                             // 0xC48(0x38)(NativeAccessSpecifierPrivate)
	class AActor*                                AutoAimTarget;                                     // 0xC80(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               ReticleTargetOffset;                               // 0xC88(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             GamePadNativeAxis;                                 // 0xCA0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             MouseNativeAxis;                                   // 0xCB0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              CacheActorRotator;                                 // 0xCC0(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3C4B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalPlayerController* GetDefaultObj();

	bool TrySwitchOtomo();
	void ThrowPalByOutSide(class AActor* PreOtomoPal);
	void TeleportToSafePoint_ToServer();
	void StartStepCoolDownCoolTimer();
	void StartFlyToServer();
	void SetRiderRelativeRotation_ToServer(const struct FRotator& Rotator);
	void SetOtomoSlot(int32 SlotID);
	void SetHoldOtomo(int32 HoldID, class UPalIndividualCharacterHandle* OtomoHandle);
	void SetDisableThrowPalFlag(class FName FlagName, bool IsDisable);
	void SetDisableSwitchPalFlag(class FName FlagName, bool IsDisable);
	void SetDisableInputFlag(class FName FlagName, bool IsDisable);
	void SetCameraRotatorToPlayerCharacter_ToServer(const struct FRotator& CameraRotator);
	void SendScreenLogToClient(const class FString& Message, const struct FLinearColor& Color, float Duration, class FName& Key);
	void SendLog_ToClient(enum class EPalLogPriority Priority, class FText& Text, struct FPalLogAdditionalData& AdditionalData);
	void RPCDummy();
	void RequestLiftupThrow_ToServer(class AActor* Target);
	void RequestLiftup_ToServer(class APalCharacter* TargetCharacter);
	void RequestFastTravel_ToServer(struct FGuid& LocationId);
	void RemoveCameraRotateSpeedModifierRate(class FName& ModifierName);
	void ReceiveLiftupRequestResult_ToClient(enum class EPalLiftupRequestResult Result);
	void PlaySkill(int32 SlotID);
	void PalDeprojectScreenPositionToWorld(struct FVector* StartLocation, struct FVector* RayDirection);
	void OnWeaponNotify(enum class EWeaponNotifyType Type);
	void OnUpdateWeightInventory(float Weight);
	void OnSwitchOtomoSpawn();
	void OnStartCoopRequest();
	void OnStartAim();
	void OnSpawnAndRideSupportPal();
	void OnReleasedThrowPalButtonDelegate__DelegateSignature();
	void OnReleasedSpawnPalButtonDelegate__DelegateSignature();
	void OnReleasedSpawnPalButton();
	void OnPressedUseRecoveryItemButton();
	void OnPressedThrowPalButtonDelegate__DelegateSignature();
	void OnPressedSpawnPalButtonDelegate__DelegateSignature();
	void OnPressedPartnerInstructionsButtonDelegate__DelegateSignature();
	void OnPressedMoveForwardDelegate__DelegateSignature(float InputValue, bool IsController);
	void OnPressedJumpDelegate__DelegateSignature();
	void OnPressConstructionMenuButtonDelegate__DelegateSignature();
	void OnOverWeightInventory(float Weight);
	void OnOtomoChangeIncrement();
	void OnOtomoChangeDecrement();
	void OnOtomo_ShortReleased();
	void OnOtomo_Pressed();
	void OnOtomo_LongReleased();
	void OnOtomo_LongPressed();
	void OnLongReleasedSpawnPalButtonDelegate__DelegateSignature();
	void OnLongReleasedSpawnPalButton();
	void OnLongPressedSpawnPalButtonDelegate__DelegateSignature();
	void OnLongPressedCoopButton();
	void OnLanded(class UPalCharacterMovementComponent* MovementComponent, struct FHitResult& Hit);
	void OnJump(class UPalCharacterMovementComponent* MovementComponent);
	void OnInteractDelegate__DelegateSignature();
	void OnInitializeLocalPlayer_BP();
	void OnGetOffAndDespawnSupportPal();
	void OnFlyRideTakeOff();
	void OnFixedWeightInventory(float Weight);
	void OnEndRolling();
	void OnEndCoopRequest();
	void OnEndAim();
	void OnDestroyPawn(class AActor* DestroyedActor);
	void OnDamage(const struct FPalDamageResult& DamageResult);
	void OnCoopRequestDelegate__DelegateSignature();
	void OnCoopReleaseDelegate__DelegateSignature();
	void OnChangeSwimming(bool IsInSwimming);
	void OnChangePadOption(struct FPalOptionPadSettings& PrevSettings, struct FPalOptionPadSettings& NewSettings);
	void OnChangeOtomoSlot();
	void OnChangeKeyboardOption(struct FPalOptionKeyboardSettings& PrevSettings, struct FPalOptionKeyboardSettings& NewSettings);
	void OnChangeInstructions();
	void JumpCancelPalThrow(class UPalCharacterMovementComponent* MovementComponent);
	bool IsSwimming();
	bool IsRidingFlyPal();
	bool IsRiding();
	bool IsCooping();
	void InactiveOtomo();
	TSubclassOf<class UPalUserWidgetTimerGaugeBase> GetTimerGaugeWidgetClass();
	class AActor* GetRidingCharacter();
	struct FGuid GetPlayerUId();
	class APalPlayerState* GetPalPlayerState();
	void GetOffToServer();
	class APawn* GetLowBodyPawn();
	class APalCharacter* GetLowBodyPalCharacter();
	class UPalLoadoutSelectorComponent* GetLoadoutSelectorComponent();
	struct FVector2D GetKeyboardMoveValue();
	class APalCharacter* GetDefaultPlayerCharacter();
	class APalCharacter* GetControlPalCharacter();
	struct FVector2D GetControllerRightStickValue();
	struct FVector2D GetControllerLeftStickValue();
	void EndFlyToServer();
	void EnableShootingByAction(class UPalActionComponent* Component);
	void DoStep(enum class EPalStepAxisType Axis, const struct FVector2D& StepDirection);
	void Debug_TogglePartnerSkillNoDecrease();
	void Debug_TeleportToNearestPlayer();
	void Debug_TeleportToNearestCamp();
	void Debug_TeleportToBotLocation(int32 botIndex);
	void Debug_TeleportToBotCamp(int32 botIndex);
	void Debug_Teleport2D(struct FVector& Location);
	void Debug_ShowInvaderDeubgLog();
	void Debug_SetPalWorldTimeScale(float Rate);
	void Debug_SetPalWorldTime(int32 Hour);
	void Debug_SetFPSForServer(float Fps);
	void Debug_RerollCharacterMake();
	void Debug_ReceiveCheatCommand_ToClient(const class FString& Message);
	void Debug_ParallelForUpdateActiveTiles();
	void Debug_NotConsumeMaterialsInCraft();
	void Debug_NotConsumeMaterialsInBuild();
	void Debug_Muteki_ToServer();
	void Debug_InvaderMarchRandom();
	void Debug_InvaderMarch();
	void Debug_InsightsTraceStop_ToServer();
	void Debug_InsightsTraceStart_ToServer();
	void Debug_IgnoreRestrictedByItemsForPartnerSkill();
	void Debug_ForceSpawnRarePal_ToServer();
	void Debug_EnableCollectPalCount();
	void Debug_CheatCommand_ToServer(const class FString& Command);
	void Debug_AddPlayerExp_ToServer(int32 AddExp);
	void Debug_AddPartyExp_ToServer(int32 AddExp);
	void Debug_AddMoney_ToServer(int64 AddValue);
	void Debug_AddExpForALLPlayer_ToServer(int32 AddExp);
	bool CanCooping();
	void CallOnCoopReleaseDelegate_ToServer();
	void AddCameraRotateSpeedModifierRate(class FName& ModifierName, float Rate);
	void ActivateCurrentOtomoNearThePlayer();
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalPlayerDamageCamShakeRegulator
class UPalPlayerDamageCamShakeRegulator : public UObject
{
public:
	class UDataTable*                            DamageCameraShakeTable;                            // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalPlayerDamageCamShakeRegulator* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class Pal.PalPlayerDataCharacterMake
class UPalPlayerDataCharacterMake : public UObject
{
public:
	uint8                                        Pad_3C5C[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerDataCharacterMake* GetDefaultObj();

	class FName GetRandomHeadMeshName();
	class FName GetRandomHairMeshName();
	class FName GetRandomBodyMeshName();
	void GetPresetMakeInfo(class UObject* WorldContextObject, class FName& PresetName, struct FPalPlayerDataCharacterMakeInfo* OutMakeInfo);
	struct FPalPlayerDataCharacterMakeInfo GetMakeData();
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalPlayerDataPalStorage
class UPalPlayerDataPalStorage : public UObject
{
public:
	int32                                        PageNum;                                           // 0x28(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SlotNumInPage;                                     // 0x2C(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalIndividualCharacterContainer*      TargetContainer;                                   // 0x30(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalIndividualCharacterSlotsObserver*  SlotObserver;                                      // 0x38(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x40(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsOpen;                                            // 0x50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3C5F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerDataPalStorage* GetDefaultObj();

	void OnUpdateCharacterContainer_InServer();
	void OnRep_TargetContainer();
	void GetSlotsInPage(int32 PageIndex, TArray<class UPalIndividualCharacterSlot*>* Slots);
	class UPalIndividualCharacterSlot* GetSlot(int32 PageIndex, int32 SlotIndex);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPlayerDataStorage
class UPalPlayerDataStorage : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalPlayerDataStorage* GetDefaultObj();

	class UPalPlayerDataPalStorage* GetPalStorage();
	void GetInventoryInfo(struct FPalPlayerDataInventoryInfo* OutInventoryInfo);
	class UPalItemContainerMultiHelper* GetInventoryContainers();
};

// 0x158 (0x180 - 0x28)
// Class Pal.PalPlayerGenderChanger
class UPalPlayerGenderChanger : public UObject
{
public:
	struct FPlayerGenderParams                   MaleCharacterParams;                               // 0x28(0xA8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPlayerGenderParams                   FemaleCharacterParams;                             // 0xD0(0xA8)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsEpmtyFamaleParams;                              // 0x178(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsFamale;                                         // 0x179(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3C62[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerGenderChanger* GetDefaultObj();

};

// 0x38 (0x380 - 0x348)
// Class Pal.PalPlayerHeadAnimInstance
class UPalPlayerHeadAnimInstance : public UAnimInstance
{
public:
	struct FVector                               PlayerEyeLocationRight;                            // 0x348(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PlayerEyeLocationLeft;                             // 0x360(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3C63[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerHeadAnimInstance* GetDefaultObj();

	void SetPlayerEyeLocation(class USkeletalMesh* HeadMesh);
};

// 0xB0 (0x548 - 0x498)
// Class Pal.PalPlayerInput
class UPalPlayerInput : public UPlayerInput
{
public:
	FMulticastInlineDelegateProperty_            OnKeyConfigChanged;                                // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TSet<struct FKey>                            EnableKeys;                                        // 0x4A8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSet<struct FKey>                            DisableKeys;                                       // 0x4F8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalPlayerInput* GetDefaultObj();

	bool UpdateActionMapping(class FName InActionName, struct FPalKeyConfigKeys& NewKey, enum class EPalKeyConfigCategory Category);
	void ResetAxisKey(class FName InAxisName, enum class EPalKeyConfigCategory Category, enum class EPalKeyConfigAxisFilterType FilterType);
	void ResetActionKey(class FName InActionName, enum class EPalKeyConfigCategory Category);
	void OnKeyConfigChangedDelegate__DelegateSignature();
	void OnChangeKeyConfig(struct FPalKeyConfigSettings& PrevSettings, struct FPalKeyConfigSettings& NewSettings);
	bool IsEnableKey(const struct FKey& Key, enum class EPalKeyConfigCategory InputType);
	void GetAxisMappingByName(class FName InAxisName, TArray<struct FInputAxisKeyMapping>* OutMappings);
	struct FPalKeyConfigKeys GetAxisConfigKeys(class FName InAxisName, enum class EPalKeyConfigCategory Category, enum class EPalKeyConfigAxisFilterType FilterType);
	void GetActionMappingByName(class FName InActionName, TArray<struct FInputActionKeyMapping>* OutMappings);
	struct FPalKeyConfigKeys GetActionConfigKeys(class FName InActionName, enum class EPalKeyConfigCategory Category);
	void FiltterCategoryAxisMappings(enum class EPalKeyConfigCategory Category, enum class EPalKeyConfigAxisFilterType FilterType, TArray<struct FInputAxisKeyMapping>* Mappings);
	void FiltterCategoryActionMappings(enum class EPalKeyConfigCategory Category, TArray<struct FInputActionKeyMapping>* Mappings);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPlayerInventory
class UPalPlayerInventory : public UPalItemInventoryBase
{
public:

	static class UClass* StaticClass();
	static class UPalPlayerInventory* GetDefaultObj();

};

// 0x168 (0x190 - 0x28)
// Class Pal.PalPlayerInventoryData
class UPalPlayerInventoryData : public UObject
{
public:
	uint8                                        Pad_3CE4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateInventoryContainerDelegate;                // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateEssentialContainerDelegate;                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateLoadoutSlotDelegate;                       // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateEquipmentSlotDelegate;                     // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateWeightInventoryDelegate;                   // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateMaxWeightInventoryDelegate;                // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOverWeightInventoryDelegate;                     // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFixedInventoryWeightDelegate;                    // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxWeightBuffedDelegate;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupItemDelegate;                              // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGetItemFromConvertItemMapObject;                 // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalPlayerDataInventoryInfo           InventoryInfo;                                     // 0xE0(0x60)(Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CE5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          FullInventoryLogGuardTimerHandle;                  // 0x148(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NowItemWeight;                                     // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInventoryWeight;                                // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxInventoryWeight_Cached;                         // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CE6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalItemContainerMultiHelper*          InventoryMultiHelper;                              // 0x160(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassiveBuffedMaxWeight;                            // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x16C(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalMoneyData*                         MoneyData;                                         // 0x180(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         EquipmentBreakAudioEvent;                          // 0x188(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalPlayerInventoryData* GetDefaultObj();

	void UpdateWeightInventoryDelegate__DelegateSignature(float NowWeight);
	void UpdateMaxWeightInventoryDelegate__DelegateSignature(float MaxWeight);
	void UpdateLoadoutSlotDelegate__DelegateSignature(class UPalItemSlot* ItemSlot, enum class EPalPlayerInventoryType UpdatedLoadoutType);
	void UpdateInventoryContainerDelegate__DelegateSignature(class UPalItemContainer* Container);
	void UpdateEssentialContainerDelegate__DelegateSignature(class UPalItemContainer* Container);
	void UpdateEquipmentSlotDelegate__DelegateSignature(class UPalItemSlot* ItemSlot, enum class EPalPlayerEquipItemSlotType SlotType);
	bool TryRemoveEquipment(class UPalItemSlot* EquipSlot);
	bool TryGetItemSlotFromEquipmentType(enum class EPalPlayerEquipItemSlotType EquipmentSlotType, class UPalItemSlot** OutSlot);
	bool TryGetItemIdBySlot(enum class EPalPlayerEquipItemSlotType EquipmentSlotType, struct FPalItemId* OutItemId);
	enum class EPalPlayerEquipItemSlotType TryGetEquipmentTypeFromStaticItemID(class FName& StaticItemId);
	bool TryGetEquipmentContainerIDFromStaticItemID(class FName& StaticItemId, struct FPalContainerId* OutContainerId);
	bool TryGetEmptySlot(enum class EPalPlayerInventoryType InventoryType, class UPalItemSlot** EmptySlot);
	bool TryGetContainerIdFromItemType(enum class EPalItemTypeA ItemTypeA, struct FPalContainerId* OutContainerId);
	bool TryGetContainerIDFromInventoryType(enum class EPalPlayerInventoryType InventoryType, struct FPalContainerId* OutContainerId);
	bool TryGetContainerFromStaticItemID(class FName& StaticItemId, class UPalItemContainer** OutContainer);
	bool TryGetContainerFromInventoryType(enum class EPalPlayerInventoryType InventoryType, class UPalItemContainer** OutContainer);
	bool TryEquipSlot(class UPalItemSlot* Slot);
	void RequestTrashItemFromDropSlot_ServerInternal();
	void RequestTrashItemFromDropSlot();
	void RequestSortInventory_ServerInternal();
	void RequestSortInventory();
	void RequestFillSlotToTargetContainerFromInventory_ToServer(struct FPalContainerId& ToContainerId);
	void RequestFillSlotToInventoryFromTargetContainer_ToServer(struct FPalContainerId& FromContainerId);
	void RequestDropItemFromDropSlot_ServerInternal();
	void RequestDropItemFromDropSlot();
	void RequestAddItem(class FName StaticItemId, int32 Count, bool IsAssignPassive);
	void PickupItemDelegate__DelegateSignature(TArray<struct FPalItemAndNum>* ItemInfos);
	void OverWeightInventoryDelegate__DelegateSignature(float NowWeight);
	void OnUpdatePassiveSkill(enum class EPalPassiveSkillEffectType EffectType, float Value);
	void OnUpdateLoadoutSlot(class UPalItemSlot* Slot);
	void OnUpdateInventoryContainer(class UPalItemContainer* Container);
	void OnUpdateEssentialContainer(class UPalItemContainer* Container);
	void OnUpdateEquipmentSlot_ForServer(class UPalItemSlot* Slot);
	void OnUpdateEquipmentSlot(class UPalItemSlot* Slot);
	void OnUpdateAnyEquipmentDurability(float OldDurability, float NewDurability);
	void OnRep_maxInventoryWeight();
	void OnRep_InventoryInfo();
	void OnRep_BuffMaxWeight();
	void OnOnUpdateStatusPoint(class FName StatusName, int32 PrevPoint, int32 NewPoint);
	void OnEndPassiveSkill(enum class EPalPassiveSkillEffectType EffectType);
	void MaxWeightBuffedDelegate__DelegateSignature();
	bool IsExistItem(class FName& StaticItemId);
	bool IsEquipSlot(class UPalItemSlot* CheckSlot);
	bool IsEquip(enum class EPalPlayerEquipItemSlotType EquipmentSlotType, class FName& StaticItemId);
	int32 GetUnlockedFoodEquipSlotNum();
	float GetNowItemWeight();
	void GetItemInfoByItemTypeA(const TArray<enum class EPalItemTypeA>& ItemTypeA, TArray<struct FPalItemAndNum>* OutItemInfos);
	enum class EPalPlayerInventoryType GetInventoryTypeFromStaticItemID(class FName& StaticItemId);
	enum class EPalPlayerInventoryType GetInventoryTypeFromItemTypeA(enum class EPalItemTypeA ItemTypeA);
	void FixedWeightInventoryDelegate__DelegateSignature(float NowWeight);
	int32 CountItemNum(class FName& StaticItemId);
	bool CanEquip(enum class EPalPlayerEquipItemSlotType EquipmentSlotType, class FName& StaticItemId);
	enum class EPalItemOperationResult AddItem_ServerInternal(class FName StaticItemId, int32 Count, bool IsAssignPassive);
	void AddFullInventoryLog_Client();
};

// 0xE0 (0x150 - 0x70)
// Class Pal.PalPlayerManager
class UPalPlayerManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_3CEA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalPlayerClassStructSet              PlayerClassStructSet;                              // 0x88(0x28)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalPlayerAccount*> PlayerAccountMap;                                  // 0xB0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UPalLoginPlayer*>   LoginPlayerMap;                                    // 0x100(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalPlayerManager* GetDefaultObj();

};

// 0x18 (0x290 - 0x278)
// Class Pal.PalPlayerMenuUI
class UPalPlayerMenuUI : public UUserWidget
{
public:
	struct FPalItemSlotId                        SelectItemSlot;                                    // 0x278(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDraging;                                         // 0x28C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3CEC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerMenuUI* GetDefaultObj();

	void SetSelectedItemSlot(const struct FPalItemSlotId& SelectSlot);
	void SetIsDraging(bool Draging);
	void OpenWidget(TSubclassOf<class UUserWidget> WidgetClass, class UUserWidget** OutWidget, int32* ZOrder);
	void OpenInventoryMenu();
	void OpenChestMenu(class UPalItemContainer* ChestContainer);
	void InitBindAxis();
	struct FPalItemSlotId GetSelectedItemSlot();
	bool GetIsDragingt();
	void CreateDragWidget(const struct FPalItemSlotId& SlotID);
	void CloseInventoryMenu();
	void CloseChestMenu(class UPalItemContainer* ChestContainer);
	void BackOneWidget();
	void AddMouseYawInput(float Val);
	void AddMousePitchInput(float Val);
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalPlayerMenuUIManager
class UPalPlayerMenuUIManager : public UObject
{
public:
	uint8                                        Pad_3CED[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalPlayerMenuUI*                      PlayerMenuUI;                                      // 0x40(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalPlayerMenuUIManager* GetDefaultObj();

	void ToggleInventoryWindow();
	void Test_SetPlayerContainerID(struct FPalContainerId& ContainerId);
	struct FPalContainerId Test_GetPlayerContainerID();
	void SelectItem(const struct FPalItemSlotId& SelectSlot);
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalPlayerOtomoData
class UPalPlayerOtomoData : public UObject
{
public:
	struct FPalContainerId                       OtomoCharacterContainerId;                         // 0x28(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalOtomoPalOrderType             OtomoOrder;                                        // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CEE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerOtomoData* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Pal.PalPlayerPartyPalHolder
class UPalPlayerPartyPalHolder : public UObject
{
public:
	class UPalIndividualCharacterHandle*         FirstOtomoPal;                                     // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalIndividualCharacterHandle*         SecondOtomoPal;                                    // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalIndividualCharacterHandle*> BenchMember;                                       // 0x38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	float                                        FirstCoolTimer;                                    // 0x48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SecondCoolTimer;                                   // 0x4C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CoolDownTime;                                      // 0x50(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3CF3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerPartyPalHolder* GetDefaultObj();

	void UpdateCoolTimer(float DeltaTime);
	void Test_SetClassArray(const TArray<TSubclassOf<class APalCharacter>>& MonsterClassArray);
	void SetUpPartyHolder(float CoolDownTime_Second);
	void RestartCoolTime(bool SecondPal);
	bool PawnOtmoIsPartyOtomo(bool SecondPal, class UPalIndividualCharacterHandle* IDHandle);
	bool IsUsableCommandSkill(bool SecondPal);
	void GetPartyMember(TArray<class UPalIndividualCharacterHandle*>* OutPartyMember);
	class UPalIndividualCharacterHandle* GetOtomoPal(bool SecondPal);
	float GetCoolTimeRate(bool SecondPal);
	void ChangePalSlot(bool SecondPal);
};

// 0xB00 (0xB28 - 0x28)
// Class Pal.PalPlayerRecordData
class UPalPlayerRecordData : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnRelicNumUpdate;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRelicNumAdd;                                     // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UPalPlayerRecordDataTrigger>> RecordDataTriggerClassArray;                       // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UPalPlayerRecordDataTrigger*>   RecordDataTriggerArray;                            // 0x58(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x68(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalPlayerRecordDataRepInfoArray_BoolVal TowerBossDefeatFlag;                               // 0x78(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	struct FPalPlayerRecordDataRepInfoArray_BoolVal NormalBossDefeatFlag;                              // 0x1F0(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	int32                                        BossDefeatCount;                                   // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TribeCaptureCount;                                 // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalPlayerRecordDataRepInfoArray_IntVal PalCaptureCount;                                   // 0x370(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	struct FPalPlayerRecordDataRepInfoArray_BoolVal PaldeckUnlockFlag;                                 // 0x4E8(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	int32                                        PalCaptureCountBonusCount_Tier1;                   // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PalCaptureCountBonusCount_Tier2;                   // 0x664(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PalCaptureCountBonusCount_Tier3;                   // 0x668(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalPlayerRecordDataRepInfoArray_BoolVal RelicObtainForInstanceFlag;                        // 0x670(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	int32                                        RelicPossessNum;                                   // 0x7E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RelicPossessNumMirror;                             // 0x7EC(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalPlayerRecordDataRepInfoArray_BoolVal NoteObtainForInstanceFlag;                         // 0x7F0(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	struct FPalPlayerRecordDataRepInfoArray_BoolVal FastTravelPointUnlockFlag;                         // 0x968(0x178)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	struct FPalStageInstanceId                   EnteringStageInstanceId;                           // 0xAE0(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3CF8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGuid>                         BuildingObjectMapObjectInstanceIds;                // 0xAF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	class FString                                Debug_EnteringStageDataLayerName;                  // 0xB08(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Debug_LastEnteredStageDataLayerName;               // 0xB18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalPlayerRecordData* GetDefaultObj();

	void OnRep_RelicNum();
	void OnRelicNumUpdateDelegate__DelegateSignature();
	void OnRelicNumAddedDelegate__DelegateSignature(int32 AddNum);
	void OnCompleteBuild_ServerInternal(class UPalMapObjectModel* MapObjectModel);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPlayerRecordDataUtility
class UPalPlayerRecordDataUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalPlayerRecordDataUtility* GetDefaultObj();

	void SetRecordData_TribeIdFlag_ForServer(class UObject* WorldContextObject, struct FPalPlayerRecordDataRepInfoArray_BoolVal* RecordData, enum class EPalTribeID Key);
	void SetRecordData_TribeIdCount_ForServer(class UObject* WorldContextObject, struct FPalPlayerRecordDataRepInfoArray_IntVal* RecordData, enum class EPalTribeID Key, int32 Value);
	void SetRecordData_Int_ForServer(class UObject* WorldContextObject, struct FPalPlayerRecordDataRepInfoArray_IntVal* RecordData, class FName Key, int32 Value);
	void SetRecordData_BossDefeat_ForServer(class UObject* WorldContextObject, struct FPalPlayerRecordDataRepInfoArray_BoolVal* RecordData, enum class EPalBossType Key);
	void SetRecordData_Bool_ForServer(class UObject* WorldContextObject, struct FPalPlayerRecordDataRepInfoArray_BoolVal* RecordData, class FName Key, bool bValue);
	bool GetRecordData_TribeIdFlag(struct FPalPlayerRecordDataRepInfoArray_BoolVal& RecordData, enum class EPalTribeID Key);
	int32 GetRecordData_TribeIdCount(struct FPalPlayerRecordDataRepInfoArray_IntVal& RecordData, enum class EPalTribeID Key);
	int32 GetRecordData_Int(struct FPalPlayerRecordDataRepInfoArray_IntVal& RecordData, class FName Key);
	int32 GetRecordData_BossDefeat(struct FPalPlayerRecordDataRepInfoArray_BoolVal& RecordData, enum class EPalBossType Key);
	int32 GetRecordData_BoolCount(struct FPalPlayerRecordDataRepInfoArray_BoolVal& RecordData);
	bool GetRecordData_Bool(struct FPalPlayerRecordDataRepInfoArray_BoolVal& RecordData, class FName Key);
};

// 0x2E0 (0x308 - 0x28)
// Class Pal.PalPlayerLocalRecordData
class UPalPlayerLocalRecordData : public UObject
{
public:
	TMap<enum class EPalTribeID, int32>          Local_ActivateOtomoCount;                          // 0x28(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<enum class EPalTribeID, bool>           Local_PalEncountFlag;                              // 0x78(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<enum class EPalTribeID, bool>           Local_PalDexNewFlag;                               // 0xC8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, bool>                      Local_NoteCheckedFlag;                             // 0x118(0x50)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<enum class EPalPlayerInventoryType, int32> Local_LoadoutSelectedIndexMap;                     // 0x168(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, int32>                     Local_NewUnlockedBuilds;                           // 0x1B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	bool                                         Local_IsBuildMenuChecked;                          // 0x208(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D0D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, int32>                     Local_NPCTalkCountMap;                             // 0x210(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, bool>                      Local_NewUnlockedTechs;                            // 0x260(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	TMap<class FName, bool>                      Local_ShowedCutsceneFlag;                          // 0x2B0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPublic)
	int32                                        Local_PlayTime;                                    // 0x300(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D0F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPlayerLocalRecordData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPlayerRecordDataInternals
class UPalPlayerRecordDataInternals : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalPlayerRecordDataInternals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPlayerRecordDataTrigger
class UPalPlayerRecordDataTrigger : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalPlayerRecordDataTrigger* GetDefaultObj();

};

// 0x408 (0x7B0 - 0x3A8)
// Class Pal.PalPlayerState
class APalPlayerState : public APlayerState
{
public:
	struct FUniqueNetIdRepl                      WinGDKUniqueId;                                    // 0x3A8(0x30)(Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D38[0x88];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnReportCrimeIdsDelegate;                          // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReleaseWantedDelegate;                           // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartCrimeDelegate;                              // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndCrimeDelegate;                                // 0x490(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompleteLoadInitWorldPartitionDelegate_InClient; // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 PlayerUId;                                         // 0x4B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalInstanceID                        IndividualHandleId;                                // 0x4C0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CachedPlayerLocation;                              // 0x4F0(0x18)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D3B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 CachedPlayerRotation;                              // 0x510(0x20)(Edit, Net, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalPlayerOtomoData*                   OtomoData;                                         // 0x530(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalPlayerDataCharacterMake*           CharacterMakeData;                                 // 0x538(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalPlayerInventoryData*               InventoryData;                                     // 0x540(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalPlayerDataPalStorage*              PalStorage;                                        // 0x548(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalTechnologyData*                    TechnologyData;                                    // 0x550(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalPlayerRecordData*                  RecordData;                                        // 0x558(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSelectedInitMapPoint;                           // 0x560(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDetectedInValidPlayer;                            // 0x561(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D3C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalPlayerLocalRecordData*             LocalRecordData;                                   // 0x568(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalWorldMapUIData*                    WorldMapData;                                      // 0x570(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalQuestManager*                      QuestManager;                                      // 0x578(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalGroupGuildBase*                    GuildBelongTo;                                     // 0x580(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D3D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalNetworkPlayerStateComponent*       NetworkComp;                                       // 0x5A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalSyncTeleportComponent*             SyncTeleportComp;                                  // 0x5B0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDateTime                             StartPlayTime;                                     // 0x5B8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsNewCharacter;                                   // 0x5C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D3E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 LoginTryingPlayerUId_InServer;                     // 0x5C4(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D3F[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsCompleteSyncPlayerFromServer_InClient;          // 0x5EE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D40[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalPlayerAccountInitData             AcountInitData;                                    // 0x5F0(0xA8)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPalLogInfo_DropPal>           DropPalInfo;                                       // 0x698(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UPalDialogParameter_RequestJoinGuild*  RequestJoinGuildDialogParameter;                   // 0x6A8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, struct FTimerHandle>      WaitLoadingWorldPartitionTimerMap;                 // 0x6B0(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D41[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChatCounter;                                       // 0x750(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3D42[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalPlayerState* GetDefaultObj();

	void WaitWorldPartitionDelegate(struct FTimerHandle* OutTimerHandle, FDelegateProperty_ Delegate);
	void StartCrimeDelegate__DelegateSignature(const struct FGuid& CrimeInstanceId);
	void ShowTowerBossDefeatRewardUI();
	void ShowBossDefeatRewardUI(int32 TechPoint);
	void SendDeath_ToServer(class APalCharacter* Target);
	void SendDamage_ToServer(class APalCharacter* Target, struct FPalDamageInfo& Info);
	void SendAccountInitData_ForServer(struct FPalPlayerAccountInitData& AccountInitData);
	void ReturnSelfSingleDelegate__DelegateSignature(class APalPlayerState* PlayerState);
	void ReturnSelfDelegate__DelegateSignature(class APalPlayerState* PlayerState);
	void RequestUnlockFastTravelPoint_ToServer(class FName UnlockFlagKey);
	void RequestSpawnMonsterForPlayer(class FName& CharacterID, int32 Num, int32 Level);
	void RequestRespawn();
	void RequestObtainLevelObject_ToServer(class APalLevelObjectObtainable* TargetObject);
	void RequestJoinPlayer_ToServer(struct FGuid& JoinPlayerUId, struct FPalPlayerInitializeParameter& InitPlayerParam);
	void RequestBotLocation();
	void RequestAccountInitData_ForClient();
	void ReportCrimeIdsDelegate__DelegateSignature(class UPalIndividualCharacterHandle* CriminalHandle, TArray<class FName>& CrimeIds);
	void ReleaseWantedDelegate__DelegateSignature(class UPalIndividualCharacterHandle* CriminalHandle);
	void RegisterForPalDex_ToClient(struct FPalUIPalCaptureInfo& CaptureInfo);
	void RegisterForPalDex_ServerInternal(const struct FPalInstanceID& IndividualId);
	void ReceiveNotifyLoginComplete();
	void OpenRequestJoinGuildDialog_ToClient(struct FPalInstanceID& RequestPlayerInstanceId);
	void OnUpdatePlayerInfoInGuildBelongTo(class UPalGroupGuildBase* Guild, struct FGuid& InPlayerUId, struct FPalGuildPlayerInfo& InPlayerInfo);
	void OnRep_WinGDKUniqueId();
	void OnRep_PlayerUId();
	void OnRep_GuildBelongTo(class UPalGroupGuildBase* OldValue);
	void OnRelicNumAdded(int32 AddNum);
	void OnRecievedGuildJoinRequestResult(enum class EPalGuildJoinRequestResult ResultType, struct FPalInstanceID& RequestPlayerInstanceId, struct FPalInstanceID& TargerPlayerInstanceId);
	void OnNotifiedReturnToFieldFromStage_ToClient();
	void OnNotifiedEnteredStage_ToClient();
	void OnCreatePlayerIndividualHandle_InServer(const struct FPalInstanceID& ID);
	void OnCreatedGrantedIndividualHandle_ServerInternal(const struct FPalInstanceID& IndividualId);
	void OnCompleteSyncWorld_InClient(class APalPlayerState* PlayerState);
	void OnCompleteSyncPlayer_InClient(class APalPlayerState* PlayerState);
	void OnCompleteSyncAll_InClient(class APalPlayerState* PlayerState);
	void OnCompleteLoadWorldPartitionDelegate__DelegateSignature();
	void OnCompleteLoadInitWorldPartitionDelegate__DelegateSignature();
	void OnCompleteLoadInitWorldPartition_InClient(class APalPlayerState* PlayerState);
	void OnClosedRequestJoinGuildDialog(bool Result);
	void OnClosedOverBaseCampDialog(bool Result);
	void OnClosedCheckBaseCampAuthorityDialog(bool Result);
	void NotifyStartInitSelectMap_ToServer();
	void NotifyRunInitialize_ToClient();
	void NotifyRemovedCharacterFromPalBox_ToServer(struct FPalInstanceID& IndividualId);
	void NotifyOpenClosePalBox_ToServer(bool IsOpen);
	void NotifyObtainComplete_ToServer(struct FPalInstanceID& IndividualId);
	void NotifyInvalidPlayer_ToClient();
	void NotifyForceUpdateInventory_ToServer(bool IsOpen);
	void NotifyFailedJoin_ToClient(enum class EPalPlayerJoinResult Result);
	void NotifyDropOtomoInfo(TArray<struct FPalLogInfo_DropPal>& InDropPalInfo);
	void NotifyCompleteInitSelectMap_ToServer();
	void NotifyClientInitializeToServer(const struct FUniqueNetIdRepl& ReceiveUniqueId);
	void NotifyClientInitializedEssential_ToServer();
	void LoadTitleLevel(bool bIsSaveSuccess);
	bool IsSelectedInitMapPoint();
	bool IsInStage();
	bool IsCompleteLoadInitWorldPartition();
	void GrantExpForParty(int32 ExpValue);
	class UPalWorldMapUIData* GetWorldMapData();
	class UPalTechnologyData* GetTechnologyData();
	class UPalSyncTeleportComponent* GetSyncTeleportComp();
	class UPalPlayerRecordData* GetRecordData();
	class UPalQuestManager* GetQuestManager();
	struct FPalPlayerInfoForMap GetPlayerInfoForMap();
	class UPalPlayerDataPalStorage* GetPalStorage();
	class UPalPlayerOtomoData* GetPalPlayerOtomoData();
	class UPalPlayerDataCharacterMake* GetPalPlayerCharacterMakeData();
	class UPalPlayerLocalRecordData* GetLocalRecordData();
	class UPalPlayerInventoryData* GetInventoryData();
	TArray<struct FPalLogInfo_DropPal> GetAndClearLastDropPalInfo();
	void FixedCharacterName(const class FString& CharacterName);
	void FixedCharacterMakeData(struct FPalPlayerDataCharacterMakeInfo& MakeInfo);
	void EnterChat_Receive(struct FPalChatMessage& ChatMessage);
	bool EnterChat(class FText Msg, enum class EPalChatCategory Category);
	void EndCrimeDelegate__DelegateSignature(const struct FGuid& CrimeInstanceId);
	void DropOtomoSingle_ToServer(const struct FVector& DropLocation, struct FPalInstanceID& DropID);
	void Debug_ShutdownToClient();
	void Debug_SetDestructionByCompleteBuiltFlag_ToServer();
	void Debug_RequestStopAICheckOfCharacter_ToServer(class APalCharacter* TargetCharacter);
	void Debug_RequestStartAICheckOfCharacter_ToServer(class APalCharacter* TargetCharacter);
	void Debug_RequestShutdownRemoteServer_ToServer();
	void Debug_RequestShutdownRemoteServer();
	void Debug_RequestDeletePlayerSelf_ToServer();
	void Debug_RequestDeletePlayerSelf();
	void Debug_RequestCauseServerCrash_ToServer();
	void Debug_RequestCauseServerCrash();
	void Debug_RequestAllowBroadcastAIInfoOfCharacter_ToServer(class APalCharacter* TargetCharacter);
	void Debug_RepairEquipment_ToServer();
	void Debug_ReceiveDeletePlayerSelf_ToRequestClient(bool bResult);
	void Debug_OnCreatedIndividual(const struct FPalInstanceID& ID);
	void Debug_DeleteWorldAndShutdownRemoteServer_ToServer();
	void Debug_DeleteWorldAndShutdownRemoteServer();
	void Debug_CaptureNewMonsterByDebugOtomoInfo_ToServer(struct FPalDebugOtomoPalInfo& Info);
	void Debug_CaptureNewMonster_ToServer(class FName CharacterID);
	void Debug_BuildDebugBaseCamp_ToServer(class FName CampMode, int32 WorkerCount);
	void CapturePalDelegate__DelegateSignature(struct FPalUIPalCaptureInfo& CaptureInfo);
	void CallOrRegisterOnCompleteSyncPlayerFromServer_InClient(FDelegateProperty_ Delegate);
	void CallOrRegisterOnCompleteLoadInitWorldPartition_InClient(FDelegateProperty_ Delegate);
	void AddItemGetLog_ToClient(struct FPalStaticItemIdAndNum& ItemAndNum);
	void AddFullInventoryLog_ToClient();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalPlayerUtility
class UPalPlayerUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalPlayerUtility* GetDefaultObj();

	void WritePlayerGrappling(struct FPalNetArchive& Blackboard, struct FVector& HitLocatoin, struct FVector& MoveEndLocation, float& Speed);
	void WritePlayerFeedItemTo(struct FPalNetArchive& Blackboard, struct FPalItemSlotId& ItemSlotId, int32& ItemNum);
	void ReadPlayerGrappling(struct FPalNetArchive& Blackboard, struct FVector* HitLocatoin, struct FVector* MoveEndLocation, float* Speed);
	void ReadPlayerFeedItemTo(struct FPalNetArchive& Blackboard, struct FPalItemSlotId* ItemSlotId, int32* ItemNum);
};

// 0x1B0 (0x1130 - 0xF80)
// Class Pal.PalPoseableMeshComponent
class UPalPoseableMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_3D5C[0x1B0];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalPoseableMeshComponent* GetDefaultObj();

	void SetBoneTransformByName(class FName BoneName, struct FTransform& InTransform, enum class EBoneSpaces BoneSpace);
	void SetBoneScaleByName(class FName BoneName, const struct FVector& InScale3D, enum class EBoneSpaces BoneSpace);
	void SetBoneRotationByName(class FName BoneName, const struct FRotator& InRotation, enum class EBoneSpaces BoneSpace);
	void SetBoneLocationByName(class FName BoneName, const struct FVector& InLocation, enum class EBoneSpaces BoneSpace);
	void ResetBoneTransformByName(class FName BoneName);
	struct FTransform GetBoneTransformByName(class FName BoneName, enum class EBoneSpaces BoneSpace);
	struct FVector GetBoneScaleByName(class FName BoneName, enum class EBoneSpaces BoneSpace);
	struct FRotator GetBoneRotationByName(class FName BoneName, enum class EBoneSpaces BoneSpace);
	struct FVector GetBoneLocationByName(class FName BoneName, enum class EBoneSpaces BoneSpace);
	void CopyPoseFromSkeletalComponent(class USkeletalMeshComponent* InComponentToCopy);
};

// 0x0 (0x308 - 0x308)
// Class Pal.PalPrimaryGameLayoutBase
class UPalPrimaryGameLayoutBase : public UPrimaryGameLayout
{
public:

	static class UClass* StaticClass();
	static class UPalPrimaryGameLayoutBase* GetDefaultObj();

	void ShowLiftIcon();
	void ShowFocusCursor(class UWidget* TargetWidget);
	void ShowCommonReward(struct FPalUICommonRewardDisplayData& RewardDisplayData);
	void ShowCommonItemInfo(struct FPalUICommonItemInfoDisplayData& DisplayData);
	void SetupLiftIcon();
	void HideLiftIcon();
	void HideFocusCursor();
	void HideCommonItemInfo();
	void FadeOut(enum class EPalFadeWidgetLayerType LayerType);
	void FadeIn(enum class EPalFadeWidgetLayerType LayerType, class UPalHUDDispatchParameter_FadeWidget* FadeParameter);
};

// 0x8 (0xD0 - 0xC8)
// Class Pal.PalProceduralFoliageComponent
class UPalProceduralFoliageComponent : public UProceduralFoliageComponent
{
public:
	class UShapeComponent*                       SpawningShape;                                     // 0xC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalProceduralFoliageComponent* GetDefaultObj();

};

// 0x0 (0x440 - 0x440)
// Class Pal.PalProgressBar
class UPalProgressBar : public UProgressBar
{
public:

	static class UClass* StaticClass();
	static class UPalProgressBar* GetDefaultObj();

	void SetFillImage(struct FSlateBrush& NewImage);
};

// 0x28 (0x50 - 0x28)
// Class Pal.PalQuestBlock
class UPalQuestBlock : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatedBlockDelegate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompletedBlockDelegate;                          // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         IsAutoComplete;                                    // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D64[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalQuestBlock* GetDefaultObj();

	void UpdatedBlockDelegate__DelegateSignature(class UPalQuestBlock* UpdatedQuestBlock);
	void Setup();
	void OnSetup_ForBP();
	void OnSetup();
	void OnComplete_ForBP();
	void OnComplete();
	void GetProgressText(class FText* OutText);
	void GetDescriptionText(class FText* OutText);
	void CompletedBlockDelegate__DelegateSignature(class UPalQuestBlock* CompletedQuestBlock);
	void Complete();
	bool CanComplete();
	void CallUpdateBlockDelegate_ForBP();
};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_BaseCampLevel
class UPalQuestBlock_BaseCampLevel : public UPalQuestBlock
{
public:
	int32                                        RequireLevel;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowBaseCampLevel;                                  // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x58(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_BaseCampLevel* GetDefaultObj();

	void OnTimer_CheckBaseCampLevel();
};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_CheckBossDefeat
class UPalQuestBlock_CheckBossDefeat : public UPalQuestBlock
{
public:
	enum class EPalBossType                      CheckBossType;                                     // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D65[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x58(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CheckBossDefeat* GetDefaultObj();

	void CheckFlag();
};

// 0x18 (0x68 - 0x50)
// Class Pal.PalQuestBlock_CheckPalCaptureNum
class UPalQuestBlock_CheckPalCaptureNum : public UPalQuestBlock
{
public:
	int32                                        RequireCount;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_PalMonsterData   CountPalName;                                      // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowCaptureCount;                                   // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x60(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CheckPalCaptureNum* GetDefaultObj();

	void CheckCount();
};

// 0x8 (0x58 - 0x50)
// Class Pal.PalQuestBlock_CheckTechnology
class UPalQuestBlock_CheckTechnology : public UPalQuestBlock
{
public:
	struct FPalDataTableRowName_RecipeTechnologyData RequireTechnologyName;                             // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CheckTechnology* GetDefaultObj();

	void OnUnlockedAnyTechnology();
};

// 0x0 (0x50 - 0x50)
// Class Pal.PalQuestBlock_CollectItem
class UPalQuestBlock_CollectItem : public UPalQuestBlock
{
public:

	static class UClass* StaticClass();
	static class UPalQuestBlock_CollectItem* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_CountBaseCamp
class UPalQuestBlock_CountBaseCamp : public UPalQuestBlock
{
public:
	int32                                        RequireCampCount;                                  // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowBaseCampCount;                                  // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x58(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CountBaseCamp* GetDefaultObj();

	void OnTimer_CheckBaseCamp();
};

// 0x30 (0x80 - 0x50)
// Class Pal.PalQuestBlock_CountBuild
class UPalQuestBlock_CountBuild : public UPalQuestBlock
{
public:
	struct FPalDataTableRowName_MapObjectData    RequireBuildObjectName;                            // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RequireBuildCount;                                 // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowBuildCount;                                     // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowBlueprintCount;                                 // 0x60(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D68[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UPalMapObjectModel>> CheckMapObjectModels;                              // 0x68(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x78(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CountBuild* GetDefaultObj();

	void OnTimer_CheckMapObject();
	void OnRepMapObjectModel_Client(class UPalMapObjectModel* MapObjectModel);
	void OnAddedMapObjectModel_Server(class UPalMapObjectModel* MapObjectModel, struct FVector& Vector);
};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_CountPickupItem
class UPalQuestBlock_CountPickupItem : public UPalQuestBlock
{
public:
	int32                                        RequireCount;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         DetectItemName;                                    // 0x54(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowPickupCount;                                    // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CountPickupItem* GetDefaultObj();

	void OnPickupItem(TArray<struct FPalItemAndNum>* ItemInfos);
};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_CountWorker
class UPalQuestBlock_CountWorker : public UPalQuestBlock
{
public:
	int32                                        RequireWorkerCount;                                // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowWorkerCount;                                    // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x58(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_CountWorker* GetDefaultObj();

	void OnTimer_CheckBaseCampWorker();
};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_DetectCapturePal
class UPalQuestBlock_DetectCapturePal : public UPalQuestBlock
{
public:
	int32                                        RequireCount;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_PalMonsterData   DetectPalName;                                     // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowCaptureCount;                                   // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalQuestBlock_DetectCapturePal* GetDefaultObj();

	void OnCapturedPal(struct FPalUIPalCaptureInfo& CaptureInfo);
};

// 0x10 (0x60 - 0x50)
// Class Pal.PalQuestBlock_DetectCraft
class UPalQuestBlock_DetectCraft : public UPalQuestBlock
{
public:
	int32                                        RequireCount;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalDataTableRowName_ItemData         DetectItemName;                                    // 0x54(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowCraftNumCount;                                  // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalQuestBlock_DetectCraft* GetDefaultObj();

	void OnCraftItem(TArray<struct FPalItemAndNum>* ItemInfos);
};

// 0x8 (0x58 - 0x50)
// Class Pal.PalQuestBlock_DetectMeal
class UPalQuestBlock_DetectMeal : public UPalQuestBlock
{
public:
	int32                                        RequireCount;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowMealCount;                                      // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalQuestBlock_DetectMeal* GetDefaultObj();

	void OnTriedMeal();
};

// 0x8 (0x58 - 0x50)
// Class Pal.PalQuestBlock_OpenSurvivalGuide
class UPalQuestBlock_OpenSurvivalGuide : public UPalQuestBlock
{
public:
	struct FTimerHandle                          CheckTimerHandle;                                  // 0x50(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestBlock_OpenSurvivalGuide* GetDefaultObj();

	void OnTimer_CheckOpen();
};

// 0x0 (0x50 - 0x50)
// Class Pal.PalQuestBlock_UseStatusPoint
class UPalQuestBlock_UseStatusPoint : public UPalQuestBlock
{
public:

	static class UClass* StaticClass();
	static class UPalQuestBlock_UseStatusPoint* GetDefaultObj();

	void OnUpdateStatusPoint();
};

// 0xD0 (0xF8 - 0x28)
// Class Pal.PalQuestData
class UPalQuestData : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatedQuestDelegate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompletedQuestDelegate;                          // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalQuestBlock*                        NowQuestBlock;                                     // 0x48(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D6C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class UPalQuestBlock>>  QuestBlockList;                                    // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FPalCommonQuestRewardData             CommonRewardData;                                  // 0x70(0x58)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UPalQuestRewardGiver>    CustomQuestRewardGiverClass;                       // 0xC8(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestData* GetDefaultObj();

	void UpdatedQuestDelegate__DelegateSignature(class UPalQuestData* UpdatedQuest);
	void ProgressInternal();
	void OnUpdatedQuestBlock(class UPalQuestBlock* UpdatedBlock);
	void OnCompletedQuestBlock(class UPalQuestBlock* CompletedBlock);
	void Initialize(int32 BlockIndex, class FName& InQuestName);
	void GetQuestDataName(class FName* OutName);
	void GetQuestBlock(class UPalQuestBlock** OutBlock);
	int32 GetNowQuestBlockIndex();
	void GetCustomRewardGiverClass(TSoftClassPtr<class UPalQuestRewardGiver>* OutClass);
	void GetCommonRewardData(struct FPalCommonQuestRewardData* OutData);
	void CompleteQuestDelegate__DelegateSignature(class UPalQuestData* CompletedQuest);
	bool CompleteNowBlock();
};

// 0x90 (0xB8 - 0x28)
// Class Pal.PalQuestManager
class UPalQuestManager : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatedQuestDelegate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompletedQuestDelegate;                          // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FName, class UPalQuestData*>      OrderedQuestMap;                                   // 0x48(0x50)(Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          CompletedQuestNames;                               // 0x98(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            QuestDataSet;                                      // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalCommonQuestRewardGiver*            CommonRewardGiver;                                 // 0xB0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalQuestManager* GetDefaultObj();

	void UpdatedAnyQuestDelegate__DelegateSignature(class UPalQuestData* UpdatedQuest);
	void OnUpdatedQuest(class UPalQuestData* UpdatedQuest);
	void OnCompletedQuest(class UPalQuestData* CompletedQuest);
	bool IsAllQuestComplete();
	void CompletedAnyQuestDelegate__DelegateSignature(class UPalQuestData* CompletedQuest);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalQuestRewardGiver
class UPalQuestRewardGiver : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalQuestRewardGiver* GetDefaultObj();

	void TakeReward();
};

// 0x58 (0x80 - 0x28)
// Class Pal.PalCommonQuestRewardGiver
class UPalCommonQuestRewardGiver : public UPalQuestRewardGiver
{
public:
	struct FPalCommonQuestRewardData             RewardData;                                        // 0x28(0x58)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalCommonQuestRewardGiver* GetDefaultObj();

	void SetCommonRewardData(const struct FPalCommonQuestRewardData& InRewardList);
};

// 0x48 (0x478 - 0x430)
// Class Pal.PalRadarChartWidgetBase
class UPalRadarChartWidgetBase : public UPalCustomPrimitiveWidget
{
public:
	enum class EPalRadarChartDrawType            DrawType;                                          // 0x430(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D7A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ParameterNum;                                      // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsMinMaxValuePerParam;                             // 0x438(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D7B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ParameterValueMin;                                 // 0x440(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                ParameterValueMax;                                 // 0x450(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FColor                                FillColor;                                         // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                MaxValuefillColor;                                 // 0x464(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                BorderColor;                                       // 0x468(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        borderSize;                                        // 0x46C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCheckParameterMaxValue;                          // 0x470(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D7C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalRadarChartWidgetBase* GetDefaultObj();

	void SetParameterValue(int32 Index, int32 Value);
	int32 GetMinValue(int32 Index);
	int32 GetMaxValue(int32 Index);
	void BuildVertexData();
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalRagdollPreset
class UPalRagdollPreset : public UObject
{
public:
	TArray<class FName>                          LockBoneNames;                                     // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        LinearDamping;                                     // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngularDamping;                                    // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalRagdollPreset* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Pal.PalRandomIncidentActionBase
class UPalRandomIncidentActionBase : public UObject
{
public:
	uint8                                        Pad_3D86[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRandomIncidentActionNotify;                      // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsTickable;                                       // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3D87[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalRandomIncidentActionBase* GetDefaultObj();

	void Terminate();
	void Start();
	void SetTickable(bool IsTickable);
	void SendNotify(enum class EPalRandomIncidentActionNotifyType NotifyType);
	void OnTick(float DeltaTime);
	void OnTerminate();
	void OnStart();
	void OnRandomIncidentActionNotify__DelegateSignature(enum class EPalRandomIncidentActionNotifyType NotifyType);
	void OnInitialized();
	void OnAllNpcSpawned();
	void Initialize();
};

// 0x30 (0x190 - 0x160)
// Class Pal.PalRandomIncidentBase
class UPalRandomIncidentBase : public UPalIncidentBase
{
public:
	FMulticastInlineDelegateProperty_            OnEnterAnyArea;                                    // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitAnyArea;                                     // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsFinishWithIncidentSpawner;                      // 0x180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalRandomIncidentSpawnerAreaType PrevEnterArea;                                     // 0x181(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D94[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalRandomIncidentBase* GetDefaultObj();

	void SetDisableFlagForNPCSpawner(struct FVector& Center, float Radius, class FName& Name, bool IsDisable);
	void OnExitAnyArea__DelegateSignature(enum class EPalRandomIncidentSpawnerAreaType AreaType, int32 PlayerId);
	void OnEnterAnyArea__DelegateSignature(enum class EPalRandomIncidentSpawnerAreaType AreaType, int32 PlayerId);
	bool IsOutbreakTable(class UDataTable* Table);
	bool IsFinishWithIncidentSpawner();
	int32 GetPlayerId();
	class APalRandomIncidentNPCSpawner* GetNPCSpawner();
	void CreateSpawnMonsterDataListFromOutbreakRow(class UDataTable* Table, TArray<struct FPalRandomIncidentSpawnMonsterData>& OutMonsterList, TArray<class FName>& Names);
	void BroadcastOnEnterAreaAndOnExitArea(int32 PlayerId);
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalRandomIncidentLotteryBase
class UPalRandomIncidentLotteryBase : public UObject
{
public:
	float                                        LotteryRate;                                       // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3D98[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalRandomIncidentSpawnIncidentParameter> LotteryParameters;                                 // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalRandomIncidentLotteryBase* GetDefaultObj();

	bool LotteryIncident(struct FPalRandomIncidentSpawnIncidentParameter* OutResult);
	float GetLotteryRate();
	int32 GetLotteryParameters(TArray<struct FPalRandomIncidentSpawnIncidentParameter>* OutParam);
};

// 0x70 (0x3D8 - 0x368)
// Class Pal.PalRandomIncidentNPCSpawner
class APalRandomIncidentNPCSpawner : public APalNPCSpawnerBase
{
public:
	FMulticastInlineDelegateProperty_            OnNPCSpawnedDelegate;                              // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNPCDespawnedDelegate;                            // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TMap<int32, struct FGuid>                    GroupMap;                                          // 0x388(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalRandomIncidentNPCSpawner* GetDefaultObj();

	void SpawnNPC(class FName& RowName, struct FPalRandomIncidentSpawnNPCData& SpawnData, int32 SpawnPointIndex, int32 SpawnPointCount);
	void SpawnMonster(class FName& RowName, struct FPalRandomIncidentSpawnMonsterData& SpawnData, int32 SpawnPointIndex, int32 SpawnPointCount);
	void RequestCreateGroups(const TArray<int32>& Groups);
	void NPCSpawned__DelegateSignature(class FName& RowName);
	void NPCDespawned__DelegateSignature(class FName& RowName);
	bool IsSpawnedCharacter(class UPalIndividualCharacterHandle* Handle);
	void GetSpawnedCharacters(TArray<class AActor*>* SpawnedCharacters);
	class UPalIndividualCharacterHandle* FindIndividualCharacterHandleByName(TMap<class UPalIndividualCharacterHandle*, class FName>& RowNames, class FName& Name);
	class APalCharacter* FindCharacterByName(class FName& Name);
	void DespawnCharacters();
	void AddGroupCharacterByGroupNo(class UPalIndividualCharacterHandle* AddIndividualHandle, int32 GroupNo);
};

// 0x130 (0x3C0 - 0x290)
// Class Pal.PalRandomIncidentSpawnerBase
class APalRandomIncidentSpawnerBase : public AActor
{
public:
	TMap<class FName, struct FPalRandomIncidentWalkPathReferenceData> WalkPointRefarences;                               // 0x290(0x50)(Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalRandomIncidentLotteryBase> LotteryClass;                                      // 0x2E0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CoolDownTimeMinute;                                // 0x2E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       CoolDownTimeSecRemain;                             // 0x2F0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EPalRandomIncidentSpawnerAreaType, float> AreaRadius;                                        // 0x2F8(0x50)(Edit, EditConst, NativeAccessSpecifierPrivate)
	int32                                        PlayerId;                                          // 0x348(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DA9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIncidentBase*                      ExecIncident;                                      // 0x350(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalRandomIncidentSpawnerStatus   Status;                                            // 0x358(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DAA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIncidentDynamicParameterRandom*    Parameter;                                         // 0x360(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalRandomIncidentLotteryBase*         Lottery;                                           // 0x368(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DAB[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalRandomIncidentSpawnerBase* GetDefaultObj();

	void UpdateStatusWaitPlayerOutside(float DeltaTime);
	void UpdateStatusIdle(float DeltaTime);
	void UpdateStatusExecuting(float DeltaTime);
	void UpdateStatusCoolDown(float DeltaTime);
	void StartCoolDown();
	void SetStatus(enum class EPalRandomIncidentSpawnerStatus NewStatus);
	void SetAreaRadius(enum class EPalRandomIncidentSpawnerAreaType AreaType, float Radius);
	void OnIncidentSpawned(class UPalIncidentBase* Incident, class UPalIncidentDynamicParameterRandom* DynamicParameter);
	bool IsInsideArea(enum class EPalRandomIncidentSpawnerAreaType Area, class ACharacter* PPlayer);
	TMap<enum class EPalRandomIncidentSpawnerAreaType, float> GetAreaRadiusAll();
	float GetAreaRadius(enum class EPalRandomIncidentSpawnerAreaType AreaType);
	class APalCharacter* FindPlayerInsideArea(enum class EPalRandomIncidentSpawnerAreaType AreaType);
	void EndIncident();
	void DestroyUnuseActors(TArray<class AActor*>* OutList);
	void CreateWalkPathList();
	void CollectWalkPoints(TArray<class AActor*>& WalkPoints);
	void CollectChildActors(TArray<class AActor*>* OutList);
	void AddWalkPath(class FName& PathName, TArray<class AActor*>& PointList);
};

// 0x190 (0x1C0 - 0x30)
// Class Pal.PalRCONSubsystem
class UPalRCONSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_3DAD[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalRCONSubsystem* GetDefaultObj();

};

// 0xA0 (0x638 - 0x598)
// Class Pal.PalRecastNavMesh
class APalRecastNavMesh : public ARecastNavMesh
{
public:
	uint8                                        Pad_3DAE[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalRecastNavMesh* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalRecordTrigger_BossBattle
class UPalRecordTrigger_BossBattle : public UPalPlayerRecordDataTrigger
{
public:

	static class UClass* StaticClass();
	static class UPalRecordTrigger_BossBattle* GetDefaultObj();

	void OnLocalPlayerBossBattleSuccessed(class APalPlayerCharacter* LocalPlayer, enum class EPalBossType BossType);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalRegionAreaTriggerBase
class APalRegionAreaTriggerBase : public AActor
{
public:
	class FName                                  BindRegionNameMsgID;                               // 0x290(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalRegionAreaTriggerBase* GetDefaultObj();

	void OnOverlap(class AActor* OtherActor);
	void OnEndOverlap(class AActor* OtherActor);
};

// 0x50 (0x78 - 0x28)
// Class Pal.PalReplaceSetting
class UPalReplaceSetting : public UObject
{
public:
	TMap<class FName, class FName>               CharacterIDReplacer;                               // 0x28(0x50)(Edit, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalReplaceSetting* GetDefaultObj();

};

// 0x120 (0x690 - 0x570)
// Class Pal.PalReplicationGraph
class UPalReplicationGraph : public UReplicationGraph
{
public:
	TArray<class UClass*>                        SpatializedClasses;                                // 0x570(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        NonSpatializedChildClasses;                        // 0x580(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        AlwaysRelevantClasses;                             // 0x590(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x5A0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*       AlwaysRelevantNode;                                // 0x5A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DB3[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalReplicationGraph* GetDefaultObj();

};

// 0x240 (0x290 - 0x50)
// Class Pal.PalReplicationGraphNode_AlwaysRelevant_ForConnection
class UPalReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	uint8                                        Pad_3DB5[0x220];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastPawn;                                          // 0x270(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAlwaysRelevantActorInfo>      PastRelevantActors;                                // 0x278(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DB6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalReplicationGraphNode_AlwaysRelevant_ForConnection* GetDefaultObj();

};

// 0x28 (0x78 - 0x50)
// Class Pal.PalReplicationGraphNode_PlayerStateFrequencyLimiter
class UPalReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	uint8                                        Pad_3DB7[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalReplicationGraphNode_PlayerStateFrequencyLimiter* GetDefaultObj();

};

// 0x0 (0x198 - 0x198)
// Class Pal.PalRetainerBox
class UPalRetainerBox : public URetainerBox
{
public:

	static class UClass* StaticClass();
	static class UPalRetainerBox* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalReticleTargetableInterface
class IPalReticleTargetableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalReticleTargetableInterface* GetDefaultObj();

	bool IsShowOutlineInReticleTargetting();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalReticleTargetUtility
class UPalReticleTargetUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalReticleTargetUtility* GetDefaultObj();

};

// 0x28 (0x8F0 - 0x8C8)
// Class Pal.PalRichTextBlockBase
class UPalRichTextBlockBase : public UCommonRichTextBlock
{
public:
	struct FDataTableRowHandle                   BindTextDatatableHandle;                           // 0x8C8(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsAutoTextSetWhenWidgetRebuilt;                    // 0x8D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DBD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DefaultStyleName;                                  // 0x8DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoAdjustScale;                                 // 0x8E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DBF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxWidth;                                          // 0x8E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalRichTextBlockBase* GetDefaultObj();

	void SetText_GDKInternal(bool IsSuccess, const class FString& OutString);
	void Left(int32 Count, class FText* OutText);
	int32 GetTextLengthWithoutTag();
	class FText GetBindedOriginalText();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalRichTextDecorator_TagText
class UPalRichTextDecorator_TagText : public URichTextBlockDecorator
{
public:

	static class UClass* StaticClass();
	static class UPalRichTextDecorator_TagText* GetDefaultObj();

	class FString GetTextStringInternal(class UObject* WorldContextObject, class FName ID);
	class FString GetTagName();
};

// 0x8 (0x38 - 0x30)
// Class Pal.PalRichTextIconDecorator
class UPalRichTextIconDecorator : public URichTextBlockImageDecorator
{
public:
	class UDataTable*                            ControlKeyIconData;                                // 0x30(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalRichTextIconDecorator* GetDefaultObj();

};

// 0x50 (0x640 - 0x5F0)
// Class Pal.PalRideMarkerComponent
class UPalRideMarkerComponent : public UStaticMeshComponent
{
public:
	enum class EPalRidePositionType              RidePositionType;                                  // 0x5F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAdjustRotation;                                 // 0x5F1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFixScale;                                       // 0x5F2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHiddenCharacterWhenAim;                           // 0x5F3(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableLookAtByRide;                              // 0x5F4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableFullBodyIK_UniqueRide;                     // 0x5F5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APalUniqueRideWeaponBase>  UniqueRidePalWeaponClass;                          // 0x5F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalDataTableRowName_PalMonsterData   UniqueRidePalID;                                   // 0x600(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeRiding;                                    // 0x608(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DC5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UPalRiderComponent>     Rider;                                             // 0x61C(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DC6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalActiveSkillSlot*                   SkillSlot;                                         // 0x628(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalUniqueRideWeaponBase*              WeaponActor;                                       // 0x630(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DC7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalRideMarkerComponent* GetDefaultObj();

	void SyncActiveSkill(class UPalIndividualCharacterParameter* IndividualParameter);
	void SetVisibleWeapon();
	void SetRidingFlag(bool bIsEnable);
	bool IsRiding();
	bool IsAdjustRotation();
	struct FTransform GetRideSocketTransform(enum class ERelativeTransformSpace Space);
	class APalCharacter* GetRiderCharacter();
	class FName GetAttackSocketName();
	class UPalActiveSkillSlot* GetActiveSkillSlot();
	void ChangeRiding__DelegateSignature(bool IsEnable);
	void CameraChangeActorActive(bool Active);
};

// 0x2E0 (0x380 - 0xA0)
// Class Pal.PalRiderComponent
class UPalRiderComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnRide;                                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGetOff;                                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UPalRideMarkerComponent> RidingMarker;                                      // 0xC0(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPalRidePositionType, struct FRiderActionInfo> RideActionMap;                                     // 0xC8(0x50)(Edit, NativeAccessSpecifierPublic)
	class AController*                           FullRidePalController;                             // 0x118(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          RideShakingMontage;                                // 0x120(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFlagContainer                        DisableRide;                                       // 0x128(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DisableGetOff;                                     // 0x178(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DisableAdjustRotation;                             // 0x1C8(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FVector                               DefaultMeshLocation;                               // 0x218(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DisableUniqueRideIK;                               // 0x230(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3DE0[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultJumpZVelocity;                              // 0x28C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EPalWeaponType, struct FVector2D> BackRideLimit;                                     // 0x290(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FPalDataTableRowName_PalMonsterData, TSubclassOf<class UPalUniqueRideAnimeAssetBase>> UniqueRideAnimBPClassMap;                          // 0x2E0(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<class FName, class UPalUniqueRideAnimeAssetBase*> UniqueRideAnimeAssetMap;                           // 0x330(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalRiderComponent* GetDefaultObj();

	void StopShakingMontage();
	void SetRideMarker(class UPalRideMarkerComponent* Marker);
	void SetDisableUniqueRideIK(class FName FlagName, bool IsDisable);
	void SetDisableRide(class FName FlagName, bool bIsDisable);
	void SetDisableGetOff(class FName FlagName, bool bIsDisable);
	void SetDisableAdjustRotation(class FName FlagName, bool bIsDisable);
	void SetDefaultMeshLocation(const struct FVector& Location);
	void RideClientRep(class UPalRideMarkerComponent* Marker);
	bool Ride(class UPalRideMarkerComponent* Marker, bool bIsSkipAnimation);
	void PlayShakingMontage(class UAnimMontage* OverrideMontage, float PlayRate);
	void OnStartInteractInClient(TScriptInterface<class IPalInteractiveObjectComponentInterface> Object);
	void OnStartInteractForServer();
	void OnStartAim();
	void OnSleepPlayer(int32 LastDamage);
	void OnSleep(int32 LastDamage);
	void OnRide__DelegateSignature(class AActor* RideActor);
	void OnInactive();
	void OnGetOff__DelegateSignature(class AActor* RideActor);
	void OnEndInteractInClient();
	void OnEndInteractForServer();
	void OnEndAim();
	void OnDeadPlayer(const struct FPalDeadInfo& DeadInfo);
	void OnDead(const struct FPalDeadInfo& DeadInfo);
	void OnChangeActive(bool IsActive);
	void OnCaptureStart();
	bool IsRiding();
	bool IsDisableRide();
	bool IsDisableGetOff();
	bool IsDisableAdjustRotation();
	class UPalUniqueRideAnimeAssetBase* GetUniqueRideAnimeAsset();
	class AActor* GetRindingActor();
	bool GetRiderModelIsBackward();
	class UPalRideMarkerComponent* GetRideMarker();
	bool GetOff(bool bIsSkipAnimation, bool bNoAnimCancel);
	struct FVector GetDefaultMeshLocation();
	enum class EPalRidePositionType GetCurrentRidePositionType();
	void DettachRiderNoAnimation();
	void DettachRider();
	bool CanUniqueRideIK();
	void AttachRiderNoAnimation();
	bool AttachRider();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorldBaseInfoSaveDataUtility
class UPalWorldBaseInfoSaveDataUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorldBaseInfoSaveDataUtility* GetDefaultObj();

	class FString GetWorldName(struct FPalWorldBaseInfoSaveData& SaveData);
};

// 0x2E8 (0x310 - 0x28)
// Class Pal.PalLocalWorldSaveGame
class UPalLocalWorldSaveGame : public USaveGame
{
public:
	int32                                        Version;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DE8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalLocalSaveData                     SaveData;                                          // 0x30(0x2E0)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalLocalWorldSaveGame* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Pal.PalWorldBaseInfoSaveGame
class UPalWorldBaseInfoSaveGame : public USaveGame
{
public:
	int32                                        Version;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Timestamp;                                         // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalWorldBaseInfoSaveData             SaveData;                                          // 0x38(0x28)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalWorldBaseInfoSaveGame* GetDefaultObj();

};

// 0x3B0 (0x3D8 - 0x28)
// Class Pal.PalWorldSaveGame
class UPalWorldSaveGame : public USaveGame
{
public:
	int32                                        Version;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Timestamp;                                         // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalWorldSaveData                     WorldSaveData;                                     // 0x38(0x3A0)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalWorldSaveGame* GetDefaultObj();

};

// 0x4C8 (0x4F0 - 0x28)
// Class Pal.PalWorldPlayerSaveGame
class UPalWorldPlayerSaveGame : public USaveGame
{
public:
	int32                                        Version;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Timestamp;                                         // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DED[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalWorldPlayerSaveData               SaveData;                                          // 0x40(0x4B0)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalWorldPlayerSaveGame* GetDefaultObj();

};

// 0x138 (0x160 - 0x28)
// Class Pal.PalWorldOptionSaveGame
class UPalWorldOptionSaveGame : public USaveGame
{
public:
	int32                                        Version;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3DEE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Timestamp;                                         // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalOptionWorldSaveData               OptionWorldData;                                   // 0x38(0x128)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalWorldOptionSaveGame* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGameWorldDataSaveInterface
class IPalGameWorldDataSaveInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalGameWorldDataSaveInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGamePlayerDataSaveInterface
class IPalGamePlayerDataSaveInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalGamePlayerDataSaveInterface* GetDefaultObj();

};

// 0x148 (0x170 - 0x28)
// Class Pal.PalSaveGameManager
class UPalSaveGameManager : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnStartedWorldAutoSave;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndedWorldAutoSave;                              // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartedLocalWorldAutoSave;                       // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndedLocalWorldAutoSave;                         // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartedPlayerAutoSave;                           // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndedPlayerAutoSave;                             // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UPalWorldSaveGame*                     LoadedWorldSaveData;                               // 0x88(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalLocalWorldSaveGame*                LoadedLocalWorldSaveData;                          // 0x90(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalWorldOptionSaveGame*               LoadedWorldOptionSaveData;                         // 0x98(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          AutoSaveWorldDataTimerHandle;                      // 0xA0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          AutoSaveLocalWorldDataTimerHandle;                 // 0xA8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AutoSaveWorldDefaultName;                          // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class IPalGameWorldDataSaveInterface>> GameSavers;                                        // 0xC0(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TScriptInterface<class IPalGamePlayerDataSaveInterface> PlayerDataSaver;                                   // 0xD0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsAppliedPlayerSaveData;                           // 0xE0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E00[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalAsyncSaveProcessParallel          WorldSaveProcess;                                  // 0xE8(0x60)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E01[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsForceDisableAutoSave;                           // 0x158(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsUseBackupSaveData;                              // 0x159(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E02[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NearSaveBackupNum;                                 // 0x15C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MinutesSaveBackupNum;                              // 0x160(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HourSaveBackupNum;                                 // 0x164(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DaySaveBackupNum;                                  // 0x168(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E03[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalSaveGameManager* GetDefaultObj();

	void StartWorldDataAutoSave();
	void StartLocalWorldDataAutoSave();
	void OnStartedWorldAutoSave__DelegateSignature();
	void OnStartedPlayerAutoSave__DelegateSignature();
	void OnStartedLocalWorldAutoSave__DelegateSignature();
	void OnFinishedWorldAsyncSaveGameInternal(const class FString& SlotName, int32 UserIndex, bool bSuccess, const class FString& WorldName, const class FString& Timestamp);
	void OnEndedWorldAutoSave__DelegateSignature(bool IsSuccess);
	void OnEndedPlayerAutoSave__DelegateSignature(bool IsSuccess);
	void OnEndedLocalWorldAutoSave__DelegateSignature(bool IsSuccess);
	bool IsValidWorldSaveDirectoryName_LocalData(const class FString& WorldSaveDirectoryName);
	bool IsValidWorldSaveDirectoryName(const class FString& WorldSaveDirectoryName);
	bool IsValidWorldData(const class FString& WorldName);
	bool IsValidLocalWorldData(const class FString& WorldName);
	bool IsLoadedWorldOptionData();
	bool IsLoadedWorldData();
	bool IsLoadedLocalWorldData();
	bool IsAppliedPlayerData();
	TArray<class FString> GetWorldNames();
	TMap<class FString, struct FPalWorldBaseInfoData> GetWorldBaseInfoMap();
	int32 GetMaxWorldSaveDataNum();
	class UPalWorldSaveGame* GetLoadedWorldSaveData();
	class UPalWorldOptionSaveGame* GetLoadedWorldOptionSaveData();
	class UPalLocalWorldSaveGame* GetLoadedLocalWorldSaveData();
};

// 0xB48 (0xCB0 - 0x168)
// Class Pal.PalScrollBox
class UPalScrollBox : public UPanelWidget
{
public:
	uint8                                        Pad_3E0B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScrollBoxStyle                       WidgetStyle;                                       // 0x170(0x350)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScrollBarStyle                       WidgetBarStyle;                                    // 0x4C0(0x770)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class USlateWidgetStyleAsset*                Style;                                             // 0xC30(0x8)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USlateWidgetStyleAsset*                BarStyle;                                          // 0xC38(0x8)(ZeroConstructor, Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOrientation                      Orientation;                                       // 0xC40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESlateVisibility                  ScrollBarVisibility;                               // 0xC41(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EConsumeMouseWheel                ConsumeMouseWheel;                                 // 0xC42(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E0D[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ScrollbarThickness;                                // 0xC48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                               ScrollbarPadding;                                  // 0xC58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         AlwaysShowScrollbar;                               // 0xC68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysShowScrollbarTrack;                          // 0xC69(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AllowOverscroll;                                   // 0xC6A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAnimateWheelScrolling;                            // 0xC6B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalDescendantScrollDestination   NavigationDestination;                             // 0xC6C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E0F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NavigationScrollPadding;                           // 0xC70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalScrollWhenFocusChanges        ScrollWhenFocusChanges;                            // 0xC74(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowRightClickDragScrolling;                     // 0xC75(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E10[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WheelScrollMultiplier;                             // 0xC78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E11[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUserScrolled;                                    // 0xC80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E12[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalScrollBox* GetDefaultObj();

	void SetWheelScrollMultiplier(float NewWheelScrollMultiplier);
	void SetScrollWhenFocusChanges(enum class EPalScrollWhenFocusChanges NewScrollWhenFocusChanges);
	void SetScrollOffset(float NewScrollOffset);
	void SetScrollBarVisibility(enum class ESlateVisibility NewScrollBarVisibility);
	void SetScrollbarThickness(struct FVector2D& NewScrollbarThickness);
	void SetScrollbarPadding(struct FMargin& NewScrollbarPadding);
	void SetOrientation(enum class EOrientation NewOrientation);
	void SetConsumeMouseWheel(enum class EConsumeMouseWheel NewConsumeMouseWheel);
	void SetAnimateWheelScrolling(bool bShouldAnimateWheelScrolling);
	void SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar);
	void SetAllowOverscroll(bool NewAllowOverscroll);
	void ScrollWidgetIntoView(class UWidget* WidgetToFind, bool AnimateScroll, enum class EPalDescendantScrollDestination ScrollDestination, float Padding);
	void ScrollToStart();
	void ScrollToEnd();
	float GetViewOffsetFraction();
	float GetScrollOffsetOfEnd();
	float GetScrollOffset();
	void EndInertialScrolling();
};

// 0x20 (0x58 - 0x38)
// Class Pal.PalScrollBoxSlot
class UPalScrollBoxSlot : public UPanelSlot
{
public:
	struct FMargin                               Padding;                                           // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EHorizontalAlignment              HorizontalAlignment;                               // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVerticalAlignment                VerticalAlignment;                                 // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E17[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalScrollBoxSlot* GetDefaultObj();

	void SetVerticalAlignment(enum class EVerticalAlignment InVerticalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetHorizontalAlignment(enum class EHorizontalAlignment InHorizontalAlignment);
};

// 0x0 (0x80 - 0x80)
// Class Pal.PalSetDefaultsCommandlet
class UPalSetDefaultsCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class UPalSetDefaultsCommandlet* GetDefaultObj();

};

// 0x258 (0x280 - 0x28)
// Class Pal.PalShooterAnimeAssetBase
class UPalShooterAnimeAssetBase : public UObject
{
public:
	struct FWeaponAnimationInfo                  AnimeInfo;                                         // 0x28(0x258)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalShooterAnimeAssetBase* GetDefaultObj();

	void ChangeRideMontage(class UAnimMontage* NextAnim, enum class EWeaponAnimationType AnimType);
};

// 0x138 (0x160 - 0x28)
// Class Pal.PalUniqueRideAnimeAssetBase
class UPalUniqueRideAnimeAssetBase : public UObject
{
public:
	struct FVector                               IKPoleLocation_Hand_R;                             // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IKPoleLocation_Hand_L;                             // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IKPoleLocation_Foot_R;                             // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IKPoleLocation_Foot_L;                             // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableLeftHandIK_BallMotion;                      // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E1B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         RidingAnimation;                                   // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RidingAnimation_Ball_Aim;                          // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RidingAnimation_Ball_Fire;                         // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3E1D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponNotifyAnimationInfo            WeaponNotifyAnimInfo_Ball_Aim;                     // 0xB0(0x58)(Transient, NativeAccessSpecifierPrivate)
	struct FWeaponNotifyAnimationInfo            WeaponNotifyAnimInfo_Ball_Fire;                    // 0x108(0x58)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUniqueRideAnimeAssetBase* GetDefaultObj();

	class UAnimSequence* GetRideAnimSequence();
};

// 0x900 (0x9A0 - 0xA0)
// Class Pal.PalShooterComponent
class UPalShooterComponent : public UActorComponent
{
public:
	uint8                                        Pad_3E3A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnChangeTargetDirectionDelegate;                   // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartAim;                                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndAim;                                          // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPullTrigger;                                     // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReleaseTrigger;                                  // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeState;                                     // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeaponNotifyDelegate;                            // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndShootingAnimationDelegate;                    // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeWeaponDelegate;                            // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReloadStartDelegate;                             // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReloadBulletDelegate;                            // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdatedUsableHandFlagDelegate;                   // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        WalkSpeedMultiplierInAim;                          // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkSpeedMultiplierInHipShoot;                     // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeWeaponInterpTime;                            // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E3C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalWeaponType, TSoftClassPtr<class UPalShooterAnimeAssetBase>> DefaultWeaponAnimeAssetBPSoftClassMap;             // 0x178(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<TSoftClassPtr<class APalWeaponBase>, TSoftClassPtr<class UPalShooterAnimeAssetBase>> OtherWeaponAnimeAssetBPSoftClassMap;               // 0x1C8(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<TSoftClassPtr<class APalWeaponBase>, enum class EPalWeaponType> WeaponCategoryForPreLoad;                          // 0x218(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         IsUseBlurUpdate;                                   // 0x268(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3E3E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalWeaponType, class UPalShooterAnimeAssetBase*> DefaultWeaponAnimeAssetMap;                        // 0x270(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<TSoftClassPtr<class APalWeaponBase>, class UPalShooterAnimeAssetBase*> OtherWeaponAnimeAssetMap;                          // 0x2C0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TSet<enum class EPalWeaponType>              LoadedDefaultWeaponSet;                            // 0x310(0x50)(Transient, NativeAccessSpecifierPrivate)
	TSet<TSoftClassPtr<class APalWeaponBase>>    LoadedOtherWeaponSet;                              // 0x360(0x50)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<enum class EWeaponAnimationType, struct FWeaponNotifyAnimationInfo> OverrideWeaponNotifyAnimationMap;                  // 0x3B0(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FVector                               TargetDirection;                                   // 0x400(0x18)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAiming;                                         // 0x418(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShooting;                                       // 0x419(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsRequestAim;                                     // 0x41A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsRequestPullTrigger;                             // 0x41B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsReloading;                                      // 0x41C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E40[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFlagContainer                        UseControllerRotationYawFlags;                     // 0x420(0x50)(NativeAccessSpecifierPrivate)
	class APalWeaponBase*                        HasWeapon;                                         // 0x470(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APalWeaponBase*                        CacheNextWeapon;                                   // 0x478(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FWeaponAnimationInfo                  PrevWeaponAnimationInfo;                           // 0x480(0x258)(Transient, NativeAccessSpecifierPrivate)
	bool                                         bIsDisableShootingTemporarily;                     // 0x6D8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E41[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLayeredFlagContainer                 DisableAimFlag;                                    // 0x6F0(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FLayeredFlagContainer                 DisableShootFlag;                                  // 0x700(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E42[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLayeredFlagContainer                 DisableWeaponChange;                               // 0x7B0(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        HiddenWeapon;                                      // 0x7C0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E43[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PullTriggerCountDown;                              // 0x960(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PullTriggerCountDownCount;                         // 0x964(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ElapsedTimeSinceWeaponChange;                      // 0x968(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalWeaponType                    OverrideWeaponType;                                // 0x96C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUnstoppable;                                      // 0x96D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsHoldTrigger;                                    // 0x96E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBufferedInput;                                    // 0x96F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShootingHold;                                   // 0x970(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E44[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APalWeaponBase*                        NPCWeapon;                                         // 0x988(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CurrentBulletBlurRate;                             // 0x990(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RapidFireBlur;                                     // 0x994(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRandomStream                         RandomStream;                                      // 0x998(0x8)(Net, ZeroConstructor, Transient, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalShooterComponent* GetDefaultObj();

	void StopWeaponChangeAnimation();
	void StopReloadInternal();
	void StopReload();
	void StopPullTriggerAnime_forBP();
	void StartAimDelegate__DelegateSignature();
	void StartAim();
	void SetUsedRightHand(class FName FlagName, bool bIsUsed);
	void SetUsedLeftHand(class FName FlagName, bool bIsUsed);
	void SetupInputComponent(class UInputComponent* InputComponent);
	void SetTargetDirection_ToServer(const struct FVector& TargetDirection);
	void SetTargetDirection(struct FVector& Direction);
	void SetShootingHold(bool IsHold);
	void SetOverrideWeaponType(enum class EPalWeaponType Type);
	void SetHiddenAttachWeapon(class FName FlagName, bool IsHidden);
	void SetDisableWeaponForUI(bool Disable);
	void SetDisableWeaponChangeAnime(class FName FlagName, bool bIsUsed);
	void SetDisableShootFlag_Layered(enum class EPalShooterFlagContainerPriority Priority, class FName FlagName, bool IsDisable);
	void SetDisableShootFlag(class FName FlagName, bool IsDisable);
	void SetDisableReloadFlag(class FName FlagName, bool IsDisable);
	void SetDisableLeftHandAttachFlag(class FName FlagName, bool IsDisable);
	void SetDisableEndAim(class FName FlagName, bool IsDisable);
	void SetDisableChangeWeaponFlag_Layered(enum class EPalShooterFlagContainerPriority Priority, class FName FlagName, bool IsDisable);
	void SetDisableChangeWeaponFlag(class FName FlagName, bool IsDisable);
	void SetDisableAimFlag_Layered(enum class EPalShooterFlagContainerPriority Priority, class FName FlagName, bool IsDisable);
	void SetDisableAimFlag(class FName FlagName, bool IsDisable);
	void ReturnTriggerDelegate__DelegateSignature();
	void ResetOverrideWeaponType();
	void ReloadWeaponInternal();
	void ReloadWeapon();
	void ReleaseTrigger();
	void PullTriggerDelegate__DelegateSignature();
	void PullTrigger();
	void OnWeaponNotifyDelegate__DelegateSignature(enum class EWeaponNotifyType Type);
	void OnWeaponNotify(enum class EWeaponNotifyType Type);
	void OnWeaponAnimationNotifyEnd(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
	void OnWeaponAnimationNotifyBegin(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
	void OnUpdatedUsableHandFlag__DelegateSignature(bool CanUseLeftHandFlag, bool CanUseRightHandFlag);
	void OnStartOwnerAction(class UPalActionBase* Action);
	void OnReloadStart__DelegateSignature();
	void OnReloadBullet__DelegateSignature();
	void OnOwnerAnimInitialized();
	void OnLanded(class UPalCharacterMovementComponent* Component, struct FHitResult& Hit);
	void OnJump(class UPalCharacterMovementComponent* Component);
	void OnEndShootingAnimation__DelegateSignature(class UAnimMontage* Montage);
	void OnEndReloadAnimation(class UAnimMontage* Montage, bool bInterrupted);
	void OnDead(const struct FPalDeadInfo& DeadInfo);
	void OnCrouch(class UPalCharacterMovementComponent* Component, bool bIsCrouch);
	void OnChangeWeapon__DelegateSignature(class APalWeaponBase* Weapon);
	void OnChangeTargetDirection();
	void OnChangeChangeImportance(enum class EPalCharacterImportanceType Next);
	bool IsShooting();
	bool IsReloading();
	bool IsPlayShootingAnimation();
	bool IsHiddenAttachWeapon();
	bool IsAiming();
	class UPalShooterAnimeAssetBase* GetThrowAnimAsset();
	struct FVector GetTargetDirection();
	struct FWeaponAnimationInfo GetPrevWeaponAnimationInfo();
	class APalWeaponBase* GetHasWeapon();
	struct FWeaponAnimationInfo GetCurrentWeaponAnimationInfo();
	struct FRidingAnimationInfo GetCurrentRidingAnimationInfo();
	float GetCurrentBulletBlurRate();
	float GetChangeWeaponAnimationWeight();
	class UPalShooterAnimeAssetBase* GetBowAnimAsset();
	void EndAimDelegate__DelegateSignature();
	void EndAim();
	void ChangeWeapon(class APalWeaponBase* Weapon);
	void ChangeTargetDirectionDelegate__DelegateSignature(const struct FVector& Direction);
	void ChangeStateDelegate__DelegateSignature(bool IsAim, bool IsShoot);
	void ChangeIsShooting(bool IsShooting);
	void ChangeIsAiming(bool IsAiming);
	bool CanWeaponChangeAnime();
	bool CanUseWeapon(class APalWeaponBase* Weapon);
	bool CanUseRightHand();
	bool CanUseLeftHand();
	bool CanShoot();
	bool CanReload();
	bool CanLeftHandAttach();
	bool CanChangeNextWeapon_Layered(enum class EPalShooterFlagContainerPriority Priority);
	bool CanChangeNextWeapon();
	bool CanAutoAim();
	bool CanAim();
	void BowPullAnimeEnd();
	void AttachWeapon_ForPartnerSkillPalWeapon_ToAll(class APalWeaponBase* Weapon);
	void AttachWeapon_ForNPC_ToAll(bool IsNotNull);
	void AttachWeapon(class APalWeaponBase* Weapon);
	void AddRapidFireBlur();
};

// 0x8 (0x3A8 - 0x3A0)
// Class Pal.PalSpringArmComponent
class UPalSpringArmComponent : public USpringArmComponent
{
public:
	enum class ECollisionChannel                 WaterProbeChannel;                                 // 0x3A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E46[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalSpringArmComponent* GetDefaultObj();

};

// 0x358 (0x700 - 0x3A8)
// Class Pal.PalShooterSpringArmComponent
class UPalShooterSpringArmComponent : public UPalSpringArmComponent
{
public:
	float                                        CameraInterpTime;                                  // 0x3A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimingCameraLagSpeed;                              // 0x3AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LengthInterpCurve;                                 // 0x3B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           OffsetInterpCurve;                                 // 0x3B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkCameraArmLength;                               // 0x3C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E4F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WalkCameraOffset;                                  // 0x3C8(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HipShootCameraArmLength;                           // 0x3E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E50[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HipShootCameraOffset;                              // 0x3E8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimCameraArmLength;                                // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AimCameraOffset;                                   // 0x408(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPalWeaponType, struct FShooterSpringCameraParameter> DefaultWeaponStandCameraParameterMap;              // 0x420(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<TSoftClassPtr<class APalWeaponBase>, struct FShooterSpringCameraParameter> UniqueWeaponStandCameraParameterMap;               // 0x470(0x50)(Edit, NativeAccessSpecifierPublic)
	float                                        AirCameraArmLength;                                // 0x4C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AirCameraOffset;                                   // 0x4C8(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirHipShootCameraArmLength;                        // 0x4E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E53[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AirHipShootCameraOffset;                           // 0x4E8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirAimCameraArmLength;                             // 0x500(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E54[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AirAimCameraOffset;                                // 0x508(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyCameraArmLength;                                // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E55[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FlyCameraOffset;                                   // 0x528(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyHipShootCameraArmLength;                        // 0x540(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E56[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FlyHipShootCameraOffset;                           // 0x548(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyAimCameraArmLength;                             // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E57[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FlyAimCameraOffset;                                // 0x568(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchCameraArmLength;                             // 0x580(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E58[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CrouchCameraOffset;                                // 0x588(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchHipShootCameraArmLength;                     // 0x5A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CrouchHipShootCameraOffset;                        // 0x5A8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchAimCameraArmLength;                          // 0x5C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CrouchAimCameraOffset;                             // 0x5C8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingCameraArmLength;                            // 0x5E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SlidingCameraOffset;                               // 0x5E8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingHipShootCameraArmLength;                    // 0x600(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SlidingHipShootCameraOffset;                       // 0x608(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlidingAimCameraArmLength;                         // 0x620(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E5F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SlidingAimCameraOffset;                            // 0x628(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeadCameraArmLength;                               // 0x640(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E60[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DeadCameraOffset;                                  // 0x648(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E61[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFixedPoint64                         PrevPlayerHp;                                      // 0x6A8(0x8)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        DefaultCameraLagSpeed;                             // 0x6B0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E62[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalShooterComponent*                  ShooterComponent;                                  // 0x6B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalCharacterMovementComponent*        MoveComponent;                                     // 0x6C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalCharacterParameterComponent*       ParameterComponent;                                // 0x6C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalDamageReactionComponent*           DamageReactionComponent;                           // 0x6D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatContainer                       ArmLengthScaleContainer;                           // 0x6D8(0x10)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E65[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalShooterSpringArmComponent* GetDefaultObj();

	void UpdateCameraInterp(float DeltaTime);
	void UnregisterAdditionalOffsets();
	void UnregisterAdditionalOffset(class FName& FlgName);
	void SetCameraLengthScale(class FName FlagName, float Scale);
	void ResetCameraInterp();
	void ResetCameraDirection();
	void RegisterAdditionalOffset(struct FShooterSpringCameraAdditionalOffset& Offset);
	void OnUpdatePlayerHp(const struct FFixedPoint64& NowHP, const struct FFixedPoint64& NowMaxHP);
	void OnStartAim();
	void OnReleaseTrigger();
	void OnPullTrigger();
	void OnLanded(class UPalCharacterMovementComponent* Component, struct FHitResult& Hit);
	void OnJump(class UPalCharacterMovementComponent* Component);
	void OnFly(class UPalCharacterMovementComponent* Component);
	void OnEndAim();
	void OnDyingDeadEnd(class APalPlayerCharacter* PlayerCharacter);
	void OnDead(const struct FPalDeadInfo& DeadInfo);
	void OnCompleteInitializeParameter(class APalCharacter* InCharacter);
	void OnChangeSliding(class UPalCharacterMovementComponent* Component, bool IsSliding);
	void OnChangeShootState(bool IsAim, bool IsShooting);
	void OnChangeGraphicsDelegate(struct FPalOptionGraphicsSettings& PrevSettings, struct FPalOptionGraphicsSettings& NewSettings);
	void OnChangeCrouch(class UPalCharacterMovementComponent* Component, bool IsCrouch);
	struct FVector GetCurrentCameraOffset();
	float GetCurrentCameraArmLength();
	void ChangeArmParameter_forBP();
};

// 0xE0 (0x150 - 0x70)
// Class Pal.PalShopManager
class UPalShopManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_3E67[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRecievedBuyResultDelegate;                       // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReceivedDroppedPalDataDelegate;                  // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FGuid, class UPalShopBase*>      CreatedItemShopMap_ForServer;                      // 0x98(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalShopBase*>      CreatedPalShopMap_ForServer;                       // 0xE8(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPalDroppedPalProductDataForShop> LocalDroppedPalData;                               // 0x138(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UPalShopProduct_LostPal*               LostPalProduct_Tmp;                                // 0x148(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalShopManager* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Pal.PalShopProductBase
class UPalShopProductBase : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateNowStockNumDelegate;                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateMaxStockNumDelegate;                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 MyProductID;                                       // 0x48(0x10)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsInfinityStockFlag;                               // 0x58(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E69[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StockNum;                                          // 0x5C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxStockNum;                                       // 0x60(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsValidProductFlag;                                // 0x64(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E6A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalShopProductBase* GetDefaultObj();

	void UpdateNowStockNumDelegate__DelegateSignature(int32 NowStock);
	void UpdateMaxStockNumDelegate__DelegateSignature(int32 MaxStockNum);
	void OnRep_StockNum();
	void OnRep_MaxStockNum();
	bool IsValidProduct();
	bool IsSoldout();
	bool IsInfinityStock();
	int32 GetRemainStockNum();
	void GetProductNameText(class FText* OutText);
	int32 GetMaxStockNum();
	int32 GetMaxBuyNum_LocalPlayer();
	void GetId(struct FGuid* OutID);
	bool CanBuy_LocalPlayer();
};

// 0x228 (0x290 - 0x68)
// Class Pal.PalShopProduct_PalSaveParameter
class UPalShopProduct_PalSaveParameter : public UPalShopProductBase
{
public:
	struct FPalIndividualCharacterSaveParameter  ProductPalSaveParameter;                           // 0x68(0x218)(Net, NativeAccessSpecifierPrivate)
	struct FGuid                                 ReservedPlayerUID;                                 // 0x280(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalShopProduct_PalSaveParameter* GetDefaultObj();

	void OnCreatedBuyPal(const struct FPalInstanceID& CreatedPalInstanceID);
	void GetProductPalParameter(struct FPalIndividualCharacterSaveParameter* OutParameter);
	int32 GetPrice();
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalShopProduct_LostPal
class UPalShopProduct_LostPal : public UPalShopProduct_PalSaveParameter
{
public:
	uint8                                        Pad_3E6D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalShopProduct_LostPal* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class Pal.PalShopProduct_TradeItem
class UPalShopProduct_TradeItem : public UPalShopProductBase
{
public:
	class FName                                  ProductStaticItemID;                               // 0x68(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BuyRate;                                           // 0x70(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E6E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalShopProduct_TradeItem* GetDefaultObj();

	int32 GetRequireMoney();
	void GetProductStaticItemID(class FName* OutStaticID);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalShopUtility
class UPalShopUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalShopUtility* GetDefaultObj();

	void LotteryItemShop(class UObject* WorldContextObject, class FName& ItemShopLotteryName, class FName* OutShopName);
	bool GetPalShopCreateData(class UObject* WorldContextObject, class FName& ShopName, struct FPalPalShopCreateDataRow* OutData);
	bool GetItemShopCreateData(class UObject* WorldContextObject, class FName& ShopName, struct FPalItemShopCreateDataRow* OutData);
	bool CreateNewPalShop(class UObject* WorldContextObject, struct FPalPalShopCreateDataRow& CreateShopData, class FName& SharedShopKeyName, class UPalShopBase** OutCreatedShop);
	bool CreateNewItemShop(class UObject* WorldContextObject, struct FPalItemShopCreateDataRow& CreateShopData, class FName& SharedShopKeyName, class UPalShopBase** OutCreatedShop);
	bool CanSellFromStaticItemIDAndNum(class UObject* WorldContextObject, struct FPalStaticItemIdAndNum& StaticItemIDAndNum, float SellRate);
	bool CanSellFromSlotIdAndNum(class UObject* WorldContextObject, struct FPalItemSlotIdAndNum& SlotIdAndNum, float SellRate);
	int32 CalcPalSellPrice(class UObject* WorldContextObject, struct FPalIndividualCharacterSaveParameter& SaveParameter, float SellRate);
	int32 CalcItemSellPrice(class UObject* WorldContextObject, struct FPalStaticItemIdAndNum& StaticItemIDAndNum, float SellRate);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalSimpleInteractableObject
class APalSimpleInteractableObject : public AActor
{
public:
	uint8                                        Pad_3E79[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalSimpleInteractableObject* GetDefaultObj();

	enum class EPalInteractiveObjectIndicatorType GetIndicatorType();
};

// 0x230 (0x11B0 - 0xF80)
// Class Pal.PalSkeletalMeshComponent
class UPalSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	bool                                         bCanRagdoll;                                       // 0xF80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E7F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClavicleAdjustDegree;                              // 0xF84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsEnableGroundTilt;                               // 0xF88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E80[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PitchAngle;                                        // 0xF8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollAngle;                                         // 0xF90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TiltingInterpTime;                                 // 0xF94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DefaultLocation;                                   // 0xF98(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DefaultRotator;                                    // 0xFB0(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               BeginTiltVector;                                   // 0xFC8(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EndTiltVector;                                     // 0xFE0(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TiltTimer;                                         // 0xFF8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3E81[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAppliedMakeInfo;                                 // 0x1000(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFlagContainer                        DisableTilt;                                       // 0x1010(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFloatContainer                       ScaleFloatContainer;                               // 0x1060(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFloatContainer                       PitchFloatContainer;                               // 0x1070(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FFloatContainer                       AnimRateScaleFloatContainer;                       // 0x1080(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	float                                        DefaultAnimRateScale;                              // 0x1090(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E82[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DefaultScale3D;                                    // 0x1098(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalSkeletalMeshType              PalSkeletalMeshType;                               // 0x10B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E83[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CharcterMakeMorphMax;                              // 0x10B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E84[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemName;                                          // 0x10E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BodyTypeName;                                      // 0x10F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         DisableChangeMesh_ByPlayerDead;                    // 0x10F8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E85[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVisibilityBasedAnimTickOption    DefaultTickOption;                                 // 0x1110(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E86[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalPlayerDataCharacterMakeInfo       CharacterMakeInfo;                                 // 0x1114(0x94)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E87[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalSkeletalMeshComponent* GetDefaultObj();

	void SetTiltDisable(class FName FlagName, bool bIsDisable);
	void SetRuntimeScale(class FName FlagName, float Scale);
	void SetRuntimePitch(class FName FlagName, float Pitch);
	void SetRuntimeAnimRateScale(class FName FlagName, float RateScale);
	void SetDisableChangeMesh(bool Disable);
	void SetCharacterMakeInfo(struct FPalPlayerDataCharacterMakeInfo& Info);
	void ResetTransformToDefault();
	bool IsDisableTilt();
	enum class EPalSkeletalMeshType GetPalSkeletalMeshType();
	float GetAnimRateScale();
	void ChangeVisibilityAnimTick(enum class EPalSkeletalTickLayer SkeletalTickLayer);
	void AppliedMakeInfoDelegate__DelegateSignature(class UPalSkeletalMeshComponent* SkeletalMeshComponent);
};

// 0x20 (0xC0 - 0xA0)
// Class Pal.PalSkillDamageReactionComponent
class UPalSkillDamageReactionComponent : public UActorComponent
{
public:
	uint8                                        Pad_3E8A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDamageDelegate;                                  // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalHitEffectSlot*                     EffectSlot;                                        // 0xB8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalSkillDamageReactionComponent* GetDefaultObj();

};

// 0xA0 (0x330 - 0x290)
// Class Pal.PalSkillEffectBase
class APalSkillEffectBase : public AActor
{
public:
	uint8                                        Pad_3E9B[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectSize;                                        // 0x2E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSize;                                           // 0x2EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSize;                                           // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalAttackFilter*                      AttackFilter;                                      // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalHitFilter*                         HitFilterGround;                                   // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalHitFilter*                         HitFilterCustomRange;                              // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                AttackTarget;                                      // 0x310(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          LifeTimeHandler;                                   // 0x318(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalSoundPlayer*                       SoundPlayer;                                       // 0x320(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRandomStream                         RandomStream;                                      // 0x328(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalSkillEffectBase* GetDefaultObj();

	void StopAllNiagaraSound();
	void StopAkSound();
	struct FTimerHandle SetTimeCallbackBySkillEffectSpawnParameter(class UObject* WorldContextObject, struct FSkillEffectSpawnParameter& Parameter, class UObject* CallObject, FDelegateProperty_ TimeDelegate);
	void SetActorTransformByOwner(class AActor* SkillOwner, struct FVector& MyOffset);
	void SetActionTargetActor(class AActor* Target);
	void PlayAkSound(class UAkAudioEvent* AudioEvent);
	void OnInitialize();
	void LifeTimeCallback();
	bool IsSelfOwnerCharacterOrRaider(class AActor* HitTarget);
	bool IsRidden();
	void Initialize(class AActor* SkillOwner, struct FVector& MyOffset, class AActor* Target, const struct FRandomStream& RandomStream);
	class APalCharacter* GetOwnerCharacter();
	struct FVector GetActionTargetLocation();
	class AActor* GetActionTargetActor();
	class APalSkillEffectBase* CreateChildSkillEffect(TSubclassOf<class APalSkillEffectBase> EffectClass, const struct FTransform& SpawnTransform, const struct FRandomStream& RandomStream, enum class ESpawnActorCollisionHandlingMethod CollisionMethod, class AActor* OwnerActor);
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalSkyLightVolume
class APalSkyLightVolume : public AActor
{
public:
	class USkyLightComponent*                    Component;                                         // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x298(0x1)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1AD : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_3E9D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisableEnabledFlag;                               // 0x29C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3E9E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalSkyLightVolume* GetDefaultObj();

	void OnRep_bEnabled();
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalSoundDebugModel
class APalSoundDebugModel : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalSoundDebugModel* GetDefaultObj();

	void Initialize(class UAkAudioEvent* AudioEvent);
};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalSoundEmitterComponent
class UPalSoundEmitterComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UPalSoundEmitterComponent* GetDefaultObj();

	void EmitSound(class FName SoundFName, class AActor* EmitterCharacter, const struct FVector& EmitLocation, float VolumeRate);
};

// 0xE0 (0x108 - 0x28)
// Class Pal.PalSoundPlayer
class UPalSoundPlayer : public UObject
{
public:
	FDelegateProperty_                           AkCallbackOuter;                                   // 0x28(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StopWhenOwnerDestroyed;                            // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EAE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       OwnerComponent;                                    // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          AkComponent;                                       // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  OwnerAttachPointName;                              // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           AkCallback;                                        // 0x58(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, struct FPalSoundPlayingParameter> PlaySoundParameters;                               // 0x68(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, float>                     OutputBusVolumes;                                  // 0xB8(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalSoundPlayer* GetDefaultObj();

	void UpdateOutputBusBolume();
	void Terminate();
	void StopSound();
	void StopByPlayingId(int32 PlayingID);
	void SetWorldLocation(struct FVector& Location);
	void SetSwitch(const class FString& SwitchGroup, const class FString& SwitchState);
	void SetRTPCValue(class FName& Name, float Value, float InterpolSec);
	void SetPhysicalMaterial(enum class EPhysicalSurface PhysicalSurface);
	void SetOutputBusVolume(class FName Name, float Volume);
	void SetOcclusionRefreshInterval(float Interval);
	void PostTrigger(const class FString& Trigger);
	int32 PlaySound(class UAkAudioEvent* AudioEvent, struct FPalSoundOptions& Options);
	void OnAkPostEventCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void Initialize();
	struct FVector GetWorldLocation();
	struct FRotator GetOwnerRotation();
	struct FVector GetOwnerLocation();
	bool GetOutputBusVolume(class FName Name, float* Volume);
	void FadeOutByPlayingId(int32 PlayingID, int32 FadeOutDuration);
	void ClearOutputBusVolume(class FName Name);
};

// 0x48 (0xE8 - 0xA0)
// Class Pal.PalSoundPlayerComponent
class UPalSoundPlayerComponent : public UActorComponent
{
public:
	TSoftClassPtr<class UPalSoundSlot>           PalSoundSlotClass;                                 // 0xA0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGetAkOwnerComponent;                             // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalSoundSlot*                         PalSoundSlotCache;                                 // 0xE0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalSoundPlayerComponent* GetDefaultObj();

	class USceneComponent* OnGetAkOwnerComponent__DelegateSignature();
	void BeginPlay();
};

// 0x38 (0xD8 - 0xA0)
// Class Pal.PalSoundPlayerInEditorComponent
class UPalSoundPlayerInEditorComponent : public UActorComponent
{
public:
	TSoftClassPtr<class UPalSoundSlot>           PalSoundSlotClass;                                 // 0xA0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalSoundSlot*                         PalSoundSlotCache;                                 // 0xD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalSoundPlayerInEditorComponent* GetDefaultObj();

	void SetPhysicalMaterial(enum class EPhysicalSurface PhysicalSurface);
};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalSoundSlot
class UPalSoundSlot : public UObject
{
public:
	TMap<struct FPalDataTableRowName_SoundID, class UAkAudioEvent*> SoundMap;                                          // 0x28(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, struct FPalDataTableRowName_SoundID> PlaySoundParameters;                               // 0x78(0x50)(NativeAccessSpecifierPrivate)
	class UPalSoundPlayer*                       SoundPlayer;                                       // 0xC8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalSoundSlot* GetDefaultObj();

	void Terminate();
	void StopSoundBySoundId(struct FPalDataTableRowName_SoundID& SoundId);
	void StopSound();
	void StopByPlayingId(int32 PlayingID);
	void SetSwitch(const class FString& SwitchGroup, const class FString& SwitchState);
	void SetRTPCValue(class FName& Name, float Value, float InterpolSec);
	void SetPhysicalMaterial(enum class EPhysicalSurface PhysicalSurface);
	int32 PlaySoundByAkEvent(class UAkAudioEvent* AkEvent, struct FPalSoundOptions& Options);
	int32 PlaySound(struct FPalDataTableRowName_SoundID& ID, struct FPalSoundOptions& Options);
	void OnAkPostEventCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	bool IsPlayingBySoundId(struct FPalDataTableRowName_SoundID& SoundId);
	void Initialize();
	class UPalSoundPlayer* GetSoundPlayer();
	class UAkAudioEvent* GetAkEvent(struct FPalDataTableRowName_SoundID& ID);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalSoundUtility
class UPalSoundUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalSoundUtility* GetDefaultObj();

	void StopSoundByActorWithSoundId(class AActor* Actor, struct FPalDataTableRowName_SoundID& ID);
	void StopSoundByActor_Editor(class AActor* Actor);
	void StopSoundByActor(class AActor* Actor);
	class APalSoundDebugModel* SpawnSoundDebugModel(class UAkAudioEvent* AudioEvent, struct FVector& Location, struct FRotator& Rotation, class UObject* WorldObject);
	void SetSwitchByActor(class AActor* Actor, const class FString& SwitchGroup, const class FString& SwitchState);
	void SetRTPCValueByActor(class AActor* Actor, class FName Name, float Value, float InterpolSec);
	void SetPhysicalMaterial(class AActor* Actor, enum class EPhysicalSurface PhysicalSurface);
	void PlaySoundByActor_Editor(class AActor* Actor, struct FPalDataTableRowName_SoundID& ID, struct FPalSoundOptions& Option, TSoftClassPtr<class UPalSoundSlot> SoundSlotClass, enum class EPhysicalSurface PhysicalSurface);
	void PlaySoundByActor(class AActor* Actor, struct FPalDataTableRowName_SoundID& ID, struct FPalSoundOptions& Option);
	bool PlayAkEventSoundByActor(class AActor* Actor, class UAkAudioEvent* AkEvent);
	void PalSoundUtilityBoolCallbackFunction__DelegateSignature(bool IsPlaying);
	void IsSoundPlayingByActor(class AActor* Actor, struct FPalDataTableRowName_SoundID& ID, FDelegateProperty_ Cb);
};

// 0x8 (0x800 - 0x7F8)
// Class Pal.PalSpectator
class APalSpectator : public APalCharacter
{
public:
	uint8                                        Pad_3ED1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalSpectator* GetDefaultObj();

};

// 0x20 (0x580 - 0x560)
// Class Pal.PalSpeedCollisionComponent
class UPalSpeedCollisionComponent : public USphereComponent
{
public:
	bool                                         IsSelfEnable;                                      // 0x560(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3ED4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalInstanceID>                HitPalList;                                        // 0x568(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3ED5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalSpeedCollisionComponent* GetDefaultObj();

	void OnAllActionEnd(class UPalActionComponent* ActionComponent);
	void OnActionBegin(class UPalActionBase* Action);
	void DelayRemoveInterval();
	void BeginOverlapEvent(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalSphereBodyBase
class APalSphereBodyBase : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalSphereBodyBase* GetDefaultObj();

	void RPCDummy();
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalSpotAreaBase
class APalSpotAreaBase : public AActor
{
public:
	enum class EPalAudioState                    AudioState;                                        // 0x290(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsOverlappedLocalPlayer;                          // 0x291(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3ED6[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalSpotAreaBase* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class APalPlayerCharacter* PlayerCharacter);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class APalPlayerCharacter* PlayerCharacter);
	enum class EPalAudioState GetAudioState();
	class UPrimitiveComponent* GetAreaCollision();
};

// 0x80 (0xA8 - 0x28)
// Class Pal.PalSquad
class UPalSquad : public UObject
{
public:
	uint8                                        Pad_3ED7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSomeOneDeadDelegate;                             // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCombatPropagationDelegate;                       // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEscapePropagationDelegate;                       // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        LeaderId;                                          // 0x60(0x30)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPalInstanceID>                MemberIDList;                                      // 0x90(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UPalAIBlackboardBase*                  LeaderBB;                                          // 0xA0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalSquad* GetDefaultObj();

	void RemoveWhenDestoryActor(class AActor* DestoryActor);
	void OnSomeOneDeadDelegate__DelegateSignature(const struct FPalDeadInfo& DeadInfo);
	void OnCombatPropagationDelegate__DelegateSignature(class AActor* StartActor);
	void GetMemberID(TArray<struct FPalInstanceID>* OutList);
	void EscapeStart(class AActor* StartActor, class AActor* Target);
	void EscapePropagationDelegate__DelegateSignature(class AActor* StartActor, class AActor* TargetActor);
	void DeadAndUpdateLeader(const struct FPalDeadInfo& DeadInfo);
	void CombatStart(class AActor* StartActor);
	void AddCharacter(const struct FPalInstanceID& PalInstanceID);
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalStageAreaBounds
class APalStageAreaBounds : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalStageAreaBounds* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Pal.PalStageRegistrationParameterBase
class UPalStageRegistrationParameterBase : public UObject
{
public:
	uint8                                        Pad_3ED8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStageRegistrationParameterBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalStageDefines
class UPalStageDefines : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalStageDefines* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalStageUtility
class UPalStageUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalStageUtility* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Pal.PalStageModelBase
class UPalStageModelBase : public UObject
{
public:
	uint8                                        Pad_3ED9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalStageInstanceId                   InstanceId;                                        // 0x40(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3EDA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalStagePlayerInfo>           PlayerInfos;                                       // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStageModelBase* GetDefaultObj();

	void OnCompleteLoadStage_ServerInternal(class UPalStageModelBase* TargetStageModel);
};

// 0x8 (0x48 - 0x40)
// Class Pal.PalStageRegistrationParameterBossBattle
class UPalStageRegistrationParameterBossBattle : public UPalStageRegistrationParameterBase
{
public:
	uint8                                        Pad_3EDB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStageRegistrationParameterBossBattle* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Pal.PalStageModelBossBattle
class UPalStageModelBossBattle : public UPalStageModelBase
{
public:
	class UPalBossBattleInstanceModel*           InstanceModel;                                     // 0x68(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStageModelBossBattle* GetDefaultObj();

	void OnRep_InstanceModel();
	class UPalBossBattleInstanceModel* GetInstanceModel();
};

// 0x10 (0x50 - 0x40)
// Class Pal.PalStageRegistrationParameterDungeon
class UPalStageRegistrationParameterDungeon : public UPalStageRegistrationParameterBase
{
public:
	uint8                                        Pad_3EDC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStageRegistrationParameterDungeon* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Pal.PalStageModelDungeon
class UPalStageModelDungeon : public UPalStageModelBase
{
public:
	class UPalDungeonInstanceModel*              InstanceModel;                                     // 0x68(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStageModelDungeon* GetDefaultObj();

	class UPalDungeonInstanceModel* GetInstanceModel();
};

// 0x198 (0x1C0 - 0x28)
// Class Pal.PalStageReplicator
class UPalStageReplicator : public UPalGameStateReplicatorBase
{
public:
	struct FPalFastStageModelRepInfoArray        RepInfoArray;                                      // 0x28(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3EDE[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStageReplicator* GetDefaultObj();

};

// 0xA0 (0x110 - 0x70)
// Class Pal.PalStageWorldSubsystem
class UPalStageWorldSubsystem : public UPalWorldSubsystem
{
public:
	TMap<struct FPalStageInstanceId, class UPalStageModelBase*> StageModelMap;                                     // 0x70(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<class UDataLayerAsset*, struct FPalStageAreaInfo> StageAreaInfoMap;                                  // 0xC0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalStageWorldSubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Pal.PalStateMachineStateBase_BlueprintBase
class UPalStateMachineStateBase_BlueprintBase : public UPalStateMachineStateBase
{
public:

	static class UClass* StaticClass();
	static class UPalStateMachineStateBase_BlueprintBase* GetDefaultObj();

	void StateTick(float DeltaTime);
	void StateExit();
	void StateEnter();
};

// 0x130 (0x158 - 0x28)
// Class Pal.PalStaticItemDataBase
class UPalStaticItemDataBase : public UObject
{
public:
	class FName                                  ID;                                                // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             IconTexture;                                       // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalItemTypeA                     TypeA;                                             // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalItemTypeB                     TypeB;                                             // 0x61(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Rank;                                              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rarity;                                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Price;                                             // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxStackCount;                                     // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SortID;                                            // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalDynamicItemDataBase>   DynamicItemDataClass;                              // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotConsumed;                                      // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x88(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            StaticMeshPath;                                    // 0xB8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  VisualBlueprintClassSoft;                          // 0xE8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalDropItemType                  DropItemType;                                      // 0x118(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EE2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight;                                            // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Durability;                                        // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PassiveSkill;                                      // 0x124(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CorruptionFactor;                                  // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FloatValue1;                                       // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OverrideNameMsgID;                                 // 0x134(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OverrideDescMsgID;                                 // 0x13C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3EE3[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStaticItemDataBase* GetDefaultObj();

	bool UseItem(class UPalDynamicItemDataBase* DynamicItemData, class UObject* WorldContextObject);
	bool IsCorruptible();
	bool HasDynamicItemClass();
	bool HasActorClass();
	TSoftClassPtr<class AActor> GetVisualBlueprintClass(class UObject* WorldContextObject);
	class FName GetPassiveSkill();
	void GetNameMsgId(class FName* OutMsgID);
	int32 GetMaxStackCount();
	class FName GetId();
	TSubclassOf<class UPalDynamicItemDataBase> GetDynamicItemDataClass();
	void GetDescriptionMsgId(class FName* OutMsgID);
	TSoftClassPtr<class AActor> GetActorClass();
};

// 0x10 (0x168 - 0x158)
// Class Pal.PalStaticArmorItemData
class UPalStaticArmorItemData : public UPalStaticItemDataBase
{
public:
	int32                                        AttackValue;                                       // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DefenseValue;                                      // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HPValue;                                           // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ShieldValue;                                       // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStaticArmorItemData* GetDefaultObj();

	int32 GetShieldValue();
	int32 GetHPValue();
	int32 GetDefenseValue();
	int32 GetAttackValue();
};

// 0x548 (0x5E8 - 0xA0)
// Class Pal.PalStaticCharacterParameterComponent
class UPalStaticCharacterParameterComponent : public UActorComponent
{
public:
	TMap<enum class EPalAIActionType, TSubclassOf<class UPalAIActionBase>> AIActionMap;                                       // 0xA0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        CallApproachWalkSpeedMultiplier;                   // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  RandomRestMontage;                                 // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPalRandomRestInfo>            RandomRestMontageInfos;                            // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EPalGeneralAnimSequenceType, class UAnimSequence*> GeneralAnimSequenceMap;                            // 0x118(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EPalGeneralMontageType, class UAnimMontage*> GeneralMontageMap;                                 // 0x168(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EPalGeneralBlendSpaceType, class UBlendSpace*> GeneralBlendSpaceMap;                              // 0x1B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EPalRagdollPresetType, TSubclassOf<class UPalRagdollPreset>> RagdollPresetMap;                                  // 0x208(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<enum class EPalActionType, class UAnimMontage*> ActionMontageMap;                                  // 0x258(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UAnimMontage*>                  EmoteList;                                         // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class EPalWazaID, TSoftClassPtr<class UPalActionBase>> WazaActionDeclarationMap;                          // 0x2B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<enum class EPalWazaID, TSubclassOf<class UPalActionBase>> WazaActionInstancedMap;                            // 0x308(0x50)(BlueprintVisible, BlueprintReadOnly, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        CaptureSuccessRate;                                // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPal;                                             // 0x35C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EED[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SkillEffectScale;                                  // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SkillEffectOffsetScale;                            // 0x368(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowSideDistanceRate;                            // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPhysicalSurface, struct FFootStampInfo> FootStampMap;                                      // 0x388(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        StepVelocityXY;                                    // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepVelocityZ;                                     // 0x3DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeadBoneName;                                      // 0x3E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PhysicsBodyRootName;                               // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ToolAttachBoneName;                                // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             HPGaugeUIOffset;                                   // 0x3F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExclamationMarkOffsetZ;                            // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalMonsterMovementType           MovementType;                                      // 0x40C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Weight_KG;                                         // 0x410(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Mass_Scale;                                        // 0x414(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IsGroundCrossRange;                                // 0x418(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalPhysicsBoneType, class FName> PhysicsBoneNameMap;                                // 0x420(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         IsUncapturable;                                    // 0x470(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBackWalkForwardAnime;                            // 0x471(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRightLeft_WakeupFromRagdoll;                     // 0x472(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF3[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               GetupMotion_UtubuseOrRight_0FramePelvisLocation;   // 0x478(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GetupMotion_AomukeOrLeft_0FramePelvisLocation;     // 0x490(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Ragdoll_RightLeftGetup_ForwardTailName;            // 0x4A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Ragdoll_RightLeftGetup_RightLegName;               // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalPettingSizeType               PettingSize;                                       // 0x4B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PettingDistance;                                   // 0x4BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PettingStartAddDistance;                           // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PettingEndLeaveDistance;                           // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PettingCameraCenterDistance_Override;              // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PettingCameraHeight_Override;                      // 0x4CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PettingCameraArmLength_Override;                   // 0x4D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPalSizeType                      Size;                                              // 0x4D4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Ragdoll_GravityRate;                               // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLookatIKAble;                                    // 0x4DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SmallDamageAnimationApplyRate;                     // 0x4E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallDamageAnimationPlayRate;                      // 0x4E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FShooterSpringCameraParameter         CameraOffsetInLiftup;                              // 0x4E8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsForcedTurnWhenDamageReaction;                    // 0x508(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableNPCDamageRolling;                           // 0x509(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3EF7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapsuleHalfHeightDefault;                          // 0x50C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UPalSoundSlot>           PalSoundSlotClass;                                 // 0x510(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AkAttachPointName;                                 // 0x540(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UPalFootStepEffectAssetBase> PalFootStepEffectAssetClass;                       // 0x548(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalStaticCharacterInfo_SpawnItem     SpawnItem;                                         // 0x578(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UPalSoundSlot*                         PalSoundSlotCache;                                 // 0x5C8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalFootStepEffectAssetBase*           PalFootStepEffectAssetCache;                       // 0x5D0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalActionBase>            MissWazaAction;                                    // 0x5D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsBoss_Database;                                   // 0x5E0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsTowerBoss_Database;                              // 0x5E1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalSpawnedCharacterType          SpawnedCharacterType;                              // 0x5E2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3EF8[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStaticCharacterParameterComponent* GetDefaultObj();

	void SetSpawnedCharacterType(enum class EPalSpawnedCharacterType SpawnedType);
	void LoadWazaActionClass(enum class EPalWazaID WazaID);
	bool IsTowerBossPal();
	bool IsSwimPal();
	bool IsRarePal();
	bool IsFlyPal();
	bool IsBossPal_Database_ExceptRare();
	bool IsBossPal_Database();
	bool IgnoreLeanBack();
	bool IgnoreBlowAway();
	enum class EPalSpawnedCharacterType GetSpawnedCharacterType();
	struct FPalRandomRestInfo GetRandomRestInfo();
	float GetCaptureRate_ByCharacterID();
	class UAnimMontage* FindMontange(enum class EPalActionType ActionType, bool* bExist);
};

// 0x18 (0x170 - 0x158)
// Class Pal.PalStaticConsumeItemData
class UPalStaticConsumeItemData : public UPalStaticItemDataBase
{
public:
	int32                                        RestoreHP;                                         // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestoreSP;                                         // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestoreSatiety;                                    // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestoreSanity;                                     // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWazaID                        WazaID;                                            // 0x168(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3EF9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStaticConsumeItemData* GetDefaultObj();

	enum class EPalWazaID GetWazaID();
	int32 GetRestoreSP();
	int32 GetRestoreSatiety();
	int32 GetRestoreSanity();
	int32 GetRestoreHP();
};

// 0x80 (0xB0 - 0x30)
// Class Pal.PalStaticItemDataAsset
class UPalStaticItemDataAsset : public UDataAsset
{
public:
	TMap<class FName, class UPalStaticItemDataBase*> StaticItemDataMap;                                 // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  UndefinedVisualBlueprintClassSoft;                 // 0x80(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalStaticItemDataAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalStaticItemDataManager
class UPalStaticItemDataManager : public UObject
{
public:
	class UPalStaticItemDataAsset*               StaticItemDataAsset;                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStaticItemDataManager* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalStaticItemDataTable
class UPalStaticItemDataTable : public UObject
{
public:
	class UPalStaticItemDataAsset*               DataAsset;                                         // 0x28(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStaticItemDataTable* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Pal.PalStaticLogCollector
class UPalStaticLogCollector : public UObject
{
public:
	struct FGuid                                 OverInventoryWeightId;                             // 0x28(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalLogManager*                        TargetLogManager;                                  // 0x38(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalStaticLogCollector* GetDefaultObj();

	void RegisterLogCollectEvent_BP();
	void OnReadyPlayerInventoryData(class UPalPlayerDataStorage* PlayerDataStorage);
	void OnOverWeightInventory(float NowWeight);
	void OnFixedWeightInventory(float NowWeight);
	void OnEndedWorldAutoSave(bool IsSuccess);
};

// 0x10 (0x168 - 0x158)
// Class Pal.PalStaticWeaponItemData
class UPalStaticWeaponItemData : public UPalStaticItemDataBase
{
public:
	int32                                        MagazineSize;                                      // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SneakAttackRate;                                   // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AttackValue;                                       // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DefenseValue;                                      // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalStaticWeaponItemData* GetDefaultObj();

	int32 GetWeaponDefense();
	int32 GetWeaponBaseDamage();
	float GetSneakAttackRate();
	int32 GetMaxMagazineSize();
};

// 0x0 (0x538 - 0x538)
// Class Pal.PalStationaryWeaponBase
class APalStationaryWeaponBase : public APalWeaponBase
{
public:

	static class UClass* StaticClass();
	static class APalStationaryWeaponBase* GetDefaultObj();

	float GetAttackableDistance();
	float GetAttackableAngle();
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalStatModelPerformance
class UPalStatModelPerformance : public UObject
{
public:
	uint8                                        Pad_3EFC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStatModelPerformance* GetDefaultObj();

	void SetupInitializeStat(float FrameTime, float GameThreadTime, float RenderThreadTime, float GPUTime);
	void Initialize();
	void Deinitialize();
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalStatPalCount
class UPalStatPalCount : public UObject
{
public:
	uint8                                        Pad_3EFD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFont*                                 FontObject;                                        // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalStatPalCount* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Pal.PalStatusCollectItem
class UPalStatusCollectItem : public UPalStatusBase
{
public:
	struct FPalStaticItemIdAndNum                CollectItemInfo;                                   // 0x48(0xC)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F04[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStatusCollectItem* GetDefaultObj();

	void TickStatus_Implementation(float DeltaTime);
	void SetCollectItemInfo(struct FPalStaticItemIdAndNum& ItemIDAndNum);
	void OnEndStatus_Implementation();
	void OnBreakStatus_Implementation();
	void OnBeginStatus_Implementation();
	void OnBeginSomeStatus_Implementation();
	bool IsThrown();
	bool IsServer();
	bool IsRestrictedByWorkerEvent();
	bool IsRestrictedByWork();
	bool IsLifted();
	bool IsHealth();
	bool IsBattleMode();
	class UPalPlayerInventoryData* GetOwnerPlayerInventoryData();
	struct FPalStaticItemIdAndNum GetCollectItemInfo();
	void DropItem(class FName ItemId, int32 DropNum, const struct FVector& SpawnLocation, const struct FVector& ReleaseDirection);
	bool CanSpawnItem();
};

// 0x90 (0x130 - 0xA0)
// Class Pal.PalStatusComponent
class UPalStatusComponent : public UActorComponent
{
public:
	TMap<enum class EPalStatusID, TSubclassOf<class UPalStatusBase>> StatusMap;                                         // 0xA0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAddStatus;                                       // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemoveStatus;                                    // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalStatusBase*>                ExecutionStatusList;                               // 0x110(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UPalStatusBase*>                ExecutionStatusListCache;                          // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalStatusComponent* GetDefaultObj();

	void SomeStatus_ToAll(enum class EPalStatusID StatusId, const struct FStatusDynamicParameter& Param);
	void RemoveStatus_ToServer(enum class EPalStatusID StatusId, int32 IssuerID);
	void RemoveStatus(enum class EPalStatusID StatusId);
	void OnRep_ExecutionStatusList();
	void OnRemoveStatus__DelegateSignature(class UPalStatusComponent* StatusComponent, enum class EPalStatusID StatusId);
	void OnAddStatus__DelegateSignature(class UPalStatusComponent* StatusComponent, enum class EPalStatusID StatusId, class UPalStatusBase* Status);
	class UPalStatusBase* GetExecutionStatusCache(enum class EPalStatusID StatusId);
	class UPalStatusBase* GetExecutionStatus(enum class EPalStatusID StatusId);
	void BeginPlay();
	void AddStatusParameter(enum class EPalStatusID StatusId, const struct FStatusDynamicParameter& Param);
	void AddStatus_ToServer(enum class EPalStatusID StatusId, const struct FStatusDynamicParameter& Param, int32 IssuerID);
	void AddStatus(enum class EPalStatusID StatusId);
};

// 0x0 (0x48 - 0x48)
// Class Pal.PalStatusLifeSteal
class UPalStatusLifeSteal : public UPalStatusBase
{
public:

	static class UClass* StaticClass();
	static class UPalStatusLifeSteal* GetDefaultObj();

	void OnLifeSteal(int32 Damage);
	int32 CalucRecoverPoint(int32 Damage);
};

// 0x8 (0x50 - 0x48)
// Class Pal.PalStatus_StaminaControl
class UPalStatus_StaminaControl : public UPalStatusBase
{
public:
	bool                                         IsLocalPlayerOrPal;                                // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsPreCliming;                                      // 0x49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F11[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalStatus_StaminaControl* GetDefaultObj();

	void DecreaseStepStamina();
	void DecreaseJumpStamina(class UPalCharacterMovementComponent* Movement);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGameSystemNeedSync
class IPalGameSystemNeedSync : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalGameSystemNeedSync* GetDefaultObj();

};

// 0xB0 (0x150 - 0xA0)
// Class Pal.PalSyncTeleportComponent
class UPalSyncTeleportComponent : public UActorComponent
{
public:
	uint8                                        Pad_3F12[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerMovedClientDelegate;                       // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerMoveCompleteClientDelegate;                // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         DefaultStartSE;                                    // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalHUDDispatchParameter_FadeWidget*   FadeParameter;                                     // 0xE0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F13[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalSyncTeleportComponent* GetDefaultObj();

	void SyncTeleportPlayerMovedDynamicDelegate__DelegateSignature();
	void SyncTeleport_ToClient(struct FPalSyncTeleportRequestParameter& Parameter);
	void SyncTeleport(struct FPalSyncTeleportRequestParameter& Parameter);
	void RequestSyncTeleportStart_ToServer(struct FPalSyncTeleportRequestParameter& Parameter);
	void RequestSyncTeleportMove_ToServer();
	void RequestSyncTeleportEnd_ToServer();
	void ReceiveSyncTeleportStartResult_ToClient(bool bIsSuccess);
	void ReceiveSyncTeleportMoveResult_ToClient(bool bIsSuccess);
	void ReceiveSyncTeleportEnd_ToClient(bool bIsSuccess);
	void OnEndSyncTeleportFadeOut();
	void OnEndSyncTeleportFadeIn();
	bool IsTeleporting();
	struct FQuat GetTeleportRotation();
	struct FVector GetTeleportLocation();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalSystemInitializeInterface
class IPalSystemInitializeInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalSystemInitializeInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEditorTalkTreeDataTable
class UPalEditorTalkTreeDataTable : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalEditorTalkTreeDataTable* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEditorTalkTreeDataUtility
class UPalEditorTalkTreeDataUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalEditorTalkTreeDataUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEditorNpcMultiTalkDataUtility
class UPalEditorNpcMultiTalkDataUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalEditorNpcMultiTalkDataUtility* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Pal.PalTalkWidgetParameter
class UPalTalkWidgetParameter : public UPalHUDDispatchParameterBase
{
public:
	class UDataTable*                            TalkDataTable;                                     // 0x38(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StartTalkSequence;                                 // 0x40(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                Talker;                                            // 0x48(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalIncidentBase*                      TalkIncident;                                      // 0x50(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCancel;                                          // 0x58(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F14[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTalkWidgetParameter* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUserWidgetHierarchical
class UPalUserWidgetHierarchical : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUserWidgetHierarchical* GetDefaultObj();

};

// 0x18 (0x420 - 0x408)
// Class Pal.PalUserWidgetStackableUI
class UPalUserWidgetStackableUI : public UPalUserWidgetHierarchical
{
public:
	class UAkAudioEvent*                         OpenAkEvent;                                       // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         CloseAkEvent;                                      // 0x410(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F15[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUserWidgetStackableUI* GetDefaultObj();

	void OnPreClose();
	void OnPostClose();
	void OnClose();
	class UAkAudioEvent* GetOpenAkEvent();
	class UAkAudioEvent* GetCloseAkEvent();
	void Close();
};

// 0x10 (0x430 - 0x420)
// Class Pal.PalUserWidgetOverlayUI
class UPalUserWidgetOverlayUI : public UPalUserWidgetStackableUI
{
public:
	bool                                         IsEnableCancelAction;                              // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalUIActionBindData                  CancelInputHandle;                                 // 0x424(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FPalUIActionBindData                  EscInputHandle;                                    // 0x428(0x4)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F19[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUserWidgetOverlayUI* GetDefaultObj();

	void ResetCancelAction();
	void OverrideCancelAction(bool IsDisplayActionBar, enum class EInputEvent InputType, FDelegateProperty_ Callback);
	void ClearCancelAction();
};

// 0x18 (0x448 - 0x430)
// Class Pal.PalTalkWindowWidgetBase
class UPalTalkWindowWidgetBase : public UPalUserWidgetOverlayUI
{
public:
	class UPalNPCTalkSystem*                     TalkSystem;                                        // 0x430(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F1D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTalkWindowWidgetBase* GetDefaultObj();

	void ShowChoice(TArray<class FName>& ChoiceTextIDList);
	void SetTalkerName(class FName& Text);
	void SetMainTextList(TArray<class FName>& TextIDList);
	void RequestClose();
	enum class EPalNPCTalkSelectedChoiceResult NotifyChoiceIndex(int32 Index);
	bool HasArguments();
	void CreateTextAppliedArgments(class FText& OrgText, class FText* OutText);
	void AddArgument(const class FString& Key, class FText& Text);
};

// 0x140 (0x168 - 0x28)
// Class Pal.PalTechnologyData
class UPalTechnologyData : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateTechnologyPoint;                           // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateBossTechnologyPoint;                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUnlockedAnyTechnology;                           // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNewUnlockedUpdate;                               // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalTechnologyDataSet                 TechnologyDataSet;                                 // 0x68(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPalTechnologyDataTableRowBase        EmptyTechnologyData;                               // 0x80(0x40)(NativeAccessSpecifierPublic)
	struct FPalTechnologyRecipeUnlockDataTableRow EmptyRecipeTechnologyData;                         // 0xC0(0x60)(NativeAccessSpecifierPublic)
	TArray<class FName>                          UnlockedTechnologyNameArray;                       // 0x120(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	struct FGuid                                 OwnerPlayerUId;                                    // 0x130(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TechnologyPoint;                                   // 0x140(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        bossTechnologyPoint;                               // 0x144(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          DefaultLockRecipeNameArray;                        // 0x148(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class FName>                          DefaultLockBuildObjectNameArray;                   // 0x158(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalTechnologyData* GetDefaultObj();

	void RequestUnlockRecipeTechnology(class FName& UnlockTechnologyName);
	void RequestAddTechnologyPointByItem(struct FPalItemSlotId& ConsumeSlotId);
	void RemoveNewUnlockedFlag(class FName& TechnologyName);
	void OnUpdateTechnologyPoint__DelegateSignature(int32 TechnologyPoint);
	void OnUpdateLocalPlayerLevel(int32 AddLevel, int32 NowLevel);
	void OnUnlockedAnyTechnology__DelegateSignature();
	void OnRep_UnlockedTechnologyNameArray();
	void OnRep_TechnologyPoint();
	void OnRep_BossTechnologyPoint();
	void OnNewUnlockedUpdateDelegate__DelegateSignature();
	bool IsUnlockRecipeTechnology(class FName& TechnologyName);
	bool IsUnlockCraftRecipe(class FName& CraftRecipeName);
	bool IsUnlockBuildObject(class FName& BuildObjectId);
	bool IsUnlockableRecipeTechnology(class FName& TechnologyName);
	bool IsNewUnlockedTechnology(class FName& TechnologyName);
	bool IsNewUnlockedBuild_Radial(class FName& BuildName);
	bool IsExistNewUnlockedTechnology();
	int32 GetTechnologyPoints();
	class FText GetTechnologyName(class FName& TechnologyName);
	class FText GetTechnologyDesc(class FName& TechnologyName);
	struct FPalTechnologyDataTableRowBase GetTechlonogyBaseData(class FName& TechnologyName);
	TArray<class FName> GetRecipeTechnologyRowNameArray();
	struct FPalTechnologyRecipeUnlockDataTableRow GetRecipeTechlonogy(class FName& TechnologyName);
	int32 GetBossTechnologyPoints();
	void FilteringUnlockedRecipe(TArray<class FName>& OriginalResipeIdArray, TArray<class FName>* OutRecipeIdArray);
	void CheckNewUnlockedFlag_Radial(class FName& BuildName);
};

// 0x78 (0x5F0 - 0x578)
// Class Pal.PalTemperatureComponent
class UPalTemperatureComponent : public UBoxComponent
{
public:
	FMulticastInlineDelegateProperty_            OnChangeTemperatureDelegate;                       // 0x578(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F35[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentTemperature;                                // 0x5D8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SelfKeyName;                                       // 0x5DC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F36[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTemperatureComponent* GetDefaultObj();

	void RemoveHeatSource(class FName UniqueName);
	void OnChangeTemperatureDelegate__DelegateSignature(int32 NextTemperature);
	void OnChangeHour();
	int32 GetCurrentTemperature();
	void CallOnChangeTemperature(int32 Next);
	void CallAllDelegate();
	void AddHeatSourceInfo(class FName UniqueName, const struct FPalHeatSourceInfo& HeatInfo);
	void AddHeatSource(class FName UniqueName, int32 HeatLevel);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalTestMapObjectRegistrationToManager
class APalTestMapObjectRegistrationToManager : public AActor
{
public:
	bool                                         bReadyVirtualBaseCamp;                             // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F37[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalTestMapObjectRegistrationToManager* GetDefaultObj();

	void ForceBuildComplete();
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalTestNetArchiveTransmition
class APalTestNetArchiveTransmition : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalTestNetArchiveTransmition* GetDefaultObj();

	void SendTest();
	void OnRecieveTest(struct FPalNetArchive& Ar);
};

// 0x18 (0x380 - 0x368)
// Class Pal.PalTextBlockBase
class UPalTextBlockBase : public UCommonTextBlock
{
public:
	struct FDataTableRowHandle                   BindTextDatatableHandle;                           // 0x368(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsAutoTextSetWhenWidgetRebuilt;                    // 0x378(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoAdjustScale;                                 // 0x379(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F39[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxWidth;                                          // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalTextBlockBase* GetDefaultObj();

	void UpdateRowName(class FName RowName);
	void SetText_GDKInternal(bool IsSuccess, const class FString& OutString);
	class FText GetBindedOriginalText();
	bool BP_ReflectText();
};

// 0xC0 (0x130 - 0x70)
// Class Pal.PalTimeManager
class UPalTimeManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_3F40[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnNightStartDelegate;                              // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNightEndDelegate;                                // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPreNightSkipDelegate;                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNightSkipDelegate;                               // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeHoursDelegate;                             // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChangeMinutesDelegate;                           // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F41[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class APalPlayerCharacter*>           SleepingPlayers;                                   // 0x100(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F42[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          NightSkipTimerHandle;                              // 0x128(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalTimeManager* GetDefaultObj();

	void TimerEventDelegate__DelegateSignature();
	void Tick_BP(float DeltaTime);
	void SetGameTime_FixDay(int32 NextHour);
	void RemoveSleepPlayer(class APalPlayerCharacter* Player);
	class FString PalTimeSecondsToString(float InSeconds);
	void OnNightStartDelegate__DelegateSignature();
	void OnNightSkipDelegate__DelegateSignature();
	void OnNightEndDelegate__DelegateSignature();
	void OnChangeMinutesDelegate__DelegateSignature();
	void OnChangeHoursDelegate__DelegateSignature();
	class FString GetDebugTimeString();
	float GetDayTimePassRate();
	int32 GetCurrentPalWorldTime_Second();
	int32 GetCurrentPalWorldTime_Minute();
	int32 GetCurrentPalWorldTime_Hour();
	int32 GetCurrentPalWorldTime_Day();
	float GetCurrentPalWorldHoursFloat();
	enum class EPalOneDayTimeType GetCurrentDayTimeType();
	void ClearTimer(class UObject* WorldContextObject, struct FPalTimerHandle& Handle);
	struct FPalTimerHandle AddTimerEventBySpan(FDelegateProperty_& Delegate, float Hours, float Minutes, float Seconds);
	void AddSleepPlayer(class APalPlayerCharacter* Player);
};

// 0xB8 (0x4D0 - 0x418)
// Class Pal.PalTimerPointLightComponent
class UPalTimerPointLightComponent : public UPointLightComponent
{
public:
	class UCurveFloat*                           LightCurve;                                        // 0x418(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLocalOnly;                                      // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F45[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultIntensity;                                  // 0x424(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        DisableFlag;                                       // 0x428(0x50)(Transient, NativeAccessSpecifierPrivate)
	struct FFlagContainer                        EnableWhenDayTimeFlag;                             // 0x478(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F46[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTimerPointLightComponent* GetDefaultObj();

	void SetEnableWhenDayTime(class FName Key, bool Enable);
	void CheckOtomoPal_AndSetRange(class APalCharacter* SelfCharacter);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalToolUtility
class UPalToolUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalToolUtility* GetDefaultObj();

	void CopyFileOverride(const class FString& SourceFileName, const class FString& DestFileName);
};

// 0x8 (0x298 - 0x290)
// Class Pal.PalTreasureBoxVisualBase
class APalTreasureBoxVisualBase : public AActor
{
public:
	class UPalSkeletalMeshComponent*             SkeletalMeshComponent;                             // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalTreasureBoxVisualBase* GetDefaultObj();

	void SetTickEnabled(bool bEnabled);
	void OnPlayMontageNotifyBegin_BP(class FName NotifyName);
	void OnPlayMontageNotifyBegin(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x30 (0x2C0 - 0x290)
// Class Pal.PalTriggerAreaBase
class APalTriggerAreaBase : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnTriggerHitBeginDelegate;                         // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTriggerHitEndDelegate;                           // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FGuid                                 InstanceId;                                        // 0x2B0(0x10)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APalTriggerAreaBase* GetDefaultObj();

	struct FGuid GetInstanceId();
};

// 0x88 (0xF8 - 0x70)
// Class Pal.PalTutorialManager
class UPalTutorialManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_3F4F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTutorialTriggered;                               // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<class UPalTutorialTriggerBase*>       TutorialTriggers;                                  // 0x88(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            MsgDataTable;                                      // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            TutorialTriggersDataTable;                         // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F51[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTutorialManager* GetDefaultObj();

	void TutorialTriggerDelegate__DelegateSignature(const struct FDataTableRowHandle& TutorialMsg);
	void TutorialTrigger_Common(enum class EPalTutorialTriggerConditionType TriggerType);
	void TutorialTrigger_Capture(const struct FPalUIPalCaptureInfo& CaptureInfo, bool CaptureSuccess);
};

// 0x10 (0xC8 - 0xB8)
// Class Pal.PalTutorialQuestManager
class UPalTutorialQuestManager : public UPalQuestManager
{
public:
	TArray<struct FPalOrderedQuestSaveData>      CachedOrderedQuestSaveData;                        // 0xB8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalTutorialQuestManager* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Pal.PalTutorialTriggerBase
class UPalTutorialTriggerBase : public UObject
{
public:
	bool                                         Checked;                                           // 0x28(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanTriggerMultiple;                                // 0x29(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F52[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   TutorialMsgID;                                     // 0x30(0x10)(BlueprintVisible, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalTutorialTriggerBase* GetDefaultObj();

	enum class EPalTutorialTriggerType GetType();
};

// 0x8 (0x48 - 0x40)
// Class Pal.PalTutorialTrigger_Common
class UPalTutorialTrigger_Common : public UPalTutorialTriggerBase
{
public:
	enum class EPalTutorialTriggerConditionType  TriggerType;                                       // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F54[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTutorialTrigger_Common* GetDefaultObj();

};

// 0x20 (0x60 - 0x40)
// Class Pal.PalTutorialTrigger_AddItem
class UPalTutorialTrigger_AddItem : public UPalTutorialTriggerBase
{
public:
	TArray<class FName>                          StaticItemIds;                                     // 0x40(0x10)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	enum class EPalItemTypeB                     ItemCategory;                                      // 0x50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BuildObjectId;                                     // 0x54(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F56[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTutorialTrigger_AddItem* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Pal.PalTutorialTrigger_Individual
class UPalTutorialTrigger_Individual : public UPalTutorialTriggerBase
{
public:
	enum class EPalTutorialTriggerConditionType  TriggerType;                                       // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F58[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalTutorialTrigger_Individual* GetDefaultObj();

};

// 0x10 (0x50 - 0x40)
// Class Pal.PalTutorialTrigger_Respawn
class UPalTutorialTrigger_Respawn : public UPalTutorialTriggerBase
{
public:
	TArray<enum class EPalLocationType>          LocationTypes;                                     // 0x40(0x10)(BlueprintVisible, ZeroConstructor, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalTutorialTrigger_Respawn* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Pal.PalTutorialTrigger_Capture
class UPalTutorialTrigger_Capture : public UPalTutorialTriggerBase
{
public:
	enum class EPalTutorialTriggerConditionType  TriggerType;                                       // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F5C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TriggerCount;                                      // 0x44(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalTutorialTrigger_Capture* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalMapBaseCampWorkerOrderTypeUtility
class UPalMapBaseCampWorkerOrderTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalMapBaseCampWorkerOrderTypeUtility* GetDefaultObj();

	bool IsBattleOrderType(enum class EPalMapBaseCampWorkerOrderType OrderType);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalEnergyTypeUtility
class UPalEnergyTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalEnergyTypeUtility* GetDefaultObj();

	void CollectWorkableElementTypes(enum class EPalEnergyType EnergyType, TArray<enum class EPalElementType>* ElementTypes);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalLandingTypeUtility
class UPalLandingTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalLandingTypeUtility* GetDefaultObj();

	bool IsRollStep(enum class EPalLandingType T);
	bool IsJumpLanding(enum class EPalLandingType T);
	bool IsFootStep(enum class EPalLandingType T);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalContainerIdUtility
class UPalContainerIdUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalContainerIdUtility* GetDefaultObj();

	struct FPalContainerId NoneContainerId();
	bool IsNoneContainerId(struct FPalContainerId& ContainerId);
	bool BP_NotEqual(struct FPalContainerId& A, struct FPalContainerId& B);
	bool BP_Equal(struct FPalContainerId& A, struct FPalContainerId& B);
};

// 0x0 (0x450 - 0x450)
// Class Pal.PalUIActionWidgetBase
class UPalUIActionWidgetBase : public UCommonActionWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIActionWidgetBase* GetDefaultObj();

	void OverrideImage(const struct FSlateBrush& OverrideBrush);
	class FText GetLocalizedDisplayText();
};

// 0x20 (0x428 - 0x408)
// Class Pal.PalUIActionWidgetForPlayerInput
class UPalUIActionWidgetForPlayerInput : public UPalUserWidget
{
public:
	class FName                                  BindInputActionName;                               // 0x408(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OverrideMouseInputActionName;                      // 0x410(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OverridePadInputActionName;                        // 0x418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OverrideInputType;                                 // 0x420(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F70[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIActionWidgetForPlayerInput* GetDefaultObj();

	void UpdateImage(const struct FSlateBrush& NewBrush);
	void UnbindInputMethodChangeEvent();
	void OnKeyConfigChanged();
	void ChangeOverrideType(int32 Type);
	void ChangeOverridePadBindActionName(class FName& NewActionName);
	void ChangeOverrideMouseBindActionName(class FName& NewActionName);
	void ChangeBindActionName(class FName& NewActionName);
	void BindInputMethodChangeEvent();
};

// 0x8 (0x410 - 0x408)
// Class Pal.PalUIAimReticleBase
class UPalUIAimReticleBase : public UPalUserWidget
{
public:
	uint8                                        Pad_3F74[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIAimReticleBase* GetDefaultObj();

	void TickDisplayOutline(struct FHitResult& HitResult);
	void IsAssignableToHitResult(struct FHitResult& HitResult, class UPalCharacterParameterComponent* CheckCharacterParam, struct FPalUIAimReticleMapObjectAssignableData* OutAssignableData);
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalUIBaseCampManageModel
class UPalUIBaseCampManageModel : public UObject
{
public:
	TSubclassOf<class UPalUIPalBoxModel>         PalBoxClass;                                       // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIPalBoxModel*                     PalBox;                                            // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIBaseCampWorkersModel> BaseCampWorkersClass;                              // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIBaseCampWorkersModel*            BaseCampWorkers;                                   // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIBaseCampWaitersModel> BaseCampWaitersClass;                              // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIBaseCampWaitersModel*            BaseCampWaiters;                                   // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIBaseCampPartyModel>  BaseCampPartyClass;                                // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIBaseCampPartyModel*              BaseCampParty;                                     // 0x60(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIBaseCampManageModel* GetDefaultObj();

	void MoveWaiterToWorker(int32 SlotIndex);
	void MoveSlotToPosses(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToParty(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToLost(class UPalIndividualCharacterSlot* Slot);
	void Initialize(struct FGuid& BaseCampId);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIBaseCampPartyModel
class UPalUIBaseCampPartyModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIBaseCampPartyModel* GetDefaultObj();

	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	int32 GetSlotCountInPage();
	TArray<class UPalIndividualCharacterSlot*> GetCurrentPageSlots();
};

// 0x10 (0x48 - 0x38)
// Class Pal.PalHUDDispatchParameter_BaseCampTask
class UPalHUDDispatchParameter_BaseCampTask : public UPalHUDDispatchParameterBase
{
public:
	struct FGuid                                 TargetBaseCampId;                                  // 0x38(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_BaseCampTask* GetDefaultObj();

};

// 0x28 (0x458 - 0x430)
// Class Pal.PalUIBaseCampTaskBase
class UPalUIBaseCampTaskBase : public UPalUserWidgetOverlayUI
{
public:
	TSubclassOf<class UPalBaseCampTaskChecker>   baseCampTaskCheckerClass;                          // 0x430(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 BaseCampId;                                        // 0x438(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastCheckedBaseCampLevel;                          // 0x448(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3F82[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalBaseCampTaskChecker*               TaskChecker;                                       // 0x450(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUIBaseCampTaskBase* GetDefaultObj();

	bool TryBaseCampLevelUp();
	void SetTargetBaseCampID(struct FGuid& TargetBaseCampId);
	bool IsCampLevelMax();
	bool GetNowLevelTaskData(struct FPalBaseCampTaskDataSet* OutTaskData);
	class UPalBaseCampModel* GetBaseCampModel();
	struct FGuid GetBaseCampId();
	bool CheckTask(struct FPalBaseCampTaskCheckedData* OutChedckedData);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIBaseCampWaitersModel
class UPalUIBaseCampWaitersModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIBaseCampWaitersModel* GetDefaultObj();

	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	int32 GetSlotCountInPage();
	TArray<class UPalIndividualCharacterSlot*> GetCurrentPageSlots();
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalUIBaseCampWorkerListModel
class UPalUIBaseCampWorkerListModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePageDelegate;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 BaseCampId;                                        // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 CurrentDisplayBaseCampId;                          // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIBaseCampWorkerListModel* GetDefaultObj();

	void UpdatePageDelegate__DelegateSignature(class UPalUIBaseCampWorkerListModel* Model);
	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	void SelectFirstEmptyHandleSlot();
	int32 GetSlotCountInPage();
	void GetCurrentPageSlots(TArray<class UPalIndividualCharacterSlot*>* OutSlots);
	struct FGuid GetCurrentDisplayBaseCampId();
	class FString GetBaseCampName();
	struct FGuid GetBaseCampId();
};

// 0x28 (0x50 - 0x28)
// Class Pal.PalUIBaseCampWorkersModel
class UPalUIBaseCampWorkersModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePageDelegate;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F91[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentPageIndex;                                  // 0x48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3F92[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIBaseCampWorkersModel* GetDefaultObj();

	void UpdatePageDelegate__DelegateSignature(class UPalUIBaseCampWorkersModel* Model);
	void ToPage(int32 PageIndex);
	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	void SelectFirstEmptyHandleSlot();
	int32 GetWholePageCount();
	int32 GetSlotCountInPage();
	TArray<class UPalIndividualCharacterSlot*> GetCurrentPageSlots();
	class UPalBaseCampModel* GetBaseCampModel(int32 PageIndex);
	struct FGuid GetBaseCampId();
};

// 0x0 (0x420 - 0x420)
// Class Pal.PalUIBuilding
class UPalUIBuilding : public UPalUserWidgetStackableUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIBuilding* GetDefaultObj();

	void BuildObjectSuccessed();
	void BuildObjectFailed(int32 ResultIntValue);
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalUIBuildingModel
class UPalUIBuildingModel : public UObject
{
public:
	class FName                                  BuildObjectId;                                     // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIBuildingModel* GetDefaultObj();

	void Setup(class FName InBuildObjectId);
	void RotateTarget(bool bRight);
	void OnUpdateInventory(class UPalItemContainer* Container);
	void FinishBuilding();
	void Dispose();
	void BuildObject(bool bContinuously);
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalUIBuildingParameter
class UPalUIBuildingParameter : public UPalHUDDispatchParameterBase
{
public:
	int32                                        BuildObjectId;                                     // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3F98[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIBuildingParameter* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Pal.PalUIBuildModel
class UPalUIBuildModel : public UObject
{
public:
	class FName                                  ForceBuildPalBoxTextId;                            // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIBuildModel* GetDefaultObj();

	void StartDismantleMode(int32 LastSelectedIndex, bool bFromRadialMenu);
	void StartBuildObject(class FName BuildObjectId, bool bFromRadialMenu);
	void OnOpenMenu();
	void OnConfimAlert_ForceBuildPalBox(bool bDialogBool);
	void GetBuildObjectDataArrayForTypeAByTypeB(enum class EPalBuildObjectTypeA TypeA, TArray<struct FPalBuildObjectDataSetTypeB>* OutArray);
	void FinishDismantleMode();
};

// 0x10 (0x48 - 0x38)
// Class Pal.PalBuildProgressWorldHUDParameter
class UPalBuildProgressWorldHUDParameter : public UPalHUDDispatchParameterBase
{
public:
	class UPalBuildProcess*                      BuildProcess;                                      // 0x38(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APalBuildObject*                       BuildObject;                                       // 0x40(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalBuildProgressWorldHUDParameter* GetDefaultObj();

};

// 0x8 (0x410 - 0x408)
// Class Pal.PalUIBuildProgressWorldHUD
class UPalUIBuildProgressWorldHUD : public UPalUserWidgetWorldHUD
{
public:
	class UPalBuildProcess*                      BuildProcess;                                      // 0x408(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIBuildProgressWorldHUD* GetDefaultObj();

	void SetProgress(class UPalWorkProgress* Work);
	void OnUpdatedAssignCharacter(class UPalWorkBase* TargetWork);
	void OnRequestClose(class UPalBuildProcess* Process);
	void CloseSelf();
	void BindUpdateAssingedCharacterDelegate();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUICharacterDisplayOptionInterface
class IPalUICharacterDisplayOptionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalUICharacterDisplayOptionInterface* GetDefaultObj();

	bool IsSelectableSlot(class UPalIndividualCharacterSlot* Slot);
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalUICharacterDisplayModel
class UPalUICharacterDisplayModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateDelegate;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalIndividualCharacterSlot*>   DisplaySlots;                                      // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPalInstanceID>                NotSelectableIndividualIds;                        // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FA9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUICharacterDisplayModel* GetDefaultObj();

	void UpdateDelegate__DelegateSignature(class UPalUICharacterDisplayModel* Model);
	bool IsSelectable(int32 DisplayIndex);
	int32 GetSlotCount();
	void GetDisplaySlots(TArray<class UPalIndividualCharacterSlot*>* OutSlots);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUICharacterHPGaugeBase
class UPalUICharacterHPGaugeBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUICharacterHPGaugeBase* GetDefaultObj();

	void UpdateVisibility();
	void UpdateText();
	void UpdatePosition();
	void SetupGaugeColor();
	void SetupEvents();
	void SetTargetCharacter(class APalCharacter* TargetCharacter);
	void SetHPPercent(float Percent);
	void OnRequestClose();
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUICharacterMakeBase
class UPalUICharacterMakeBase : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUICharacterMakeBase* GetDefaultObj();

	void RequestChangePlayerName(const class FString& NewPlayerName);
	bool GetPlayerMakeInfo(struct FPalPlayerDataCharacterMakeInfo* OutMakeInfo);
	void ApplyMakeInfoToPlayerData(struct FPalPlayerDataCharacterMakeInfo& MakeInfo);
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_CharacterMake
class UPalHUDDispatchParameter_CharacterMake : public UPalHUDDispatchParameterBase
{
public:
	bool                                         bIsNewGame;                                        // 0x38(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FB0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_CharacterMake* GetDefaultObj();

};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUICharacterStatus
class UPalUICharacterStatus : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUICharacterStatus* GetDefaultObj();

	void RemoveActiveSkill(class UPalIndividualCharacterHandle* TargetHandle, enum class EPalWazaID TargetWazaID);
	void DropCharacter(class UPalIndividualCharacterHandle* TargetHandle);
	void ChangeNickname(class UPalIndividualCharacterHandle* TargetHandle, class FText& NewNickName);
	void ChangeActiveSkill(class UPalIndividualCharacterHandle* TargetHandle, enum class EPalWazaID ChangeWazaID, enum class EPalWazaID NewWazaID);
	void AddActiveSkill(class UPalIndividualCharacterHandle* TargetHandle, enum class EPalWazaID NewWazaID);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUICompassIconBase
class UPalUICompassIconBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUICompassIconBase* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Pal.PalUIConvertItemModel
class UPalUIConvertItemModel : public UObject
{
public:
	class UPalUIProductSettingModel*             ProductSettingModel;                               // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPalMapObjectConvertItemModel> WeakConvertItemModel;                              // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIConvertItemModel* GetDefaultObj();

	void UpdateProductSetting_TransportToStorage(bool bOn);
	void UpdateProductSetting();
	bool TryGetConcreteModel(class UPalMapObjectConvertItemModel** Model);
	void StartProduction();
	void Initialize(class UPalMapObjectConvertItemModel* InModel);
	class FText GetBuildObjectName();
	enum class EPalUIConvertItemRequestStartResponse CanStartProduction();
	void CancelProduct();
};

// 0x38 (0x440 - 0x408)
// Class Pal.PalUIDamageTextBase
class UPalUIDamageTextBase : public UPalUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnRequestCloseDelegate;                            // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        DisplayTime;                                       // 0x418(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DisplayTimer;                                      // 0x41C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalDamageTextSeq                 NowSeq;                                            // 0x420(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3FBB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetLocation;                                    // 0x428(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUIDamageTextBase* GetDefaultObj();

	void UpdatePosition(struct FVector& TargetWorldLocation);
	void StartDisplay(float InDisplayTime);
	void SetTargetWorldLocation(struct FVector& NewLocation);
	void SetDamageValue(int32 InValue);
	void SetDamageColor(struct FSlateColor& InColor);
	void ResetTimer();
	void RequestCloseDelegate__DelegateSignature(class UPalUIDamageTextBase* SelfWidget);
	void RequestClose();
	void OnRequestClose();
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalUIDelayGaugeCalculator
class UPalUIDelayGaugeCalculator : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnStartDelayGaugeTimerDelegate;                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndDelayGaugeDelegate;                           // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UProgressBar*                          MainBar;                                           // 0x48(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          SubBar;                                            // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayGaugeTimer;                                   // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayGaugeStartTime;                               // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayGaugeProgressPerSecond;                       // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3FC1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIDelayGaugeCalculator* GetDefaultObj();

	void Update(float DeltaTime);
	void StartDelayGaugeTimerDelegate__DelegateSignature();
	void Setup(class UProgressBar* InMainBar, class UProgressBar* InSubBar);
	void SetPercentForce(float Percent);
	void SetPercent(float Percent);
	void EndDelayGaugeDelegate__DelegateSignature();
};

// 0x48 (0x80 - 0x38)
// Class Pal.PalDialogParameterBase
class UPalDialogParameterBase : public UPalHUDDispatchParameterBase
{
public:
	enum class EPalDialogType                    DialogType;                                        // 0x38(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Message;                                           // 0x40(0x18)(BlueprintVisible, Transient, ExposeOnSpawn, NativeAccessSpecifierPublic)
	FDelegateProperty_                           Callback;                                          // 0x58(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           CallbackWithParameter;                             // 0x68(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCloseWhenDamaged;                                // 0x78(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnableShortcutConfirmInput;                      // 0x79(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FC6[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDialogParameterBase* GetDefaultObj();

	void InvokeCallback(bool bResult);
};

// 0x8 (0x88 - 0x80)
// Class Pal.PalDialogParameterDialog
class UPalDialogParameterDialog : public UPalDialogParameterBase
{
public:
	bool                                         bDefaultNegative;                                  // 0x80(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3FCA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalDialogParameterDialog* GetDefaultObj();

	void SetParameters(class FText InMessage, enum class EPalDialogType InDialogType, bool bInNegativeDefault);
};

// 0x80 (0x108 - 0x88)
// Class Pal.PalDialogParameter_RequestJoinGuild
class UPalDialogParameter_RequestJoinGuild : public UPalDialogParameterDialog
{
public:
	struct FGuid                                 RequestPlayerUId;                                  // 0x88(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        RequestPlayerInstanceId;                           // 0x98(0x30)(BlueprintVisible, Transient, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 TargetPlayerUId;                                   // 0xC8(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPalInstanceID                        TargetPlayerInstanceId;                            // 0xD8(0x30)(BlueprintVisible, Transient, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDialogParameter_RequestJoinGuild* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class Pal.PalDialogParameter_RequestMapObjectDismantle
class UPalDialogParameter_RequestMapObjectDismantle : public UPalDialogParameterDialog
{
public:
	struct FGuid                                 MapObjectInstanceId;                               // 0x88(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalDialogParameter_RequestMapObjectDismantle* GetDefaultObj();

};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUIDialogBase
class UPalUIDialogBase : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIDialogBase* GetDefaultObj();

};

// 0x0 (0x420 - 0x420)
// Class Pal.PalUIDismantling
class UPalUIDismantling : public UPalUserWidgetStackableUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIDismantling* GetDefaultObj();

	void DismantleObjectSuccessed();
	void DismantleObjectFailed();
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalUIDismantlingModel
class UPalUIDismantlingModel : public UObject
{
public:
	class FName                                  BuildObjectId;                                     // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIDismantlingModel* GetDefaultObj();

	void Setup();
	void OnUpdateInventory(class UPalItemContainer* Container);
	void FinishDismantling();
	void Dispose();
	void DismantleObject(bool bContinuously);
};

// 0x10 (0x2A0 - 0x290)
// Class Pal.PalUIDisplayCharacter
class APalUIDisplayCharacter : public AActor
{
public:
	class USceneComponent*                       DefaultSceneRoot;                                  // 0x290(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPalSkeletalMeshComponent*             PalSkeletalMeshComponent;                          // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalUIDisplayCharacter* GetDefaultObj();

	void GetHairBaseColor(class UPalSkeletalMeshComponent* TargetSkeletalMesh, struct FLinearColor* OutColor);
	void GetEyeBaseColor(class UPalSkeletalMeshComponent* TargetSkeletalMesh, struct FLinearColor* OutColor);
	void GetBrowBaseColor(class UPalSkeletalMeshComponent* TargetSkeletalMesh, struct FLinearColor* OutColor);
	void GetBodyBaseColor(class UPalSkeletalMeshComponent* TargetSkeletalMesh, struct FLinearColor* OutColor);
	void ApplyCharacterMakeInfoFromPlayerData();
	void ApplyCharacterMakeInfo(struct FPalPlayerDataCharacterMakeInfo& MakeInfo);
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUIGameOver
class UPalUIGameOver : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIGameOver* GetDefaultObj();

	bool IsExistRespawnLocation();
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUIGuildMenu
class UPalUIGuildMenu : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIGuildMenu* GetDefaultObj();

	void RequestExitGuild();
	void RequestChangeGuildName(const class FString& NewGuildName);
	void RequestChangeAdmin(struct FGuid& TargetPlayerUId);
	void RequestBanPlayer(struct FGuid& TargetPlayerUId);
	void OnUpdatedMemberInfo_Binded(class UPalGroupGuildBase* Guild, struct FGuid& PlayerUId, struct FPalGuildPlayerInfo& PlayerInfo);
	void OnUpdatedMemberInfo(struct FGuid& PlayerUId, struct FPalUIGuildMemberDisplayInfo& PlayerInfo);
	void OnUpdatedGuildName_Binded(const class FString& NewGuildName);
	void OnUpdatedGuildName(const class FString& NewGuildName);
	void OnRemovedMemberInfo(struct FGuid& PlayerUId);
	bool IsExistPlayer(struct FGuid& PlayerUId);
	bool IsAdminLocalPlayer();
	class UPalGroupGuildBase* GetMyGuild();
	void GetGuildName(class FString* OutGuildName);
	void GetGuildMemberInfo(TMap<struct FGuid, struct FPalUIGuildMemberDisplayInfo>* OutDisplayInfoMap);
	void GetAdminPlayerUId(struct FGuid* OutAdminPlayerUId);
	bool CanExitGuild();
};

// 0x0 (0x3C8 - 0x3C8)
// Class Pal.PalUIHUDLayoutBase
class UPalUIHUDLayoutBase : public UCommonActivatableWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIHUDLayoutBase* GetDefaultObj();

	void VisibilityOverride(enum class ESlateVisibility ChangedVisibility);
	void RemoveWorldHUD(class UPalUserWidgetWorldHUD* Widget);
	void RemoveHUD(class UPalUserWidget* Widget);
	void AddWorldHUD(class UPalUserWidgetWorldHUD* Widget);
	void AddHUD(class UPalUserWidget* Widget, int32 ZOrder);
};

// 0x0 (0x290 - 0x290)
// Class Pal.PalUIInframeRenderer
class APalUIInframeRenderer : public AActor
{
public:

	static class UClass* StaticClass();
	static class APalUIInframeRenderer* GetDefaultObj();

	class UPalStaticCharacterParameterComponent* GetStaticParameteComponentFromActorClassr(TSubclassOf<class AActor>& TargetActorClass);
	class USkeletalMeshComponent* GetSkeletalMeshComponentFromActorClass(TSubclassOf<class AActor>& TargetActorClass);
	void ClearOverrideMaterials(class USkeletalMeshComponent* TargetSkeletalMesh);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIInGameGeneralDispatchEventReciever
class UPalUIInGameGeneralDispatchEventReciever : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIInGameGeneralDispatchEventReciever* GetDefaultObj();

	void OpenDismantlingUIFromRadialMenu(int32 LastSelectedIndex);
	void OpenDismantlingUI();
	void OpenBuildingUIFromRadialMenu(class FName BuildObjectId);
	void OpenBuildingUI(class FName BuildObjectId);
	void CloseDismantlingUI();
	void CloseBuildingUI();
};

// 0x0 (0x420 - 0x420)
// Class Pal.PalUIInGameInputListener
class UPalUIInGameInputListener : public UPalUserWidgetStackableUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIInGameInputListener* GetDefaultObj();

	void OpenBuildRadialMenuWithSelectedIndex(int32 SelectedIndex);
	void OpenBuildRadialMenu(class FName BuildObjectId);
	void OpenBuildMenu(int32 BuildObjectTypeA);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIInGameMainMenuBuildModel
class UPalUIInGameMainMenuBuildModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIInGameMainMenuBuildModel* GetDefaultObj();

	void Setup();
	void OnUpdateInventory(class UPalItemContainer* Container);
	void Dispose();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIInGameMainMenuInventoryModel
class UPalUIInGameMainMenuInventoryModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIInGameMainMenuInventoryModel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIInGameMainMenuModel
class UPalUIInGameMainMenuModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIInGameMainMenuModel* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIInputGuard
class UPalUIInputGuard : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIInputGuard* GetDefaultObj();

	void OnTriggerReleaseGuardInput();
};

// 0x110 (0x518 - 0x408)
// Class Pal.PalUIInsideBaseCampCanvas
class UPalUIInsideBaseCampCanvas : public UPalUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnEnterPalBoxAreaDelegate;                         // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnLeavePalBoxAreaDelegate;                         // 0x418(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UPalBaseCampTaskChecker*               TaskChecker;                                       // 0x428(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PalboxAreaRange;                                   // 0x430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalLogWidgetBase>         AllTaskCompletedLogClass;                          // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 LastInsideBaseCampID;                              // 0x440(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FPalDataTableRowName_ItemData, struct FPalInsideBaseCampUI_DisplayItemInfo> DisplayItemInfoMap;                                // 0x450(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPalBaseCampTaskCheckedData           CachedTaskCheckData;                               // 0x4A0(0x60)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3FEA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIInsideBaseCampCanvas* GetDefaultObj();

	void UnregisterTaskProgressEvent(class UPalBaseCampModel* Model);
	void ResetCachedTaskCheckData();
	void RemoveAllTaskCompletedLog();
	void RegisterTaskProgressEvent();
	void OnNotAvailableInsideBaseCampMapObjectConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
	void OnLeavePalBoxAreaDelegate__DelegateSignature();
	void OnEnterPalBoxAreaDelegate__DelegateSignature();
	void OnAvailableInsideBaseCampMapObjectConcreteModel(class UPalMapObjectConcreteModelBase* ConcreteModel);
	bool GetTaskData(struct FPalBaseCampTaskDataSet* OutTaskData);
	class UPalBaseCampModel* GetInsideBaseCampModel();
	void GetBaseCampPalSlots(TArray<class UPalIndividualCharacterSlot*>* OutSlots);
	int32 GetBaseCampPalBedCount();
	bool CheckTask(struct FPalBaseCampTaskCheckedData* OutCheckedData);
	void CheckItemNum(TMap<class FName, int64>* OutItemNumMap, int64* OutFoodNum);
	void CheckInsidePalBox();
};

// 0x50 (0x458 - 0x408)
// Class Pal.PalUIInventoryEquipment
class UPalUIInventoryEquipment : public UPalUserWidget
{
public:
	uint8                                        Pad_3FEF[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIInventoryEquipment* GetDefaultObj();

	void SwapItemSlot(class UPalItemSlot* SlotA, class UPalItemSlot* SlotB);
	void SwapEquipmentByLiftItem(enum class EPalPlayerEquipItemSlotType SlotType);
	void RequestUpdatePlayerStatusPoint(TMap<class FName, int32>& AddPointMap);
	void QuickSortInventory();
};

// 0x78 (0xA0 - 0x28)
// Class Pal.PalUIInventoryModel
class UPalUIInventoryModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateContainerContentDelegate;                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishedItemTrashDelegate;                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishedItemDropDelegate;                        // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPalItemContainerMultiHelper*          InventoryContainers;                               // 0x58(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalItemSlotId                        TmpLiftedItemSlotId;                               // 0x60(0x14)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalItemAndNum                        TmpLiftedItemAndNum;                               // 0x74(0x2C)(NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIInventoryModel* GetDefaultObj();

	void UpdateContainerContentDelegate__DelegateSignature();
	void TryMoveSlotToInventory(class UPalItemSlot* FromSlot, bool TryAutoEquip);
	void TryMoveContainerToInventory(class UPalItemContainer* FromContainer, bool TryAutoEquip);
	bool TryGetInventoryContainer(enum class EPalPlayerInventoryType Type, class UPalItemContainer** Container);
	void TryFillSlotToTargetContainerFromInventory(struct FPalContainerId& ToContainerId);
	void TryFillSlotToInventoryFromTargetContainer(struct FPalContainerId& FromContainerId);
	void TrashLiftUpItem();
	void TrashItemFromDropSlot();
	void Setup();
	void SelectItemSlot(const struct FPalItemSlotId& SlotID, enum class EPalItemSlotPressType PressType);
	void ResetLiftItem();
	void RequestSortInventory();
	void OnUpdateContainerContent(class UPalItemContainer* Container);
	void OnFinishedTrashItemDialog(bool Result);
	void OnFinishedTrashItemAlert(bool Result);
	void OnFinishedDropItem(bool Result);
	bool IsExistItems(const TArray<struct FPalStaticItemIdAndNum>& RequiredItems);
	void FinishedItemTrashDelegate__DelegateSignature(bool Result);
	void FinishedItemDropDelegate__DelegateSignature(bool Result);
	void DropLiftUpItem();
	void DropItemFromDropSlot();
	void Dispose();
	bool CheckLiftItemTypeB(enum class EPalItemTypeB CheckType);
	bool CheckLiftItemTypeA(enum class EPalItemTypeA CheckType);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIItemBoxModel
class UPalUIItemBoxModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIItemBoxModel* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIItemPossessStatusIndicator
class UPalUIItemPossessStatusIndicator : public UPalUserWidgetWorldHUD
{
public:

	static class UClass* StaticClass();
	static class UPalUIItemPossessStatusIndicator* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalUIItemPossessStatusIndicatorParameter
class UPalUIItemPossessStatusIndicatorParameter : public UPalHUDDispatchParameterBase
{
public:
	class UPalIndividualCharacterHandle*         TargetCharacter;                                   // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalUIItemPossessStatusIndicatorParameter* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_ItemShop
class UPalHUDDispatchParameter_ItemShop : public UPalHUDDispatchParameterBase
{
public:
	class UPalShopBase*                          Shop;                                              // 0x38(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_ItemShop* GetDefaultObj();

};

// 0x30 (0x460 - 0x430)
// Class Pal.PalUIItemShopBase
class UPalUIItemShopBase : public UPalUserWidgetOverlayUI
{
public:
	uint8                                        Pad_400B[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIItemShopBase* GetDefaultObj();

	bool TrySteal(struct FGuid& buyProductID, int32 StealNum);
	bool TrySell(TArray<class UPalItemSlot*>& SellItemSlots);
	bool TryBuy(struct FGuid& buyProductID, int32 BuyNum);
	bool GetMyShop(class UPalShopBase** OutShop);
};

// 0x28 (0x458 - 0x430)
// Class Pal.PalUIJoinGameBase
class UPalUIJoinGameBase : public UPalUserWidgetOverlayUI
{
public:
	bool                                         bIsShowIgnoreVersionServer;                        // 0x430(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4016[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        OfficialServerIPRangeList;                         // 0x438(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPalUIServerDisplayData>       CachedServerDisplayInfo;                           // 0x448(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUIJoinGameBase* GetDefaultObj();

	void RequestOfficialServerIPRange();
	void RequestGetServerList(enum class EPalUIServerListFilterType Type, const class FString& Region, bool IsCleanCache, bool NextPage);
	void OnCompleteOfficialServerIPRange(const class FString& ResponseBody, bool bResponseOK, int32 ResponseCode);
	void OnCompleteGetServerListEvent();
	void OnCompleteFindSessions(bool IsSuccess, TArray<struct FBlueprintSessionResult>& Results, const class FString& ErrorStr);
	void ConnectServerByAddress(const class FString& Address, int32 Port);
	void ConnectServer(struct FPalUIServerDisplayData& ServerDisplayData);
	void CollectServerDisplayInfo(struct FPalUIServerDataCollectInfo& CollectInfo, TArray<struct FPalUIServerDisplayData>* OutServerInfo);
};

// 0x1A8 (0x1E0 - 0x38)
// Class Pal.PalHUDDispatchParame_JoinGameInputCode
class UPalHUDDispatchParame_JoinGameInputCode : public UPalHUDDispatchParameterBase
{
public:
	enum class EPalUIJoinGameInputCodeType       InputCodeType;                                     // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4018[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalUIServerDisplayData               TargetServerDisplayInfo;                           // 0x40(0x1A0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParame_JoinGameInputCode* GetDefaultObj();

};

// 0x10 (0x440 - 0x430)
// Class Pal.PalUIJoinGameInputCodeBase
class UPalUIJoinGameInputCodeBase : public UPalUserWidgetOverlayUI
{
public:
	class FString                                CahcedInputInviteCode;                             // 0x430(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUIJoinGameInputCodeBase* GetDefaultObj();

	void VerifyPassword(const class FString& InputPassword);
	void VerifyInviteCode(const class FString& InputCode);
	void OnNotifyVerifyPassword(bool IsMatchPassword);
	void OnNotifyVerifyInviteCode(bool IsValidCode, bool IsRequirePassword);
	void OnCompletedJoinSession(bool IsSuccess, enum class EJoinSessionResultType Type);
	void OnCompletedFindSessions(bool IsSuccess, TArray<struct FBlueprintSessionResult>& Results, const class FString& ErrorStr);
};

// 0xC8 (0xF0 - 0x28)
// Class Pal.PalUILiftSlotModel
class UPalUILiftSlotModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateDelegate;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateHandleSlotDelegate;                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateIconDelegate;                              // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateCountDelegate;                             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFailedItemOperationDelegate;                     // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalItemSlotId                        ItemSourceSlotId;                                  // 0x78(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPalItemAndNum                        ItemInfo;                                          // 0x8C(0x2C)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_4040[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalIndividualCharacterSlot*           CharacterSlot;                                     // 0xD0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4041[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUILiftSlotModel* GetDefaultObj();

	void SelectItemSlot(const struct FPalItemSlotId& SlotID, enum class EPalItemSlotPressType Type);
	void SelectCharacterSlot(const struct FPalCharacterSlotId& SlotID, enum class EPalItemSlotPressType Type);
	void ResetLiftItem();
	void OnUpdateLiftItemSourceSlot(class UPalItemSlot* Slot);
	void OnUpdateLiftHandleSlot(class UPalIndividualCharacterSlot* Slot, class UPalIndividualCharacterHandle* LastHandle);
	void OnUpdateIconDelegate__DelegateSignature(TSoftObjectPtr<class UTexture2D> IconTexture);
	void OnUpdateHandleSlotDelegate__DelegateSignature(class UPalIndividualCharacterSlot* TargetHandleSlot);
	void OnUpdateDelegate__DelegateSignature();
	void OnUpdateCountDelegate__DelegateSignature(int32 Count);
	void OnFailedItemOperationDelegate__DelegateSignature();
	bool IsLift();
};

// 0x8 (0x30 - 0x28)
// Class Pal.PalUILoadOutModel
class UPalUILoadOutModel : public UObject
{
public:
	enum class EPalPlayerInventoryType           DraggedTargetContainerType;                        // 0x28(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_404C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUILoadOutModel* GetDefaultObj();

	bool TryGetContainer(enum class EPalPlayerInventoryType TargetType, class UPalItemContainer** Container);
	void SelectItemSlot(const struct FPalItemSlotId& SlotID, enum class EPalItemSlotPressType PressType);
	bool CanSetItem(struct FPalItemData& ItemData);
};

// 0x50 (0x480 - 0x430)
// Class Pal.PalUILocalWorldSelectBase
class UPalUILocalWorldSelectBase : public UPalUserWidgetOverlayUI
{
public:
	TMap<class FString, struct FPalWorldBaseInfoData> LoadedBaseInfoMap;                                 // 0x430(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUILocalWorldSelectBase* GetDefaultObj();

	bool SelectWorld(const class FString& WorldSaveDirectoryName, const class FString& WorldName, struct FPalOptionWorldSaveData* OptionWorldData);
	void GetWorldDisplayInfo(TMap<class FString, struct FPalUILocalWorldDisplayData>* OutDisplayInfo);
	TArray<struct FPalUILocalWorldDisplayData> GetSortedWorldDisplayInfoArray(TMap<class FString, struct FPalUILocalWorldDisplayData>& DisplayInfoMap);
	bool DeleteWorld(const class FString& WorldSaveDirectoryName);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIManager
class UPalUIManager : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIManager* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class Pal.PalUIManagerSubsystem
class UPalUIManagerSubsystem : public UGameUIManagerSubsystem
{
public:
	uint8                                        Pad_4054[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIManagerSubsystem* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalMapObjectHPWorldHUDParameter
class UPalMapObjectHPWorldHUDParameter : public UPalHUDDispatchParameterBase
{
public:
	class APalMapObject*                         MapObject;                                         // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalMapObjectHPWorldHUDParameter* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIMapObjectHPWorldHUD
class UPalUIMapObjectHPWorldHUD : public UPalUserWidgetWorldHUD
{
public:

	static class UClass* StaticClass();
	static class UPalUIMapObjectHPWorldHUD* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIMapObjectStatusIndicatorBase
class UPalUIMapObjectStatusIndicatorBase : public UPalUserWidgetWorldHUD
{
public:

	static class UClass* StaticClass();
	static class UPalUIMapObjectStatusIndicatorBase* GetDefaultObj();

	enum class EPalWorkSuitability GetWorkSuitability();
};

// 0x10 (0x48 - 0x38)
// Class Pal.PalUIMapObjectStatusIndicatorParameterBase
class UPalUIMapObjectStatusIndicatorParameterBase : public UPalHUDDispatchParameterBase
{
public:
	uint8                                        Pad_4057[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIMapObjectStatusIndicatorParameterBase* GetDefaultObj();

	class UPalMapObjectConcreteModelBase* GetConcreteModel();
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUINPCHPGaugeCanvasBase
class UPalUINPCHPGaugeCanvasBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUINPCHPGaugeCanvasBase* GetDefaultObj();

};

// 0x50 (0x458 - 0x408)
// Class Pal.PalUIOffScreenLoupeBase
class UPalUIOffScreenLoupeBase : public UPalUserWidget
{
public:
	float                                        DisplayDotBorder;                                  // 0x408(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsWaitedClose;                                     // 0x40C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsOverrideVisibility;                              // 0x40D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsRequestedDisplay;                                // 0x40E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESlateVisibility                  OverrideVisibility;                                // 0x40F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               TargetWorldLocation;                               // 0x410(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ProjectedScreenPosition;                           // 0x428(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             CalcedScreenPosition;                              // 0x438(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             WidgetSize;                                        // 0x448(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUIOffScreenLoupeBase* GetDefaultObj();

	void SetOverrideVisibility(enum class ESlateVisibility NewVisibility);
	void ResetOverrideVisibility();
	void RequestHide();
	void RequestDisplay();
	void RequestClose();
	void OnRequestedClose();
	bool IsEnableLoupe();
	void GetTargetWorldLocation(struct FVector* OutVector);
	void GetTargetWidgetSize(struct FVector2D* OutVector);
	void CloseSelf();
	void CalcScreenPosition();
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalUIOtomoListModel
class UPalUIOtomoListModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnSelectSlotDelegate;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSlotDelegate;                              // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalUIOtomoListModel* GetDefaultObj();

	void UpdateSlotDelegate__DelegateSignature(class UPalUIOtomoListModel* Model);
	void SelectSlotDelegate__DelegateSignature(class UPalUIOtomoListModel* Model, int32 SlotIndex, enum class EPalItemSlotPressType PressType);
	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	int32 GetSlotCountInPage();
	void GetCurrentPageSlots(TArray<class UPalIndividualCharacterSlot*>* OutSlots);
	struct FPalContainerId GetContainerId();
};

// 0x18 (0x448 - 0x430)
// Class Pal.PalUIPalBoxBase
class UPalUIPalBoxBase : public UPalUserWidgetOverlayUI
{
public:
	uint8                                        Pad_406D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIPalBoxBase* GetDefaultObj();

	void TryMoveToOtomo(class UPalIndividualCharacterSlot* MoveSlot);
	void TryMoveToBox(class UPalIndividualCharacterSlot* MoveSlot);
	void TryMoveToBaseCamp(class UPalIndividualCharacterSlot* MoveSlot);
	void TryLoosePal(class UPalIndividualCharacterSlot* TargetSlot);
	void SetPagePalBoxList(int32 NewPage);
	void SetBaseCampId(struct FGuid& BaseCampId);
	void SelectCharacterSlot(class UPalIndividualCharacterSlot* TargetSlot, enum class EPalItemSlotPressType PressType);
	void RequestSortBox(enum class EPalCharacterContainerSortType SortType);
	void OnUpdateWorkerCapacity(class UPalIndividualCharacterContainer* Container);
	void OnUpdatePageWorkerList(TArray<class UPalIndividualCharacterSlot*>& SlotList);
	void OnUpdatePagePalBoxList(int32 NowPage, TArray<class UPalIndividualCharacterSlot*>& SlotList);
	int32 GetBoxMaxPageNum();
	void ChangePrevPagePalBoxList();
	void ChangeNextPagePalBoxList();
	void CancelLift();
};

// 0x18 (0x40 - 0x28)
// Class Pal.PalUIPalBoxModel
class UPalUIPalBoxModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePageDelegate;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        CurrentPageIndex;                                  // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4073[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIPalBoxModel* GetDefaultObj();

	void UpdatePageDelegate__DelegateSignature(class UPalUIPalBoxModel* Model);
	void ToPrevPage();
	void ToNextPage();
	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	int32 GetWholePageCount();
	int32 GetSlotCountInPage();
	TArray<class UPalIndividualCharacterSlot*> GetCurrentPageSlots();
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalUIPalBoxTerminalManageModel
class UPalUIPalBoxTerminalManageModel : public UObject
{
public:
	TSubclassOf<class UPalUIPalBoxModel>         PalBoxClass;                                       // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIPalBoxModel*                     PalBox;                                            // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIBaseCampWorkersModel> BaseCampWorkersClass;                              // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIBaseCampWorkersModel*            BaseCampWorkers;                                   // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIBaseCampPartyModel>  BaseCampPartyClass;                                // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIBaseCampPartyModel*              BaseCampParty;                                     // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIPalBoxTerminalManageModel* GetDefaultObj();

	void MoveSlotToWorker(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToPosses(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToParty(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToLost(class UPalIndividualCharacterSlot* Slot);
	void Initialize(struct FGuid& BaseCampId);
};

// 0x68 (0x90 - 0x28)
// Class Pal.PalUIPalCharacterRankUpModel
class UPalUIPalCharacterRankUpModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateTargetSlotDelegate;                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateResourceSlotDelegate;                      // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateSelectModeDelegate;                        // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalContainerId                       LocalContainerId;                                  // 0x58(0x10)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIPalStorageModel>     PalStorageModelClass;                              // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIPalStorageModel*                 PalStorageModel;                                   // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalUIPalCharacterRankUpSelectMode SelectMode;                                        // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4085[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIPalCharacterRankUpModel* GetDefaultObj();

	bool ToggleResourceCharacter(class UPalIndividualCharacterHandle* Handle);
	void Setup(class UPalHUDDispatchParameter_CharacterRankUp* Parameter);
	void SelectTargetCharacter(class UPalIndividualCharacterHandle* Handle);
	void SelectResourcesAuto(enum class EPalUIPalCharacterRankUpSelectResourceType SelectType);
	bool SelectResourceCharacterTo(class UPalIndividualCharacterHandle* Handle, int32 ToResourceSlotIndex);
	void OnUpdateTargetSlot(class UPalIndividualCharacterReferenceSlot* Slot, const struct FPalInstanceID& LastIndividualId);
	void OnUpdateTargetCharacterRank(int32 NowRank, int32 OldRank);
	void OnUpdateResourceSlot(class UPalIndividualCharacterReferenceSlot* Slot, const struct FPalInstanceID& LastIndividualId);
	void OnClickTargetCharacterSlot();
	void OnClickResourceCharacterSlot(int32 SlotIndex);
	void ModelDelegate__DelegateSignature(class UPalUIPalCharacterRankUpModel* Model);
	bool IsSelectableSlotInternal(class UPalIndividualCharacterSlot* Slot);
	void InvokeRankUp();
	class UPalIndividualCharacterReferenceSlot* GetTargetSlot();
	class UPalIndividualCharacterReferenceSlot* GetSlot(int32 SlotIndex);
	void GetResourceSlots(TArray<class UPalIndividualCharacterSlot*>* Slots);
	void Dispose();
	class UPalIndividualCharacterParameter* CreatePredicateTargetCharacterParameter();
	void ClearSelected();
	void ClearResourceCharacters();
	enum class EPalUIPalCharacterRankUpRequestResult CanInvokeRankUp();
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_CharacterRankUp
class UPalHUDDispatchParameter_CharacterRankUp : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectRankUpCharacterModel*     ConcreteModel;                                     // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_CharacterRankUp* GetDefaultObj();

};

// 0x60 (0x490 - 0x430)
// Class Pal.PalUIPaldex
class UPalUIPaldex : public UPalUserWidgetOverlayUI
{
public:
	TMap<class FName, struct FPalUIPaldex_DisplayInfo> DisplayInfoMap;                                    // 0x430(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPalUIPaldex_DisplayInfo>      DisplayInfoArray;                                  // 0x480(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIPaldex* GetDefaultObj();

	void CreateDisplayInfo();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIPalFarmSelectCropModel
class UPalUIPalFarmSelectCropModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIPalFarmSelectCropModel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIPalFoodBoxModel
class UPalUIPalFoodBoxModel : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalUIPalFoodBoxModel* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_PalShop
class UPalHUDDispatchParameter_PalShop : public UPalHUDDispatchParameterBase
{
public:
	class UPalShopBase*                          Shop;                                              // 0x38(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_PalShop* GetDefaultObj();

};

// 0x30 (0x460 - 0x430)
// Class Pal.PalUIPalShopBase
class UPalUIPalShopBase : public UPalUserWidgetOverlayUI
{
public:
	uint8                                        Pad_408D[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIPalShopBase* GetDefaultObj();

	void UpdateLocalLostPalProduct();
	bool TrySell(const TArray<class UPalIndividualCharacterSlot*>& SellPalSlots);
	bool TryBuy(struct FGuid& buyProductID);
	void RequestCollectLocalLostPalData();
	bool GetPalStorageSlots(class UPalIndividualCharacterContainer** OutContainer);
	bool GetMyShop(class UPalShopBase** OutShop);
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalUIPalStorageManageModel
class UPalUIPalStorageManageModel : public UObject
{
public:
	struct FGuid                                 OwnerBaseCampId;                                   // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIPalStorageModel>     PalStorageClass;                                   // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIPalStorageModel*                 PalStorage;                                        // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIPalStorageManageRightModel> PalStorageManageRightClass;                        // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIPalStorageManageRightModel*      PalStorageManageRight;                             // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIPalStorageManageModel* GetDefaultObj();

	void MoveSlotToWorker(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToPosses(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToParty(class UPalIndividualCharacterSlot* Slot);
	void MoveSlotToLost(class UPalIndividualCharacterSlot* Slot);
	void Initialize(struct FGuid& InOwnerBaseCampId);
};

// 0x48 (0x70 - 0x28)
// Class Pal.PalUIPalStorageManageRightModel
class UPalUIPalStorageManageRightModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePageDelegate;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 OwnerBaseCampId;                                   // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalPalStorageManageRightType     CurrentPageType;                                   // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_408E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalUIBaseCampWorkerListModel> BaseCampWorkerListClass;                           // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIBaseCampWorkerListModel*         BaseCampWorkerList;                                // 0x58(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPalUIOtomoListModel>      OtomoListClass;                                    // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPalUIOtomoListModel*                  OtomoList;                                         // 0x68(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIPalStorageManageRightModel* GetDefaultObj();

	void UpdatePageDelegate__DelegateSignature(class UPalUIPalStorageManageRightModel* Model);
	void ToPrevPage();
	void ToNextPage();
	bool CanMoveToPrev();
	bool CanMoveToNext();
};

// 0x20 (0x48 - 0x28)
// Class Pal.PalUIPalStorageModel
class UPalUIPalStorageModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdatePageDelegate;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        CurrentPageIndex;                                  // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4099[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalUICharacterDisplayModel*           DisplayModel;                                      // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIPalStorageModel* GetDefaultObj();

	void UpdatePageDelegate__DelegateSignature(class UPalUIPalStorageModel* Model);
	void ToPrevPage();
	void ToPage(int32 PageIndex, bool bForce);
	void ToNextPage();
	void SelectHandleSlot(int32 DisplayIndex, enum class EPalItemSlotPressType PressType);
	void OnOperatedByOuter();
	int32 GetWholePageCount();
	struct FPalContainerId GetTargetContainerId();
	bool CanMoveToPrev();
	bool CanMoveToNext();
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUIPlayerEquipment
class UPalUIPlayerEquipment : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIPlayerEquipment* GetDefaultObj();

	void SwapItemSlot(class UPalItemSlot* SlotA, class UPalItemSlot* SlotB);
	void SwapEquipment(enum class EPalPlayerEquipItemSlotType SlotType, class UPalItemSlot* FromSlot);
	void SetDisableEquipmentHeadMeshFlag(bool IsDisable);
	void RemoveItemSlot(class UPalItemSlot* TargetSlot, class UPalItemSlot* ToSlot);
	void RemoveEquipment(enum class EPalPlayerEquipItemSlotType SlotType, class UPalItemSlot* ToSlot);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIPlayerRadialMenuBase
class UPalUIPlayerRadialMenuBase : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIPlayerRadialMenuBase* GetDefaultObj();

	void SelectedFeed(struct FPalItemSlotId& ItemSlotId, int32 ItemNum);
	void OpenOtomoFeedInventory();
};

// 0x68 (0x90 - 0x28)
// Class Pal.PalUIProductSettingModel
class UPalUIProductSettingModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateRecipeDelegate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateProductNumDelegate;                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateDelegate;                                  // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  TargetMapObjectName;                               // 0x58(0x18)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class FName                                  SelectedRecipeId;                                  // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FocusedRecipeId;                                   // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ProductNum;                                        // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPalMapObjectEnergyModule> WeakEnergyModule;                                  // 0x84(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_40AA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIProductSettingModel* GetDefaultObj();

	void UpdateSettingDelegate__DelegateSignature(class UPalUIProductSettingModel* Model);
	bool TryGetEnergyModule(class UPalMapObjectEnergyModule** Module);
	void SetProductNumByInput(int32 InputNum);
	void SetMaxProduction();
	void SetInfiniteProduction();
	void SetFocusedRecipe(class FName RecipeID);
	void SelectRecipe(class FName RecipeID);
	void ResetProductNum();
	void OnUpdateInventory(class UPalItemContainerMultiHelper* IInventoryContainers);
	void NotifyUpdateForce();
	bool IsProductNumInfinite();
	void IncreaseProductNum();
	void GetRequiredMaterialInfos(TArray<struct FPalStaticItemIdAndNum>* RequiredMaterialInfos);
	class FName GetRecipeId();
	struct FPalItemRecipe GetRecipe();
	int32 GetProductNum();
	void DecreaseProductNum();
	float CalcWorkAmount();
	int32 CalcMaxProductableNum();
	int32 CalcConsumeEnergy();
};

// 0x48 (0x450 - 0x408)
// Class Pal.PalUIRadialMenuWidgetBase
class UPalUIRadialMenuWidgetBase : public UPalUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnChangeSelectedIndex;                             // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        IgnoreMouseLength;                                 // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MenuNum;                                           // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ShiftDegree;                                       // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DetectPadAxisBorder;                               // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NowArrowRadian;                                    // 0x428(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NowSelectedIndex;                                  // 0x42C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                MenuAreaStartRadian;                               // 0x430(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                MenuAreaEndRadian;                                 // 0x440(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIRadialMenuWidgetBase* GetDefaultObj();

	void UpdateSelectedIndex_ForPad();
	void UpdateSelectedIndex_ForMouse(struct FVector2D& MousePosition, struct FVector2D& CenterPosition);
	void UpdateSelectedIndex_ForceAxis(struct FVector2D& Axis);
	void SetSelectedIndexForce(int32 Index);
	float RecalculateRadian(float InRadian);
	void ClearSelectedIndex();
	void ChangeSelectedIndexDelegate__DelegateSignature(int32 NewIndex, int32 PrevIndex);
	void CalculateRadialMenuArea(float ParentDegreeAngle);
	void BuildRadialMenuWidget();
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUIRecoverPalBase
class UPalUIRecoverPalBase : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIRecoverPalBase* GetDefaultObj();

	void SelectCharacterSlot(class UPalIndividualCharacterSlot* TargetSlot, enum class EPalItemSlotPressType PressType);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIRecoverPalStatusIndicator
class UPalUIRecoverPalStatusIndicator : public UPalUIMapObjectStatusIndicatorBase
{
public:

	static class UClass* StaticClass();
	static class UPalUIRecoverPalStatusIndicator* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Pal.PalUIRecoverPalStatusIndicatorParameter
class UPalUIRecoverPalStatusIndicatorParameter : public UPalUIMapObjectStatusIndicatorParameterBase
{
public:

	static class UClass* StaticClass();
	static class UPalUIRecoverPalStatusIndicatorParameter* GetDefaultObj();

	bool TryGetConcreteModel(class UPalMapObjectRecoverOtomoModel** ConcreteModel);
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_RepairBench
class UPalHUDDispatchParameter_RepairBench : public UPalHUDDispatchParameterBase
{
public:
	class UPalMapObjectRepairItemModel*          Model;                                             // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_RepairBench* GetDefaultObj();

};

// 0x8 (0x438 - 0x430)
// Class Pal.PalUIRepairItemBase
class UPalUIRepairItemBase : public UPalUserWidgetOverlayUI
{
public:
	class UPalMapObjectRepairItemModel*          RepairItemModel;                                   // 0x430(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalUIRepairItemBase* GetDefaultObj();

	void RequestRepair(TArray<class UPalItemSlot*>& TargetItemSlotArray);
	void OnRecievedRepairResult(bool IsSuccess);
	void CollectRepairInfo(TArray<class UPalItemSlot*>& TargetItemSlotArray, TArray<struct FPalStaticItemIdAndNum>* OutRequiredMaterials, bool* OutCanRepair);
	void CollectRepairableSlot(TArray<class UPalItemSlot*>* OutRepairableSlots);
};

// 0x60 (0x98 - 0x38)
// Class Pal.PalHUDDispatchParameter_SelectItemInventory
class UPalHUDDispatchParameter_SelectItemInventory : public UPalHUDDispatchParameterBase
{
public:
	class FText                                  TitleText;                                         // 0x38(0x18)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	TArray<enum class EPalPlayerInventoryType>   ShowInventoryTypes;                                // 0x50(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<enum class EPalItemTypeA>             ShowItemTypesA;                                    // 0x60(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<enum class EPalItemTypeB>             ShowItemTypesB;                                    // 0x70(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         ShouldSelectNum;                                   // 0x80(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           Callback;                                          // 0x84(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_SelectItemInventory* GetDefaultObj();

	void InvokeCallback(struct FPalItemSlotId& ItemSlotId, int32 ItemNum);
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUISelectItemInventoryBase
class UPalUISelectItemInventoryBase : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUISelectItemInventoryBase* GetDefaultObj();

};

// 0x40 (0x78 - 0x38)
// Class Pal.PalUISelectNumParameter
class UPalUISelectNumParameter : public UPalHUDDispatchParameterBase
{
public:
	FDelegateProperty_                           ComplateCallBack;                                  // 0x38(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           ChangedNumCallBacl;                                // 0x48(0x10)(BlueprintVisible, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinNum;                                            // 0x58(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNum;                                            // 0x5C(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultNum;                                        // 0x60(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_40B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             Position;                                          // 0x68(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalUISelectNumParameter* GetDefaultObj();

	void InvokeComplateCallback(enum class EPalUISelectNumResult Result, int32 SelectedNum);
	void InvokeChangedNumCallback(int32 SelectedNum);
};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUISelectNumWidgetBase
class UPalUISelectNumWidgetBase : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUISelectNumWidgetBase* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class Pal.PalUIShopInventoryModel
class UPalUIShopInventoryModel : public UPalUIInventoryModel
{
public:

	static class UClass* StaticClass();
	static class UPalUIShopInventoryModel* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Pal.PalUIStatusModel
class UPalUIStatusModel : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnChangeSelectedIndexDelegate;                     // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalIndividualCharacterHandle*> PalHandles;                                        // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_40D3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUIStatusModel* GetDefaultObj();

	void OnClickedPalIcon(int32 Index);
	void Initialize(TArray<class UPalIndividualCharacterHandle*>& Handles);
	uint8 GetNowSelectedIndex();
	int32 GetDisplaySpeed(int32 Index);
	int32 GetDisplayShotAttack(int32 Index);
	enum class EPalStatusPhysicalHealthType GetDisplayPhysicalHealthType(int32 Index);
	bool GetDisplayPassiveSkillList(int32 Index, TArray<class FName>* OutArray);
	uint8 GetDisplayPalNum();
	class UPalIndividualCharacterHandle* GetDisplayPalHandle(uint8 Index);
	int32 GetDisplayNowExp(int32 Index);
	void GetDisplayNickName(int32 Index, class FString* OutName);
	int32 GetDisplayNextExp(int32 Index);
	int32 GetDisplayMeleeAttack(int32 Index);
	float GetDisplayMaxHunger(int32 Index);
	struct FFixedPoint64 GetDisplayMaxHP(int32 Index);
	int32 GetDisplayLevel(int32 Index);
	float GetDisplayHunger(int32 Index);
	struct FFixedPoint64 GetDisplayHP(int32 Index);
	enum class EPalElementType GetDisplayElementType2(int32 Index);
	enum class EPalElementType GetDisplayElementType1(int32 Index);
	int32 GetDisplayEatingHabits(int32 Index);
	int32 GetDisplayDefence(int32 Index);
	class FText GetDisplayDefaultName(int32 Index);
	class FText GetDisplayCoopActionName(int32 Index);
	class FText GetDisplayActiveSkillName(int32 Index, int32 SkillIndex);
	void ChangeNickname(int32 Index, const class FString& NewNickName);
	void ChangeIndex(uint8 Index);
	void ChangedIndex__DelegateSignature();
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUITechnologyDetailButton
class UPalUITechnologyDetailButton : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUITechnologyDetailButton* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIRecipeTechnologyDetailButton
class UPalUIRecipeTechnologyDetailButton : public UPalUITechnologyDetailButton
{
public:

	static class UClass* StaticClass();
	static class UPalUIRecipeTechnologyDetailButton* GetDefaultObj();

};

// 0x0 (0x420 - 0x420)
// Class Pal.PalUITitleBase
class UPalUITitleBase : public UPalUserWidgetStackableUI
{
public:

	static class UClass* StaticClass();
	static class UPalUITitleBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGaugeInterpolationCalculatorUtility
class UPalGaugeInterpolationCalculatorUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalGaugeInterpolationCalculatorUtility* GetDefaultObj();

	void TickGaugeInterpolation(class UObject* WorldContextObject, struct FPalGaugeInterpolationCalculator& Target, float DeltaTime);
	void SetGaugeInterpolationTargetValue(struct FPalGaugeInterpolationCalculator& Target, float TargetValue);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUIUtility
class UPalUIUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalUIUtility* GetDefaultObj();

	void SetVisibilityHUD(class UObject* WorldContextObject, bool IsVisible);
	void SetNumberToSeparatedTextBlock(class UObject* WorldContextObject, TArray<int32>& NumberArray, TArray<class UPalTextBlockBase*>& TextBlockArray, float TopZeroTextOpacity);
	void SetEnableCommonUIInput(class UObject* WorldContextObject, bool IsEnable);
	void SetCustomSlateNavigation(class UObject* WorldContextObject, struct FPalSlateNavigationSetting& NavigationSetting);
	void ResetSlateNavigation(class UObject* WorldContextObject);
	bool IsShiftDown_ForUI();
	bool IsRightShiftDown_ForUI();
	bool IsRightControlDown_ForUI();
	bool IsRightAltDown_ForUI();
	bool IsLeftShiftDown_ForUI();
	bool IsLeftControlDown_ForUI();
	bool IsLeftAltDown_ForUI();
	bool IsControlDown_ForUI();
	bool IsAltDown_ForUI();
	void GetWorkSuitabilityNameWithMaterialSubType(class UObject* WorldContextObject, enum class EPalWorkSuitability WorkSuitability, enum class EPalMapObjectMaterialSubType MaterialSubType, class FText* OutName);
	void GetWorkSuitabilityName(class UObject* WorldContextObject, enum class EPalWorkSuitability WorkSuitability, class FText* OutName);
	void GetWorkSickName(class UObject* WorldContextObject, enum class EPalBaseCampWorkerSickType SickType, class FText* OutName);
	bool GetWorkNameFromHandle(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* TargetHandle, class FText* OutName);
	void GetWorkName(class UObject* WorldContextObject, enum class EPalWorkType WorkType, class FText* OutName);
	bool GetWorkingDetailNameFromHandle(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* TargetHandle, class FText* OutName);
	void GetWorkingDetailName(class UObject* WorldContextObject, enum class EPalWorkType WorkType, class FText* OutName);
	void GetWorkerComment(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* TargetHandle, class FText* OutName);
	void GetWazaName(class UObject* WorldContextObject, enum class EPalWazaID WazaID, class FText* OutName);
	void GetWazaDesc(class UObject* WorldContextObject, enum class EPalWazaID WazaID, class FText* OutDesc);
	void GetWaitForWorkableDetailName(class UObject* WorldContextObject, enum class EPalWorkType WorkType, class FText* OutName);
	bool GetUIInputActionRowHandle(class UObject* WorldContextObject, class FName& ActionName, struct FDataTableRowHandle* OutHandle);
	void GetUIDisplayPalCondition(class UObject* WorldContextObject, TArray<enum class EPalUIConditionType>* OutArray, class UPalIndividualCharacterHandle* TargetHandle);
	void GetTechnologyDescription(class UObject* WorldContextObject, class FName& TechnologyName, class FText* OutDescription);
	int32 GetPlayerInframeRenderTargetResolution();
	void GetPassiveSkillName(class UObject* WorldContextObject, class FName& PassiveSkillId, class FText* OutName);
	void GetPartnerSkillName(class UObject* WorldContextObject, class FName& CharacterID, class FText* OutText);
	void GetPalShortDescription(class UObject* WorldContextObject, class FName& CharacterID, class FText* OutName);
	bool GetPalRestrictItemID(class UObject* WorldContextObject, class FName& CharacterID, class FName* ItemId);
	void GetPalLongDescription(class UObject* WorldContextObject, class FName& CharacterID, class FText* OutName);
	void GetPalGenusCategoryName(class UObject* WorldContextObject, enum class EPalGenusCategoryType GenusCategory, class FText* OutName);
	void GetPalFirstActivatedInfo(class UObject* WorldContextObject, class FName& CharacterID, class FText* OutName);
	void GetPalElementTypeName(class UObject* WorldContextObject, enum class EPalElementType ElementType, class FText* OutName);
	int32 GetPalConditionUrgency(class UObject* WorldContextObject, enum class EPalUIConditionType Condition);
	void GetPalConditionName(class UObject* WorldContextObject, enum class EPalUIConditionType ConditionType, class FText* OutName);
	void GetPalConditionDesc(class UObject* WorldContextObject, enum class EPalUIConditionType ConditionType, class FText* OutDesc);
	struct FSlateBrush GetMappedKeyIcon(class UObject* WorldContextObject, class FName InputActionName, enum class ECommonInputType InputType, enum class EPalKeyConfigAxisFilterType FilterType);
	void GetMapObjectOperationResultText(class UObject* WorldContextObject, enum class EPalMapObjectOperationResult OperationType, class FText* OutName);
	class FName GetMapObjectNameTextId(class UObject* WorldContextObject, class FName& MapObjectName);
	void GetMapObjectName(class UObject* WorldContextObject, class FName& MapObjectName, class FText* OutName);
	struct FSlateBrush GetKeyIconByKey(class UObject* WorldContextObject, const struct FKey& Key, enum class ECommonInputType InputType);
	void GetItemTypeAName(class UObject* WorldContextObject, enum class EPalItemTypeA ItemTypeA, class FText* OutName);
	void GetItemName(class UObject* WorldContextObject, class FName& StaticItemId, class FText* OutName);
	void GetItemDescription(class UObject* WorldContextObject, class FName& StaticItemId, class FText* OutName);
	void GetInventoryCategoryName(class UObject* WorldContextObject, enum class EPalPlayerInventoryType InventoryType, class FText* OutName);
	void GetFormatedFirstActivatedInfoText(class UObject* WorldContextObject, class APalCharacter* Character, class FText* OutFormatedText);
	void GetBuildObjectDesc(class UObject* WorldContextObject, class FName& buildObjectName, class FText* OutDesc);
	void GetBuildObjectCategoryBName(class UObject* WorldContextObject, enum class EPalBuildObjectTypeB TypeB, class FText* OutName);
	void GetBuildObjectCategoryAName(class UObject* WorldContextObject, enum class EPalBuildObjectTypeA TypeA, class FText* OutName);
	void GetBaseCampEventName(class UObject* WorldContextObject, enum class EPalBaseCampWorkerEventType EventType, class FText* OutName);
	void GetAllTagFromText(class UObject* WorldContextObject, class FText& TargetText, TArray<class FString>* OutTagArray);
	class UPalUserWidget* FindOwningActivatableWidget(class UObject* WorldContextObject, class UWidget* Widget);
	float ConvertReviveTimerToUIDisplayRemainReviveTime(class UObject* WorldContextObject, float ReviveTimer);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIWorkerSimpleDetailCanvas
class UPalUIWorkerSimpleDetailCanvas : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIWorkerSimpleDetailCanvas* GetDefaultObj();

	void UnbindWorkerEvent(class UPalIndividualCharacterHandle* WorkerHandle);
	void UnbindBaseCampEvent(class UPalBaseCampModel* TargetCampModel);
	void OnRequestOpenDetail(class AActor* TargetActor);
	void OnRequestCloseDetail();
	void OnEndInteractWorker(class AActor* Actor, TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject);
	void OnBeginInteractWorker(class AActor* Actor, TScriptInterface<class IPalInteractiveObjectComponentInterface> InteractiveObject);
	void OnAddedNewWorker(class UPalIndividualCharacterHandle* WorkerHandle);
	class UPalBaseCampModel* GetInsideBaseCampModel();
	void BindWorkerEvent(class UPalIndividualCharacterHandle* WorkerHandle);
	void BindBaseCampEvent(class UPalBaseCampModel* TargetCampModel);
};

// 0x0 (0x408 - 0x408)
// Class Pal.PalUIWorldHUDWidgetCanvas
class UPalUIWorldHUDWidgetCanvas : public UPalUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPalUIWorldHUDWidgetCanvas* GetDefaultObj();

	void RemoveWidget(class UPalUserWidgetWorldHUD* Widget);
	void AddWidget(class UPalUserWidgetWorldHUD* Widget);
};

// 0x8 (0x40 - 0x38)
// Class Pal.PalHUDDispatchParameter_WorldMap
class UPalHUDDispatchParameter_WorldMap : public UPalHUDDispatchParameterBase
{
public:
	bool                                         CanFastTravel;                                     // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForRespawn;                                        // 0x39(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInitSelect;                                      // 0x3A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_411F[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_WorldMap* GetDefaultObj();

};

// 0x0 (0x430 - 0x430)
// Class Pal.PalUIWorldMap
class UPalUIWorldMap : public UPalUserWidgetOverlayUI
{
public:

	static class UClass* StaticClass();
	static class UPalUIWorldMap* GetDefaultObj();

	void RegisterRespawnLocation(struct FVector& RespawnLocation);
	void Debug_SetLocation(struct FVector& Location);
	void CreateWorldMapData(enum class EPalWorldMapType WorldMapType);
};

// 0x28 (0x60 - 0x38)
// Class Pal.PalHUDDispatchParameter_WorldSetting
class UPalHUDDispatchParameter_WorldSetting : public UPalHUDDispatchParameterBase
{
public:
	bool                                         IsNewWorld;                                        // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_4124[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WorldSaveDirectoryName;                            // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WorldName;                                         // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalHUDDispatchParameter_WorldSetting* GetDefaultObj();

};

// 0x128 (0x558 - 0x430)
// Class Pal.PalUIWorldSettingBase
class UPalUIWorldSettingBase : public UPalUserWidgetOverlayUI
{
public:
	struct FPalOptionWorldSettings               OriginalSetting;                                   // 0x430(0x128)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUIWorldSettingBase* GetDefaultObj();

	void OnCompletedSaveSetting(bool IsSuccess);
	bool CompleteSetting(struct FPalOptionWorldSettings& NewSetting);
};

// 0x8 (0x540 - 0x538)
// Class Pal.PalUniqueRideWeaponBase
class APalUniqueRideWeaponBase : public APalWeaponBase
{
public:
	uint8                                        Pad_4137[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalUniqueRideWeaponBase* GetDefaultObj();

	void ShootOneBulletByDefault();
	void ShootOneBullet(TSubclassOf<class APalBullet> bulletClass, class UNiagaraSystem* MuzzleEffect, const struct FVector& MuzzleLocation, const struct FRotator& MuzzleRotate, float BulrAngle, TSubclassOf<class AActor> AmmoClass, const struct FTransform& AmmoEject);
	void OnUniqueShoot();
	void OnCancellShooting();
	void OnActionCompleted(class UPalActionComponent* ActionComp);
	void OnActionBegin(class UPalActionBase* Action);
	struct FRotator GetMuzzleRotation();
	struct FVector GetMuzzleLocation();
	class UNiagaraSystem* GetMuzzleEffect();
	struct FVector GetCommonTargetLocation();
	float GetBulrAngle();
	TSubclassOf<class APalBullet> GetBulletClass();
	struct FTransform GetAmmoEjectTransform();
	TSubclassOf<class AActor> GetAmmoClass();
	void GetAllMeshComponent(TArray<class UMeshComponent*>* OutMesh);
	bool CanUse();
};

// 0x10 (0x38 - 0x28)
// Class Pal.PalUniqueSkillModule
class UPalUniqueSkillModule : public UObject
{
public:
	class APalCharacter*                         ActionCharacter;                                   // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ActionTarget;                                      // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalUniqueSkillModule* GetDefaultObj();

	void TickModule(float DeltaTime);
	void SetActionTarget(class AActor* Target);
	void SetActionCharacter(class APalCharacter* Character);
	void OnEndModule();
	void OnBeginModule();
	class AActor* GetActionTarget();
	class APalCharacter* GetActionCharacter();
};

// 0x18 (0x50 - 0x38)
// Class Pal.PalWidgetTimerGaugeParameter
class UPalWidgetTimerGaugeParameter : public UPalHUDDispatchParameterBase
{
public:
	struct FTimerHandle                          TimerHandle;                                       // 0x38(0x8)(BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x40(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  bindActionName;                                    // 0x44(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsHide;                                            // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_413E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWidgetTimerGaugeParameter* GetDefaultObj();

};

// 0x10 (0x418 - 0x408)
// Class Pal.PalUserWidgetTimerGaugeBase
class UPalUserWidgetTimerGaugeBase : public UPalUserWidgetWorldHUD
{
public:
	struct FTimerHandle                          TargetTimerHandle;                                 // 0x408(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Time;                                              // 0x410(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4141[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalUserWidgetTimerGaugeBase* GetDefaultObj();

	void VisibilityForceHidden(enum class ESlateVisibility ChangedVisibility);
	void SetGaugeText(class FText& Text);
	void SetGaugePercent(float Percent);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalUtility
class UPalUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalUtility* GetDefaultObj();

	void UpdatePlayerCharacterParameter(class APalCharacter* Character);
	void UpdateLocalPlayerParameter(class UObject* WorldContextObject);
	void UnlockBaseCampLevelAchievement(class UObject* WorldContextObject, int32 Level);
	void UnlockAchievement(class UObject* WorldContextObject, const class FString& AchievementId, int32 Progress);
	bool TryGetHeadWorldPosition(class APalCharacter* Character, struct FVector* OutLocation);
	class FString ToPointerAddress(class UObject* Obj);
	void TeleportToPlayerByIndex(class APalPlayerController* Controller, int32 PlayerIndex);
	void TeleportInitLocation(class APalPlayerCharacter* Target);
	bool TeleportAroundLoccation(class APalCharacter* Target, struct FVector& Location, struct FQuat& Rotation);
	bool Teleport(class APalCharacter* Target, struct FVector& Location, struct FQuat& Rotation, bool bNoCheck, bool bAroundCheck);
	bool SynchronizedGroup(class UObject* WorldContextObject, class UPalIndividualCharacterHandle* FromHandle, class UPalIndividualCharacterHandle* ToHandle);
	class FString SteamLanguageNameToCultureName(class UObject* WorldContextObject, const class FString& SteamLanguageName);
	bool SphereOverlapLimitVolume(class UObject* WorldContextObject, enum class EPalLimitVolumeFlag LimitVolumeFlag, const struct FVector& Center, float Radius);
	void SpectatorOn(class UObject* WorldContextObject);
	void SpectatorOff(class UObject* WorldContextObject);
	class AController* SpawnControllerAndPossess(TSubclassOf<class AController> ControllerClass, class APawn* ControlActor);
	bool SpawnActorBroadcast(class UObject* WorldContextObject, class UClass* ActorClass, class AActor* NetworkOwner, class AActor* Owner, class FName Name, const struct FTransform& SpawnTransform, TSubclassOf<class AController> Controller, struct FGuid* SpawnGUID, FDelegateProperty_ SpawnDelegate);
	void SortActorListByLabel(TArray<class AActor*>& ActorList);
	void ShowUI(class UObject* WorldContextObject, enum class EPalWidgetBlueprintType WBPType, class UPalHUDDispatchParameterBase* Parameter);
	void SetYawApplyRate(class AActor* Actor, float Rate, class FName FlagName);
	void SetVoiceID(class AActor* TargetActor, int32 VoiceID);
	void SetVisibleComponentInDataLayer(class UObject* WorldContextObject, class UDataLayerInstance* TargetDataLayer, bool bEnable);
	void SetUnRidingCharacterCollision(class APalCharacter* Character);
	struct FTransform SetTransformQuat(const struct FTransform& TargetTransform, const struct FQuat& NewQuat);
	struct FTimerHandle SetTimerWithGaugeWidget(class UObject* Object, struct FPalTimerGaugeWidgetCreateInfo& CreateInfo);
	void SetTelemetry(class UObject* WorldContextObject, class FName& Key, const class FString& Value, class FName Namespace);
	void SetStatusPoint(class UPalIndividualCharacterHandle* Handle, class FName StatusName, int32 Point);
	void SetSpeedCollisionEnable(class AActor* Actor, bool bEnable);
	void SetRidingCharacterCollision(class APalCharacter* Character);
	void SetPassword(class UObject* WorldContextObject, const class FString& Password);
	void SetOtomoCollisionProfile(class APalCharacter* Character);
	void SetOpacityForCharacter(class AActor* Character, float OpacityIntensity);
	void SetMoveDisableFlag(class AActor* Actor, bool IsDisable, class FName FlagName);
	void SetHPByRateToHandle(class UPalIndividualCharacterHandle* Handle, float Rate);
	void SetHPByRateToCharacter(class APalCharacter* Character, float Rate);
	void SetFolderPathForBP(class AActor* TargetActor, class FName FolderName);
	void SetEnableSkyCreator(class UObject* WorldContextObject, bool bEnable);
	void SetEnableCameraFade(class AActor* Character, bool bIsEnable);
	void SetCoopFlag(class APalCharacter* Trainer, class APalCharacter* Otomo, bool bIsEnable);
	void SetCharacterRagdollForNooseTrap(class APalCharacter* Character);
	void SetCharacterRagdollForLiftup(class APalCharacter* Character);
	void SetCharacterRagdoll(class APalCharacter* Character, bool IsKeepGravity, bool KeepRootCollision);
	void SetCharacterLocationAtMainMeshFoot(class APalCharacter* Character, struct FVector& Location);
	void SetBodyPartsGenerateOverlapEvents(class APalCharacter* Character, bool IsEnable);
	void SetBodyPartsCollisionProfile(class APalCharacter* Character, class FName ProfileName);
	void SetBodyPartsCollisionEnable(class APalCharacter* Character, bool bEnable);
	void SetActorQuat(class AActor* TargetActor, const struct FQuat& NewQuat);
	void SendSystemToPlayerChat(class UObject* WorldContextObject, const class FString& Message, struct FGuid& ReceiverPlayerUId);
	void SendSystemAnnounce(class UObject* WorldContextObject, const class FString& Message);
	class FText SelectText(class FText& A, class FText& B, bool bPickA);
	float RSign(float V);
	bool RideTo(class AActor* RiderActor, class AActor* RidePal, bool bIsSkipAnimation);
	void ReturnOtomoPalToHolder(class AController* TargetController);
	void ResetBodyPartsCollisionProfileToDefault(class APalCharacter* Character);
	void RemoveAroundInfoCollectorComponent(class APalCharacter* Target);
	void RefreshRagdollSkeletalMesh(class APalCharacter* Character);
	void RefreshParameterForCharacterAndHoldOtomo(class APalCharacter* Character);
	bool ProjectWorldToScreenBehindCamera(class APlayerController* Player, struct FVector& WorldPosition, struct FVector2D* ScreenPosition, bool* bTargetBehindCamera, bool bPlayerViewportRelative);
	void ProcessDeadAction(class APalCharacter* Character);
	void ProcessDamageAndPlayEffectsByDamageInfo(class AActor* Attacker, class AActor* Defender, struct FPalDamageInfo& DamageInfo, bool bIsEnableHitEffect);
	void ProcessDamageAndPlayEffects(class AActor* Attacker, class AActor* Defender, struct FPalMakeDamageInfo& MakeDamageInfo);
	bool PointOvelapLimitVolume(class UObject* WorldContextObject, enum class EPalLimitVolumeFlag LimitVolumeFlag, const struct FVector& Location);
	void PlayWorldCameraShake(class UObject* WorldContextObject, TSubclassOf<class UCameraShakeBase> Shake, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
	void PlayMontageByMinLength(class ACharacter* Character, class UAnimMontage* Montange, float MinLength);
	void PlayMontageByFixLength(class ACharacter* Character, class UAnimMontage* Montange, float FixLength);
	bool PlayActionByWazaID(class AActor* ActionActor, class AActor* TargetActor, enum class EPalWazaID WazaID);
	bool PlayAction(class AActor* ActionActor, class AActor* TargetActor, enum class EPalActionType ActionType);
	void Play2MontageByFixLength(class ACharacter* Character, class UAnimMontage* Montange, float FixLength, class UAnimMontage* LoopMontange);
	void PalCaptureSuccess(class APalPlayerCharacter* AttackerPlayer, class APalCharacter* Monster);
	bool PalAIMoveToTargetLocation(class APalAIController* Controller, const struct FVector& Goal);
	bool PalAIMoveToTargetActor(class APalAIController* Controller, class AActor* Target);
	bool NotContainsAny(const TArray<class UObject*>& SourceArray, const TArray<class UObject*>& FindElms);
	struct FFixedPoint64 NextPointCalculate(const struct FFixedPoint64& CurrentPoint, const struct FFixedPoint64& CurrentMax, const struct FFixedPoint64& NextMax);
	struct FPalDamageInfo MakeDamageInfoByWazaType(class AActor* Attacker, class AActor* Defencer, class USceneComponent* AttackerHitComponent, class USceneComponent* DefenderHitComponent, struct FVector& HitLocation, const TArray<int32>& FoliageIndex, enum class EPalWazaID WazaType, enum class EPalBlowVelocityOwner BlowOwner, const struct FVector& NativeBlowVelocity, int32 ReferenceIndex, float DamageRatePerCollision);
	struct FPalDamageInfo MakeDamageInfo(struct FPalMakeDamageInfo& MakeDamageInfo);
	bool LotteryInt(int32 ProbabilityPercentage);
	bool LotteryFloat(float ProbabilityPercentage);
	void LoadIconToImageDelegate__DelegateSignature(class UImage* ImageWidget, class UTexture2D* Texture);
	void LoadIconToImage(class UObject* WorldContextObject, TSoftObjectPtr<class UTexture2D> TexturePath, class UImage* TargetImage, FDelegateProperty_ Callback);
	bool LineTraceToTarget_ForAIAttack(class AActor* SelfActor, class AActor* Target);
	void KillCharacter_NotDamageToEquipItem(class APalCharacter* Character);
	void JudgePalCapture_TryAllPhase(class UPalIndividualCharacterHandle* TargetHandle, class UPalIndividualCharacterHandle* ThrowCharacterHandle, int32 CaptureItemLevel, TArray<bool>* OutJudgeFlagArray, bool Robbery);
	bool JudgePalCapture(class AActor* Pal);
	bool IsXSX(class UObject* WorldContextObject);
	bool IsXB1(class UObject* WorldContextObject);
	bool IsWorldOwner(class UObject* WorldContextObject);
	bool IsWinGDK(class UObject* WorldContextObject);
	bool IsWindows(class UObject* WorldContextObject);
	bool IsWildNPC(class AActor* Actor);
	bool IsValidInstanceID(struct FPalInstanceID& ID);
	bool IsValid_ThreadSafe(class UObject* Object);
	bool IsUGCFilter();
	bool IsUGCBlocked(class UObject* WorldContextObject);
	bool IsSteamDeck(class UObject* WorldContextObject);
	bool IsSneakAttackSuccessByLocation(struct FVector& HitLocation, class AActor* Defender);
	bool IsSleepTimeForWildLife(class APalAIController* Controller, float SleepStartHours, float SleepEndHours);
	bool IsServerPlayerUID(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	bool IsServer(class UObject* WorldContextObject);
	bool IsPointOnBase(class UObject* WorldContextObject, struct FVector& Point, TArray<class AActor*>& IgnoreActors, enum class EDrawDebugTrace DrawDebugType, float DrawDebugDuration);
	bool IsPointInDoor(class UObject* WorldContextObject, struct FVector& Point, TArray<class AActor*>& IgnoreActors, enum class EDrawDebugTrace DrawDebugType, float DrawDebugDuration);
	bool IsPlayerControlActor(class AActor* CheckActor);
	bool IsPIEUsingPlayerStart();
	bool IsPalMonster(class AActor* Actor);
	bool IsPalCharacter(class AActor* Actor);
	bool IsOtomo(class AActor* Actor);
	bool IsOpenListenServer(class UObject* WorldContextObject);
	bool IsNearTwoPoint(const struct FVector& Point1, const struct FVector& Point2, float Distance, bool IgnoreHeight);
	bool IsNearTwoActorWithRootRadius(class AActor* Actor1, class AActor* Actor2, float Distance, bool IgnoreHeight);
	bool IsNearTwoActorWithRadius(class AActor* Actor1, class AActor* Actor2, float Distance, bool IgnoreHeight);
	bool IsNearTwoActor(class AActor* Actor1, class AActor* Actor2, float Distance, bool IgnoreHeight);
	bool IsMultiplayRestricted(class UObject* WorldContextObject);
	bool IsMultiplayer(class UObject* WorldContextObject);
	bool IsLocalPlayerCampPal(class AActor* Actor);
	bool IsLocalControlActorOrPalmi(class AActor* CheckActor);
	bool IsLocalControlActor(class AActor* CheckActor);
	bool IsLive(class AActor* Actor);
	bool IsInClientConnection(class UObject* WorldContextObject);
	bool IsIgnoreNetworkVersionCheck(class UObject* WorldContextObject);
	bool IsHairAttachAccessory(class UObject* WorldContextObject, class FName& EquipmentArmorName);
	bool IsGDK(class UObject* WorldContextObject);
	bool IsFriend(class AActor* ActorA, class AActor* ActorB);
	bool IsForceQuitOnDisconnect(class UObject* WorldContextObject);
	bool IsExistsInDoor(class AActor* TargetActor, enum class EDrawDebugTrace DrawDebugType, float DrawDebugDuration);
	bool IsEnemy(class AActor* ActorA, class AActor* ActorB);
	bool IsEnableBotLocationFlag(class UObject* WorldContextObject);
	bool IsElementWeak(enum class EPalElementType AttackType, enum class EPalElementType DefenceType);
	bool IsElementStrong(enum class EPalElementType AttackType, enum class EPalElementType DefenceType);
	bool IsEditorPreviewActor(class AActor* Actor);
	bool IsEditorBuild();
	bool IsDying(class AActor* Actor);
	bool IsDevelopmentBuild();
	bool IsDestructionByCompleteBuilt(class UObject* WorldContextObject);
	bool IsDedicatedServer(class UObject* WorldContextObject);
	bool IsDead(class AActor* Actor);
	bool IsClientDedicatedServer(class UObject* WorldContextObject);
	bool IsCanPlaySinglePlay();
	bool IsCanPlayInviteCode();
	bool IsCanPlayDedicatedServer(class UObject* WorldContextObject);
	bool IsCanOpenExternalWebSite();
	bool IsBuildBotBaseCamp(class UObject* WorldContextObject);
	bool IsBotMode(class UObject* WorldContextObject);
	bool IsBotEnterDungeon(class UObject* WorldContextObject);
	bool IsBaseCampPal(class AActor* Actor);
	bool IsApplicablePowerOnlyToDamageValue(class AActor* Reciever);
	bool IsApplicableDamage(class UObject* Causer, class AActor* Receiver, class UPrimitiveComponent* ReceivedComponent);
	bool IsAllLevelLoaded(class UObject* WorldContextObject);
	bool IsAliveFriendPlayers_ByUId(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	bool IsAIAttackAbleByPlayerCamera(class AActor* SelfActor, class AActor* TargetActor);
	bool InWazaMaxRange(class APalCharacter* Attacker, enum class EPalWazaID Waza, const struct FVector& TargetLocation, float TargetRadius);
	void InitializeHumanBoneInfo(class UPalAnimInstance* AnimInstance);
	bool InFanShapAndDitance(class AActor* SelfActor, class AActor* TargetActor, float Degree, float Distance);
	bool InFanShapAimTarget(class AActor* SelfActor, class AActor* TargetActor, float Degree);
	bool InFanShap_TargetLocation(class AActor* SelfActor, const struct FVector& TargetLocation, float Degree);
	bool InFanShap_PlayerCamera(class AActor* SelfActor, class APalPlayerCharacter* Player, float Degree);
	bool InFanShap(class AActor* SelfActor, class AActor* TargetActor, float Degree);
	bool InConeShapAndDitance_PreThreshold_Actor(class AActor* SelfActor, class AActor* TargetActor, float Threshold, float Distance);
	bool InConeShapAndDitance_PreThreshold(const struct FVector& SelfLocation, const struct FRotator& SelfRotator, const struct FVector& TargetLocation, float Threshold, float Distance);
	bool InConeShapAndDitance_Actor(class AActor* SelfActor, class AActor* TargetActor, float Degree, float Distance);
	bool InConeShapAndDitance(const struct FVector& SelfLocation, const struct FRotator& SelfRotator, const struct FVector& TargetLocation, float Degree, float Distance);
	void HeadBillboardEffectSetTransform(class APalCharacter* Character, class USceneComponent* Effect, const struct FVector& AddOffset);
	bool HasAliveFriendPlayers(class AActor* My);
	void GiveExpToAroundPlayerCharacter(class UObject* WorldContextObject, struct FVector& Center, float Radius, float Exp, bool bCallDelegate);
	void GiveExpToAroundCharacter(class UObject* WorldContextObject, struct FVector& Center, float Radius, float Exp, TSubclassOf<class APalCharacter> CharacterClass, bool bCallDelegate);
	class UPalWorldSecuritySystem* GetWorldSecuritySystem(class UObject* WorldContextObject);
	class UPalWorldObjectRecordWorldSubsystem* GetWorldObjectRecorder(class UObject* WorldContextObject);
	float GetWorkSpeed(class APalCharacter* Character);
	class UPalWorkProgressManager* GetWorkProgressManager(class UObject* WorldContextObject);
	void GetWeakElementType(enum class EPalElementType Type1, enum class EPalElementType Type2, TArray<enum class EPalElementType>* OutArray);
	int32 GetWeakCount_ForUI(enum class EPalElementType AttackElementType, enum class EPalElementType DefenceTypeA, enum class EPalElementType DefenceTypeB, enum class EPalAttackType AttackType, enum class EPalBodyPartsType BodyPartsType);
	int32 GetWeakCount(enum class EPalElementType AttackElementType, enum class EPalElementType DefenceTypeA, enum class EPalElementType DefenceTypeB);
	class UPalWazaDatabase* GetWazaDatabase(class UObject* WorldContextObject);
	class UPalVisualEffectDataBase* GetVisualEffectDatabase(class UObject* WorldContextObject);
	class UPalTutorialManager* GetTutorialManager(class UObject* WorldContextObject);
	void GetTribeIDNameFromParameter(class UObject* WorldContextObject, class UPalIndividualCharacterParameter* IndividualParameter, class FName* OutTribeIDName);
	void GetTribeIDNameFromCharacterID(class UObject* WorldContextObject, class FName& CharacterID, class FName* OutTribeIDName);
	enum class EPalTribeID GetTribeIDFromCharacterID(class UObject* WorldContextObject, class FName& CharacterID);
	struct FQuat GetTransformQuat(const struct FTransform& SourceTransform);
	class APalPlayerController* GetTrainerPlayerController_ForServer(class AActor* Monster);
	class APalPlayerCharacter* GetTrainerPlayer(class AActor* Monster);
	class UPalTimeManager* GetTimeManager(class UObject* WorldContextObject);
	class UPalTechnologyData* GetTechnologyDataByPlayerUID(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	int32 GetStatusPoint(class UPalIndividualCharacterHandle* Handle, class FName StatusName);
	void GetStatUnitResult(class UObject* WorldContextObject, float* FrameTime, float* GameThreadTime, float* RenderThreadTime, float* GPUTime);
	class USignificanceManager* GetSignificanceManager(class UObject* WorldContextObject);
	class UPalShopManager* GetShopManager(class UObject* WorldContextObject);
	class FString GetServerWorldDisplayName(class UObject* WorldContextObject);
	class UPalSaveGameManager* GetSaveGameManager(class UObject* WorldContextObject);
	float GetSafeZero(float Value);
	float GetRTTJitter(class UObject* WorldContextObject);
	struct FTransform GetRelativeTransformFromRoot(class USceneComponent* SceneComponent);
	class UPalPlayerRecordData* GetRecordDataByPlayerUID(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	class UPalRCONSubsystem* GetRCONSubsystem(class UObject* WorldContextObject);
	float GetRangeToGround(class AActor* Actor);
	void GetRandomPointList(int32 PointNum, int32 MaxLoopCount, float MinXPos, float MaxXPos, float MinYPos, float MaxYPos, float SizeX, float SizeY, const struct FRandomStream& RandomStream, TArray<struct FVector2D>* OutPointArray);
	struct FGuid GetPlayerUIDByActor(class AActor* PlayerActor);
	class APalPlayerState* GetPlayerStateByPlayer(class APalPlayerCharacter* Player);
	class APalPlayerState* GetPlayerState(class AActor* Player);
	class UPalPlayerManager* GetPlayerManager(class UObject* WorldContextObject);
	TArray<class FString> GetPlayerListDisplayMessages(class UObject* WorldContextObject);
	class FString GetPlayerListDisplayMessage(class UObject* WorldContextObject);
	struct FGuid GetPlayerGUIDByPlayerUIDOrSteamId(class UObject* WorldContextObject, const class FString& PlayerUIdORSteamId);
	int32 GetPlayerEquipmentShield(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	void GetPlayerEquipmentPassiveList(class UObject* WorldContextObject, const struct FGuid& PlayerUId, TArray<class FName>* OutPassiveList);
	int32 GetPlayerEquipmentHP(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	int32 GetPlayerEquipmentDefense(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	class UPalPlayerDataStorage* GetPlayerDataStorage(class UObject* WorldContextObject);
	class APalPlayerController* GetPlayerControllerByPlayerId(class UObject* WorldContextObject, int32 PlayerId);
	class APawn* GetPlayerControlledPawn(class UObject* WorldContextObject);
	class APalCharacter* GetPlayerControlledCharacter(class UObject* WorldContextObject);
	class APalPlayerCharacter* GetPlayerCharacterByPlayerIndex(class UObject* WorldContextObject, int32 PlayerIndex);
	class ACharacter* GetPlayerCharacterByPlayerId(class UObject* WorldContextObject, int32 PlayerId);
	class APalPlayerCharacter* GetPlayerCharacter(class UObject* WorldContextObject);
	enum class EPalSupportedPlatformType GetPlatformType(class UObject* WorldContextObject);
	class FName GetPhysicsRootBoneName(class AActor* Character);
	class FName GetPhysicsBoneName(class AActor* Character, enum class EPalPhysicsBoneType boneType);
	int32 GetPhysicsBoneIndex(class AActor* Character, enum class EPalPhysicsBoneType boneType);
	enum class EPhysicalSurface GetPhysicalSurfaceTypeByActor(class AActor* SelfActor, class FName SocketName, struct FVector& OffsetSt, struct FVector& OffsetEd, bool* bHit);
	enum class EPhysicalSurface GetPhysicalSurfaceType(class UObject* WorldContextObject, struct FVector& RayStart, struct FVector& RayEnd, bool* bHit);
	class FString GetPassword(class UObject* WorldContextObject);
	class UPalPassiveSkillManager* GetPassiveSkillManager(class UObject* WorldContextObject);
	class UPalPlayerDataPalStorage* GetPalStorageDataByPlayerUID(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	class UPalObjectCollector* GetPalObjectCollector(class UObject* WorldContextObject);
	void GetPalMonsters(class UObject* WorldContextObject, TArray<class APalCharacter*>* OutCharacters);
	class APalPlayerCharacter* GetPalmi(class UObject* WorldContextObject);
	void GetPalIconInfoByCharacterID(class UObject* WorldContextObject, struct FPalDataTableRowName_PalMonsterData& CharacterID, TSoftObjectPtr<class UTexture2D>* OutIcon, bool* OutIsRare, bool* OutIsBoss);
	class UPalGameWorldSettings* GetPalGameWorldSettings();
	class APalGameStateInGame* GetPalGameStateInGame(class UObject* WorldContextObject);
	class APalGameState* GetPalGameState(class UObject* WorldContextObject);
	class APalGameMode* GetPalGameMode(class UObject* WorldContextObject);
	class UPalGameInstance* GetPalGameInstance(class UObject* WorldContextObject);
	class UPalDebugSetting* GetPalDebugSetting();
	class UPalCheatManager* GetPalCheatManager(class UObject* WorldContextObject);
	void GetPalCharacters(class UObject* WorldContextObject, TArray<class APalCharacter*>* OutCharacters);
	TArray<int32> GetOverlapFoliageIndexByComponent(class UPrimitiveComponent* AttackComponent, class UPrimitiveComponent* FolageComponent);
	float GetOutPacketLoss(class UObject* WorldContextObject);
	class UPalOtomoHolderComponentBase* GetOtomoHolderComponent(class UObject* WorldContextObject);
	class UPalOtomoHolderComponentBase* GetOtomoHolderByOtomoPal(class AActor* OtomoPal);
	struct FPalOptionWorldSettings GetOptionWorldSettings(class UObject* WorldContextObject);
	class UPalOptionSubsystem* GetOptionSubsystem(class UObject* WorldContextObject);
	struct FPalOptionGraphicsSettings GetOptionGraphicsSettings(class UObject* WorldContextObject);
	bool GetOffFromPal(class AActor* RiderActor, bool bIsSkipAnimation, bool bNoAnimCancel);
	int32 GetNumPlayers(class UObject* WorldContextObject);
	class UPalNPCManager* GetNPCManager(class UObject* WorldContextObject);
	class APalNetworkTransmitter* GetNetworkTransmitterByPlayerId(class UObject* WorldContextObject, int32 PlayerId);
	class APalNetworkTransmitter* GetNetworkTransmitterByPlayerCharacter(class APalPlayerCharacter* Player);
	class APalNetworkTransmitter* GetNetworkTransmitter(class UObject* WorldContextObject);
	float GetNearstPlayerDistance2D(class UObject* WorldContextObject, const struct FVector& Location);
	class APalCharacter* GetNearestEnemyByLocation_FrontPlayerCamera(const struct FVector& Location, class APalCharacter* MyCharacter, class APalPlayerCharacter* Player, float InDegree, float InDistance, float InHeight);
	class APalCharacter* GetNearestEnemyByLocation(const struct FVector& Location, class APalCharacter* MyCharacter, float* OutMinRange);
	class APalMapObject* GetNearestEnemyBuildObject(class AActor* Character);
	float GetMontageSectionLengthDefault(class UAnimMontage* Montange);
	float GetMontageSectionLength(class UAnimMontage* Montange, class FName SectionName);
	void GetMontageNotifyStates(class UAnimMontage* Montange, TArray<class UAnimNotifyState*>* OutStates, class FName SectionName);
	class UPalMoneyData* GetMoneyDataByPlayerUID(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	class UPalMasterDataTables* GetMasterDataTables(class UObject* WorldContextObject);
	class UPalMapObjectManager* GetMapObjectManager(class UObject* WorldContextObject);
	class USkeletalMeshComponent* GetMainMeshByActor(class AActor* Actor);
	class UPalLogManager* GetLogManager(class UObject* WorldContextObject);
	class UPalLocationManager* GetLocationManager(class UObject* WorldContextObject);
	class UPalWorldMapUIData* GetLocalWorldMapData(class UObject* WorldContextObject);
	class UPalTechnologyData* GetLocalTechnologyData(class UObject* WorldContextObject);
	class UPalPlayerRecordData* GetLocalRecordData(class UObject* WorldContextObject);
	struct FGuid GetLocalPlayerUID(class UObject* WorldContextObject);
	class APalPlayerState* GetLocalPlayerState(class UObject* WorldContextObject);
	int32 GetLocalPlayerID(class UObject* WorldContextObject);
	class APlayerController* GetLocalPlayerController(class UObject* WorldContextObject);
	class UPalPlayerDataPalStorage* GetLocalPalStorageData(class UObject* WorldContextObject);
	class UPalPlayerInput* GetLocalPalPlayerInput(class UObject* WorldContextObject);
	class UPalMoneyData* GetLocalMoneyData(class UObject* WorldContextObject);
	class UPalPlayerInventoryData* GetLocalInventoryData(class UObject* WorldContextObject);
	class UPalItemIDManager* GetItemIDManager(class UObject* WorldContextObject);
	class UPalItemContainerManager* GetItemContainerManager(class UObject* WorldContextObject);
	class UPalPlayerInventoryData* GetInventoryDataByPlayerUID(class UObject* WorldContextObject, const struct FGuid& PlayerUId);
	class UPalInvaderManager* GetInvaderManager(class UObject* WorldContextObject);
	float GetInPacketLoss(class UObject* WorldContextObject);
	bool GetInitializedPlayerSaveParemter(class UObject* WorldContextObject, int32 Level, struct FPalIndividualCharacterSaveParameter* OutParameter);
	bool GetInitializedCharacterSaveParemter_DebugDefaultParamSetup(class UObject* WorldContextObject, class FName CharacterID, class FName UniqueNPCID, int32 Level, struct FGuid& OwnerPlayerUId, struct FPalIndividualCharacterSaveParameter* OutParameter, bool DisableRandomPassiveSkilll, const TArray<enum class EPalWazaID>& WazaList, const TArray<class FName>& PassiveSkillList, int32 Rank, bool RarePalAble);
	bool GetInitializedCharacterSaveParemter(class UObject* WorldContextObject, class FName CharacterID, class FName UniqueNPCID, int32 Level, struct FGuid& OwnerPlayerUId, struct FPalIndividualCharacterSaveParameter* OutParameter, bool DisableRandomPassiveSkill, bool RarePalAble);
	struct FPalInstanceID GetIndividualIDByActor(class AActor* Actor);
	struct FPalInstanceID GetIndividualID(class UPalIndividualCharacterHandle* Handle);
	class UPalIndividualCharacterParameter* GetIndividualCharacterParameterByActor(class AActor* Actor);
	class UPalIndividualCharacterHandle* GetIndividualCharacterHandleByActor(class AActor* Actor);
	class UPalIncidentSystem* GetIncidentSystem(class UObject* WorldContextObject);
	void GetHumanNPCs(class UObject* WorldContextObject, TArray<class APalCharacter*>* OutCharacters);
	class UPalHUDService* GetHUDService(class UObject* WorldContextObject);
	class FName GetHairAttachAccessorySocketName(class UObject* WorldContextObject, class FName& HairEquipmentName, class FName& BodyTypeName);
	class UPalGroupManager* GetGroupManager(class UObject* WorldContextObject);
	class UPalGameSetting* GetGameSetting(class UObject* WorldContextObject);
	class UPalFunnelCharacterManager* GetFunnelCharacterManager(class UObject* WorldContextObject);
	struct FVector GetFloorLocationByActor(class AActor* TargetActor);
	struct FVector GetFloorHitLocationByActor(class AActor* TargetActor);
	class FString GetFirstLine(const class FString& SourceString);
	class UPalExpDatabase* GetExpDatabase(class UObject* WorldContextObject);
	struct FVector GetExclamationMarkLocation(class APalCharacter* TargetCharacter);
	class UPalEventNotifySystem* GetEventNotifySystem(class UObject* WorldContextObject);
	enum class ECollisionChannel GetEngineCollisionChannelByPalTraceType(enum class EPalTraceTypeQuery Type);
	enum class ECollisionChannel GetEngineCollisionChannelByPalObjectType(enum class EPalObjectTypeQuery Type);
	enum class ECollisionChannel GetEngineCollisionChannel(enum class EPalObjectTypeQuery Channnel);
	TArray<class APalCharacter*> GetEnemiesByLocation(class UObject* WorldContextObject, const struct FVector& Location, class APalCharacter* MyCharacter, float MinDistance, float MaxDistance);
	float GetElementMultiplay(class UObject* WorldContextObject, enum class EPalElementType AttackElementType, enum class EPalElementType DefenceTypeA, enum class EPalElementType DefenceTypeB);
	enum class EHumanBone GetEHumanBoneFromBoneName(class FName BoneName);
	class FString GetDisplayVersion(class UObject* WorldContextObject);
	struct FVector GetDiffVelocity(class AActor* A, class AActor* B);
	class UObject* GetDefaultObjectByBlueprint(class UObject* bp);
	class UObject* GetDefaultObject(TSubclassOf<class UObject> ObjectClass);
	int32 GetDebugEnemySpawnCountForBot(class UObject* WorldContextObject);
	int32 GetDebugBotBaseCampWorkerCount(class UObject* WorldContextObject);
	class FName GetDebugBotBaseCampMode(class UObject* WorldContextObject);
	class UPalDeathPenaltyManager* GetDeathPenaltyManager(class UObject* WorldContextObject);
	class UPalDeadBodyManager* GetDeadBodyManager(class UObject* WorldContextObject);
	class UPalDatabaseCharacterParameter* GetDatabaseCharacterParameter(class UObject* WorldContextObject);
	class UPalDamagePopUpManager* GetDamagePopUpManager(class UObject* WorldContextObject);
	enum class EPalWorkSuitability GetCurrentWorkSuitability(class APalCharacter* Character);
	class UPalCoopSkillSearchSystem* GetCoopSkillSearchSystem(class UObject* WorldContextObject);
	class AController* GetController(class UObject* WorldContextObject, class AActor* Actor);
	bool GetClipboard(class FString* String);
	class UClass* GetClassFromBlueprintAsset(struct FAssetData& Asset);
	float GetCharacterRadius(class AActor* Actor);
	class UPalCharacterParameterStorageSubsystem* GetCharacterParameterStorageSubsystem(class UObject* WorldContextObject);
	class UPalCharacterManager* GetCharacterManager(class UObject* WorldContextObject);
	bool GetCharacterMakeInfoFromLocalPlayer(class UObject* WorldContextObject, struct FPalPlayerDataCharacterMakeInfo* OutMakeInfo);
	class UPalCharacterImportanceManager* GetCharacterImportanceManager(class UObject* WorldContextObject);
	class FName GetCharacterIDReplacedName(class FName OriginalID);
	class FName GetCharacterIDFromTribeID(enum class EPalTribeID TribeID);
	class FName GetCharacterIDFromCharacter(class APalCharacter* Character);
	class UPalCharacterContainerManager* GetCharacterContainerManager(class UObject* WorldContextObject);
	void GetCharacterApartFromPlayer(class UObject* WorldContextObject, TArray<class APalCharacter*>* OutCharacters);
	void GetCalculatedCaptureRate(class UObject* WorldContextObject, float baseRate, TArray<float>* OutCalculatedRateArray);
	class UProjectileMovementComponent* GetBulletProjectileComponent(TSubclassOf<class APalBullet>& bulletClass);
	class UPalBulletCreator* GetBulletCreator(class UObject* WorldContextObject);
	class UPalBossBattleManager* GetBossBattleManager(class UObject* WorldContextObject);
	class FName GetBoneNameFromEHumanBone(enum class EHumanBone HumanBone);
	enum class EPalBodyPartsType GetBodyPartsType(class UActorComponent* Component);
	struct FTransform GetBodyLocation(class AActor* Character, enum class EPalBodyLocationType bodyLocationType);
	class UPalBattleManager* GetBattleManager(class UObject* WorldContextObject);
	class UPalBaseCampManager* GetBaseCampManager(class UObject* WorldContextObject);
	class UPalAudioSettingSystem* GetAudioSettingSystem(class UObject* WorldContextObject);
	struct FVector GetAttackTargetLocation(class AActor* Attacker, class AActor* TargetActor);
	bool GetAttachInformationByBodyLocation(class AActor* Character, enum class EPalBodyLocationType bodyLocationType, class USceneComponent** AttachComponent, class FName* AttachBoneName, struct FTransform* AttachRelativeTransform);
	class UPalAssetStreamableManager* GetAssetStreamableManager(class UObject* WorldContextObject);
	bool GetArrivableLocation(class UObject* WorldContextObject, struct FVector& StartLocation, struct FVector& TargetLocation, float OffsetZUp, float OffsetZUnder, enum class EPalTraceTypeQuery TraceTypeQuery, float Range, struct FVector* OutLocation, float* OutDistance, enum class EDrawDebugTrace DrawDebugType);
	void GetAllPlayerStates(class UObject* WorldContextObject, TArray<class APalPlayerState*>* OutPlayerStates);
	void GetAllPlayerCharacters(class UObject* WorldContextObject, TArray<class APalCharacter*>* OutPlayers);
	void GetAllControlledCharacters(class UObject* WorldContextObject, TArray<class APalCharacter*>* OutCharacters);
	class FName GetAkComponentAttachName(class AActor* Character);
	class FString GetAdminPasswordForCmdline(class UObject* WorldContextObject);
	struct FQuat GetActorQuat(class AActor* SourceActor);
	void GetActorByGrid(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorClass, const struct FVector2D& MinPoint, const struct FVector2D& MaxPoint, int32 GridXMax, int32 GridYMax, int32 GridXNum, int32 GridYNum, TArray<class AActor*>* OutActors);
	TArray<struct FPalKeyAction> GetActionsByKey(class UObject* WorldContextObject, const struct FKey& Key);
	void GeneralTurnToActor_WithMovementRotationSpeed(class AActor* TurnActor, class AActor* GoalDirectionActor, float DeltaTime);
	void GeneralTurnToActor(class AActor* TurnActor, class AActor* TargetActor, float LerpSpeed, float DeltaTime);
	void GeneralTurnLinearToActor(class AActor* TurnActor, class AActor* TargetActor, float LerpSpeed, float DeltaTime);
	void GeneralTurnLinear(class AActor* TurnActor, const struct FVector& GoalDirection, float AngleDegreeSpeed, float DeltaTime);
	void GeneralTurn_WithMovementRotationSpeed(class AActor* TurnActor, const struct FVector& GoalDirection, float DeltaTime);
	void GeneralTurn(class AActor* TurnActor, const struct FVector& GoalDirection, float LerpSpeed, float DeltaTime);
	class APalCharacter* FindRiderByRidingActor(class AActor* RidingActor);
	class APalCharacter* FindOwnerPalCharacter(class UObject* StartObject);
	class AActor* FindOwnerActor(class UObject* StartObject);
	class AActor* FindHomingTarget_ForPlayer(class APalPlayerCharacter* Player, float MinRange, float MaxRange, float InFrontDegree);
	class FText EnumToLocalizedText(class UObject* WorldContextObject, const class FString& EnumStr, enum class EPalLocalizeTextCategory TextCategory, const class FString& TextIdPrefix);
	void EmitSoundForAIListener(class FName SoundFName, class AActor* EmitterCharacter, const struct FVector& EmitLocation, float VolumeRate);
	void Editor_AddCharacterToImportanceManager(class APalCharacter* Character);
	void DropItem_FromOtomoCutMeat(class AActor* Otomo, class AActor* Trainer);
	void DropItem_FromEnemyDeath(class AActor* EnemyActor, class AActor* LastAttacker);
	void DropCharactersCircularly_ServerInternal(class UObject* WorldContextObject, TArray<class UPalIndividualCharacterHandle*>& IndividualHandles, struct FVector& Location, const struct FPalDropCharacterExtraParameter& ExtraParameter);
	void DropCharacter_ServerInternal(class UObject* WorldContextObject, struct FPalInstanceID& IndividualId, const struct FVector& DropLocation, struct FGuid& RequestPlayerUId);
	void DialogWithParameter(class UObject* WorldContextObject, class UPalDialogParameterDialog* Parameter);
	void Dialog(class UObject* WorldContextObject, class FText Message, enum class EPalDialogType DialogType, FDelegateProperty_ Callback, bool bNegativeDefault);
	void DestroyActorIncludingAttachedActors(class AActor* Actor);
	struct FVector CutVectorByLength(const struct FVector& Vector, float Length);
	struct FVector CutVectorByAngle(const struct FVector& Target, const struct FVector& BaseAxis, float MaxAngleDegree);
	void CreateUNKO(class APalCharacter* Character, int32 Count);
	enum class ETraceTypeQuery ConvertToTraceTypeQuery(enum class EPalTraceTypeQuery Type);
	enum class EPhysicalSurface ConvertToPhysicalSurface(enum class EPalPhysicalSurface Type);
	enum class EObjectTypeQuery ConvertToObjectTypeQuery(enum class EPalObjectTypeQuery Type);
	class FString Convert_PalInstanceIDToString(const struct FPalInstanceID& ID);
	bool ContainsOnlyIn(const TArray<class UObject*>& SourceArray, const TArray<class UObject*>& TargetElms, class UObject* Target);
	bool ContainsAny(const TArray<class UObject*>& SourceArray, const TArray<class UObject*>& FindElms);
	bool ClipboardCopy(const class FString& String);
	void ClearCharacterRagdoll(class APalCharacter* Character);
	bool CanUseTargetMedicine(class UObject* WorldContextObject, class UPalIndividualCharacterParameter* IndividualParameter, class UPalStaticItemDataBase* Item);
	bool CanSpawnDashEffect(class AActor* DashActor);
	bool CanNooseTrap(class AActor* Actor);
	bool CanAdjustActorToFloor(class AActor* TargetActor, float UpOffset, struct FVector* OutLocation);
	void CalcSceneComponentBounds(const TArray<class USceneComponent*>& SceneComps, struct FBox* OutBounds);
	struct FRotator CalcRotationGeneralTurnLinear(struct FVector& InForwardDirection, struct FVector& InRightDirection, float CurrentYaw, struct FVector& InGoalDirection, float AngleDegreeSpeed, float DeltaTime, float YawRate);
	int32 CalcRemainBattleTime(const struct FDateTime& TimeLimit);
	int32 CalcNPCWeaponDamage(class APalWeaponBase* Weapon);
	int32 CalcDamageCharacter(struct FPalDamageInfo& DamageInfo, class AActor* Defender, struct FPalCalcCharacterDamageInfo& CharacterDamageInfo);
	int32 CalcDamage(struct FPalDamageInfo& DamageInfo, class AActor* Defender);
	float CalcCaptureRateByStatus(class AActor* TargetPal);
	struct FVector CalcBlowVelocity(enum class EPalBlowVelocityOwner VelocityType, class AActor* Attacker, class USceneComponent* HitComponent, const struct FVector& HitLocation, class AActor* Defender, const struct FVector& NativeVelocity);
	bool BoxOvelapLimitVolume(class UObject* WorldContextObject, enum class EPalLimitVolumeFlag LimitVolumeFlag, const struct FVector& BoxPos, const struct FVector& BoxExtent, struct FQuat& Rot);
	void ApplyGuildColorForCharacter(const struct FLinearColor& Color, class APalCharacter* Character);
	float AngleBetweenVector(const struct FVector& A, const struct FVector& B, bool IsDegree);
	float Angle180from360Degree(float Degree);
	void AlertWithCallback(class UObject* WorldContextObject, class FText Message, FDelegateProperty_ Callback);
	void Alert(class UObject* WorldContextObject, class FText Message);
	class AActor* AdjustActorToFloor(class AActor* TargetActor, float UpOffset);
	void AddForceWithMassScale(class APalCharacter* TargetCharacter, const struct FVector& Force, class FName BoneName, bool IsImplus);
	void AddDownForceAllRigidBody(class APalCharacter* TargetCharacter, float Rate);
};

// 0x100 (0x1A0 - 0xA0)
// Class Pal.PalVenderDataComponent
class UPalVenderDataComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnRegisteredItemShopDelegate;                      // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRegisteredPalShopDelegate;                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 MyShopID;                                          // 0xC0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ItemShopRestockMinute;                             // 0xD0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalShopLotteryType               ItemShopLotteryType;                               // 0xD4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalDataTableRowName_ItemShopLotteryData ItemShopSimpleLotteryTableName;                    // 0xD8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EPalShopLotteryBiomeType, struct FPalDataTableRowName_ItemShopLotteryData> ItemShopBiomeLotteryTableMap;                      // 0xE0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        PalShopRestockMinute;                              // 0x130(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalShopLotteryType               PalShopLotteryType;                                // 0x134(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalDataTableRowName_PalShopCreateData PalShopSimpleLotteryTableName;                     // 0x138(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EPalShopLotteryBiomeType, struct FPalDataTableRowName_PalShopCreateData> PalShopBiomeLotteryTableMap;                       // 0x140(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UPalShopBase*                          MyItemShop;                                        // 0x190(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalShopBase*                          MyPalShop;                                         // 0x198(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalVenderDataComponent* GetDefaultObj();

	bool TryGetPalShop(class UPalShopBase** OutShop);
	bool TryGetItemShop(class UPalShopBase** OutShop);
	void SetupShopData();
	void RegisteredPalShopDelegate__DelegateSignature();
	void RegisteredItemShopDelegate__DelegateSignature();
	void OnRep_MyPalShop();
	void OnRep_MyItemShop();
	bool IsValidPalShop();
	bool IsValidItemShop();
};

// 0x40 (0x68 - 0x28)
// Class Pal.PalVisualEffectBase
class UPalVisualEffectBase : public UObject
{
public:
	bool                                         bIsEndVisualEffect;                                // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanDeleteInstance;                                // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_44D5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCompleteDelegate;                                // 0x30(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<enum class EPalVisualEffectID>        ConflictIDList;                                    // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EPalVisualEffectID                VisualEffectID;                                    // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_44D6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalVisualEffectDynamicParameter      DynamicParameter;                                  // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPalVisualEffectBase* GetDefaultObj();

	void TickVisualEffect(float DeltaTime);
	void TerminatingTickVisualEffect(float DeltaTime);
	void OnEndVisualEffect();
	void OnDeleteInstance();
	void OnComplete__DelegateSignature(class UPalVisualEffectBase* VisualEffect);
	void OnBreakVisualEffect(bool bByConflict);
	void OnBeginVisualEffect();
	bool IsEndVisualEffect();
	class AActor* GetOwner();
	TArray<class UMaterialInstanceDynamic*> GetMainMeshMaterials();
	class USkeletalMeshComponent* GetMainMesh();
	float GetFloatParameter(class FName Name, float DefaultValue);
	TArray<enum class EPalVisualEffectID> GetConflictIDList();
	class APalCharacter* GetCharacter();
	void GetAllMesh(TArray<class USceneComponent*>* OutComponent);
	bool CanDeleteInstance();
};

// 0xA0 (0x140 - 0xA0)
// Class Pal.PalVisualEffectComponent
class UPalVisualEffectComponent : public UActorComponent
{
public:
	TMap<enum class EPalVisualEffectID, TSoftClassPtr<class UPalVisualEffectBase>> VisualEffectClass_OverrideMap;                     // 0xA0(0x50)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnAddVisualEffectDelegate;                         // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRemoveVisualEffectDelegate;                      // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCompleteVisualEffectDelegate;                    // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UPalVisualEffectBase*>          ExecutionVisualEffects;                            // 0x120(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UPalVisualEffectBase*>          TerminatingVisualEffects;                          // 0x130(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalVisualEffectComponent* GetDefaultObj();

	void RemoveVisualEffectForActor_Local(class AActor* Actor, enum class EPalVisualEffectID VisualEffectID);
	void RemoveVisualEffectForActor(class AActor* Actor, enum class EPalVisualEffectID VisualEffectID);
	void RemoveVisualEffectByConflict_ToServer(enum class EPalVisualEffectID VisualEffectID, int32 IssuerID);
	void RemoveVisualEffectByConflict_ToALL(enum class EPalVisualEffectID VisualEffectID, int32 IssuerID);
	void RemoveVisualEffect_ToServer(enum class EPalVisualEffectID VisualEffectID, int32 IssuerID);
	void RemoveVisualEffect_ToALL(enum class EPalVisualEffectID VisualEffectID, int32 IssuerID);
	void RemoveVisualEffect_Local(enum class EPalVisualEffectID VisualEffectID);
	void RemoveVisualEffect(enum class EPalVisualEffectID VisualEffectID);
	void RemoveConflictVisualEffect(enum class EPalVisualEffectID VisualEffectID);
	void OnRemoveVisualEffect__DelegateSignature(class UPalVisualEffectComponent* VisualEffectComponent, enum class EPalVisualEffectID VisualEffectID);
	void OnCompleteVisualEffect__DelegateSignature(class UPalVisualEffectComponent* VisualEffectComponent, enum class EPalVisualEffectID VisualEffectID, class UPalVisualEffectBase* VisualEffect);
	void OnAddVisualEffect__DelegateSignature(class UPalVisualEffectComponent* VisualEffectComponent, enum class EPalVisualEffectID VisualEffectID, class UPalVisualEffectBase* VisualEffect);
	void BeginPlay();
	class UPalVisualEffectBase* AddVisualEffectForActor_Local(class AActor* Actor, enum class EPalVisualEffectID VisualEffectID, const struct FPalVisualEffectDynamicParameter& Parameter);
	class UPalVisualEffectBase* AddVisualEffectForActor(class AActor* Actor, enum class EPalVisualEffectID VisualEffectID, const struct FPalVisualEffectDynamicParameter& Parameter);
	void AddVisualEffect_ToServer(enum class EPalVisualEffectID VisualEffectID, struct FPalVisualEffectDynamicParameter& Parameter, int32 IssuerID);
	void AddVisualEffect_ToALL(enum class EPalVisualEffectID VisualEffectID, struct FPalVisualEffectDynamicParameter& Parameter, int32 IssuerID);
	class UPalVisualEffectBase* AddVisualEffect_Local(enum class EPalVisualEffectID VisualEffectID, struct FPalVisualEffectDynamicParameter& Parameter);
	class UPalVisualEffectBase* AddVisualEffect(enum class EPalVisualEffectID VisualEffectID, struct FPalVisualEffectDynamicParameter& Parameter);
};

// 0xB0 (0xD8 - 0x28)
// Class Pal.PalVisualEffectDataBase
class UPalVisualEffectDataBase : public UObject
{
public:
	TMap<enum class EPalVisualEffectID, TSoftClassPtr<class UPalVisualEffectBase>> VisualEffectClassDataReference;                    // 0x28(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          MosaicMaterialParameterCollection;                 // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPalVisualEffectID, TSubclassOf<class UPalVisualEffectBase>> VisualEffectClassDataAsset;                        // 0x80(0x50)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44E8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalVisualEffectDataBase* GetDefaultObj();

	class FName GetMosaicKeyName();
};

// 0x68 (0x90 - 0x28)
// Class Pal.PalWazaDatabase
class UPalWazaDatabase : public UObject
{
public:
	class UDataTable*                            WazaDataTable;                                     // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPalAdditionalEffectType, enum class EPalStatusID> AdditionalEffectToStatusID;                        // 0x30(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            WazaMasterLevel_DataTable;                         // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            WazaMasterTamago_DataTable;                        // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalWazaDatabase* GetDefaultObj();

	bool IsExistMasterrableWaza_BetweenLevel(class FName CharacterID, int32 StartLevel, int32 EndLevel);
	void GetMasterrableWaza_BetweenLevel(class FName CharacterID, int32 StartLevel, int32 EndLevel, TMap<enum class EPalWazaID, int32>* OutMap);
	bool FindWazaForBP(enum class EPalWazaID Type, struct FPalWazaDatabaseRaw* OutData);
};

// 0x18 (0x170 - 0x158)
// Class Pal.PalWeaponFilter
class UPalWeaponFilter : public UPalHitFilter
{
public:
	float                                        BlowSpeed;                                         // 0x158(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlowUpRate;                                        // 0x15C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRate;                                        // 0x160(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBlow;                                            // 0x164(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_44EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Attacker;                                          // 0x168(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWeaponFilter* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Pal.PalWidgetAnimationArray
class UPalWidgetAnimationArray : public UObject
{
public:
	class UUserWidget*                           TargetWidget;                                      // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class UWidgetAnimation*>   AnimationMap;                                      // 0x30(0x50)(NativeAccessSpecifierPrivate)
	float                                        MultiplyTimeScale;                                 // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44ED[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWidgetAnimationArray* GetDefaultObj();

	void StopAnimation(class FName& AnimationName);
	void StopAllAnimation();
	void SetTimeScale(float TimeScale);
	void PlayOneShotReverse(class FName& AnimationName);
	void PlayOneShotPingPong(class FName& AnimationName);
	void PlayOneshot(class FName& AnimationName);
	void PlayLoopReverse(class FName& AnimationName);
	void PlayLoopPingPong(class FName& AnimationName);
	void PlayLoop(class FName& AnimationName);
	void PauseAnimation(class FName& AnimationName);
	void Initialize(class UUserWidget* InTargetWidget);
	void GetAnimationNameArray(TArray<class FName>* OutArray);
};

// 0x30 (0x58 - 0x28)
// Class Pal.PalWildDrinkWaterSpot
class UPalWildDrinkWaterSpot : public UObject
{
public:
	bool                                         IsReserved;                                        // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44EF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpotActorLocation;                                 // 0x30(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       PalGoalLocations;                                  // 0x48(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWildDrinkWaterSpot* GetDefaultObj();

	bool SetAssignPointToMember(const TArray<class AActor*>& MemberList);
	struct FVector GetActorLocation();
};

// 0x50 (0x78 - 0x28)
// Class Pal.PalWildPalDrinkWaterSpotProvider
class UPalWildPalDrinkWaterSpotProvider : public UObject
{
public:
	TMap<struct FGuid, class UPalWildDrinkWaterSpot*> DrinkWaterSpotList;                                // 0x28(0x50)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWildPalDrinkWaterSpotProvider* GetDefaultObj();

	bool RequestReservation(class AActor* LeaderPal, const struct FVector& WildPalSpawnerCenter, int32 MemberNum, struct FGuid* OutSpotID);
	class UPalWildDrinkWaterSpot* FindSpot(const struct FGuid& SpotID);
	void CancelReservation(const struct FGuid& SpotID);
	void AddDrinkWaterSpot(const struct FVector& ActorLocation, const TArray<struct FVector>& GoalLocations);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWildSpawnerDataTable
class UPalWildSpawnerDataTable : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalWildSpawnerDataTable* GetDefaultObj();

	TArray<struct FPalSpawnerGroupInfo> CreateGroupList(const TArray<struct FPalWildSpawnerDatabaseRow>& DataList);
};

// 0x8D0 (0xB60 - 0x290)
// Class Pal.PalWindController
class APalWindController : public AInfo
{
public:
	struct FFloatInterval                        WindDirectionChangeInterval;                       // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WindDirectionResponse;                             // 0x298(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                        WindSpeedInterval;                                 // 0x29C(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                        WindSpeedChangeInterval;                           // 0x2A4(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44F1[0x894];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastChangedDirectionTime;                          // 0xB40(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastChangedSpeedTime;                              // 0xB44(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44F2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalWindController* GetDefaultObj();

	void UpdateNiagaraParameterCollection(struct FPalWindInfo& WindInfo);
	void OnActorSpawned(class AActor* InActor);
};

// 0x68 (0x90 - 0x28)
// Class Pal.PalWorkAssign
class UPalWorkAssign : public UObject
{
public:
	struct FPalWorkAssignHandleId                HandleId;                                          // 0x28(0x18)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalInstanceID                        AssignedIndividualId;                              // 0x40(0x30)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalWorkWorkerState               State;                                             // 0x70(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFixed;                                            // 0x71(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalWorkWorkerWorkingState        WorkingState;                                      // 0x72(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44F4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocalRandomWorkLocation;                           // 0x78(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWorkAssign* GetDefaultObj();

	bool IsWorking();
	bool IsWorkable();
	bool IsFixed();
	bool IsAssignedIndividualId(struct FPalInstanceID& IndividualId);
	bool IsAssigned();
	enum class EPalWorkWorkerWorkingState GetWorkingState();
	struct FGuid GetWorkId();
	class UPalWorkBase* GetWork();
	enum class EPalWorkWorkerState GetState();
	int32 GetLocationIndex();
	struct FPalWorkAssignHandleId GetId();
	class UPalIndividualCharacterParameter* GetAssignedIndividualParameter();
	struct FPalInstanceID GetAssignedIndividualId();
	class UPalIndividualCharacterHandle* GetAssignedIndividualHandle();
};

// 0x2F0 (0x318 - 0x28)
// Class Pal.PalWorkBase
class UPalWorkBase : public UObject
{
public:
	uint8                                        Pad_44F7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDisposeDelegate;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFinishWorkInServerDelegate;                      // 0x40(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReflectFinishWorkDelegate;                       // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateAssignedCharacterDelegate;                 // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateCurrentStateDelegate;                      // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequiredAssignWorkDelegate;                      // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAssignWorkDelegate;                              // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUnassignWorkDelegate;                            // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartWorkDelegate;                               // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndWorkDelegate;                                 // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPalBoundsTransform                   WorkableBounds;                                    // 0xD0(0x80)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  AssignDefineDataId;                                // 0x150(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWorkType                      OverrideWorkType;                                  // 0x158(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_44F8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPalWorkAssignLocalLocation>   AssignLocations;                                   // 0x160(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_44F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 BaseCampIdBelongTo;                                // 0x174(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 OwnerMapObjectModelId;                             // 0x184(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 OwnerMapObjectConcreteModelId;                     // 0x194(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWorkBehaviourType             BehaviourType;                                     // 0x1A4(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPalWorkAssignableFixedType       AssignableFixedType;                               // 0x1A5(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAssignableOtomo;                                  // 0x1A6(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanTriggerWorkerEvent;                            // 0x1A7(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanStealAssign;                                   // 0x1A8(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_44FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ID;                                                // 0x1AC(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalWorkProgressState             CurrentState;                                      // 0x1BC(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPalWorkProgressTransformBase*         Transform;                                         // 0x1C0(0x8)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalFastWorkAssignRepInfoArray        AssignRepInfoArray;                                // 0x1C8(0x148)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	bool                                         bGroupRaycastStartOffsetOrigin;                    // 0x310(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44FC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkBase* GetDefaultObj();

	void WorkAssignUpdateDelegate__DelegateSignature(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void WorkAssignRequirementDelegate__DelegateSignature(class UPalWorkBase* Work, struct FPalWorkAssignRequirementParameter& RequirementParameter);
	void OnRep_CurrentState();
	void NotifyWorkDelegate__DelegateSignature(class UPalWorkBase* Work);
	void IssueNotifierLog_WorkStart(class UPalCharacterParameterComponent* CharacterParameter);
	bool IsExistAssignableSlot(class UPalIndividualCharacterHandle* AssignIndividualHandle, bool bByFixedAssign);
	bool IsAssignedCharacter(class UPalIndividualCharacterHandle* IndividualHandle);
	bool IsAssignableFixedOnly();
	class FText GetWorkName();
	struct FGuid GetWorkId();
	void GetWorkAssignInfo(TArray<struct FPalWorkAssignInfo>* OutWorkAssignInfo);
	void GetWorkableElementTypeNames(TArray<class FText>* OutElementNames);
	struct FGuid GetId();
	void GetGenusCategorieNames(TArray<class FText>* OutGenusCategorieNames);
	void GetAssignedCharacters(TArray<class UPalIndividualCharacterSlot*>* IndividualSlots);
	enum class EPalWorkAssignableFixedType GetAssignableFixedType();
};

// 0x28 (0x340 - 0x318)
// Class Pal.PalWorkBootUp
class UPalWorkBootUp : public UPalWorkBase
{
public:
	FMulticastInlineDelegateProperty_            OnBootUpInServerDelegate;                          // 0x318(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_44FD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkBootUp* GetDefaultObj();

};

// 0x28 (0x340 - 0x318)
// Class Pal.PalWorkDefense
class UPalWorkDefense : public UPalWorkBase
{
public:
	TSubclassOf<class UPalAIActionBaseCampDefenseBase> DefenseAIActionClass;                              // 0x318(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UPalActionBase>            DefenseWaitActionClass;                            // 0x320(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPalWorkDefenseCombatType         DefenseCombatType;                                 // 0x328(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UPalMapObjectDefenseModelBase> WeakDefenseModel;                                  // 0x32C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UPalMapObjectDefenseBulletLauncherModel> WeakDefenseBulletLauncherModel;                    // 0x334(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_44FF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkDefense* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkTypeUtility
class UPalWorkTypeUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorkTypeUtility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkDefine
class UPalWorkDefine : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorkDefine* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkUtility
class UPalWorkUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorkUtility* GetDefaultObj();

	bool BP_TryGetWorkLocation(class UPalWorkBase* Target, struct FVector* OutLocation);
	struct FVector BP_GetWorkLocation(class UPalWorkBase* Target);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalAIActionWorkerInterruptInterface
class IPalAIActionWorkerInterruptInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalAIActionWorkerInterruptInterface* GetDefaultObj();

	bool IsInterruptibleBySleep();
	bool IsInterruptibleByRecoverHungry();
};

// 0x0 (0x550 - 0x550)
// Class Pal.PalWorkFacingComponent
class UPalWorkFacingComponent : public UArrowComponent
{
public:

	static class UClass* StaticClass();
	static class UPalWorkFacingComponent* GetDefaultObj();

};

// 0x8 (0x320 - 0x318)
// Class Pal.PalWorkForLevelObject
class UPalWorkForLevelObject : public UPalWorkBase
{
public:
	uint8                                        Pad_4501[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkForLevelObject* GetDefaultObj();

};

// 0x10 (0xA0 - 0x90)
// Class Pal.PalWorkAssign_LevelObject
class UPalWorkAssign_LevelObject : public UPalWorkAssign
{
public:
	struct FGuid                                 TargetMapObjectModelId;                            // 0x90(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWorkAssign_LevelObject* GetDefaultObj();

};

// 0x28 (0x340 - 0x318)
// Class Pal.PalWorkMonsterFarm
class UPalWorkMonsterFarm : public UPalWorkBase
{
public:
	struct FFloatInterval                        ActionIntervalSeconds;                             // 0x318(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4502[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkMonsterFarm* GetDefaultObj();

};

// 0x50 (0xE0 - 0x90)
// Class Pal.PalWorkAssign_MonsterFarm
class UPalWorkAssign_MonsterFarm : public UPalWorkAssign
{
public:
	struct FFloatCounter                         ActionIntervalTimer;                               // 0x90(0x8)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               WalkTargetLocation;                                // 0x98(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4503[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPalStaticItemIdAndNum                SpawnItemInfoPerAction;                            // 0xC8(0xC)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        SpawnActionWholeCount;                             // 0xD4(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SpawnActionCurrentCount;                           // 0xD8(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4504[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkAssign_MonsterFarm* GetDefaultObj();

};

// 0x8 (0x320 - 0x318)
// Class Pal.PalWorkOnlyJoin
class UPalWorkOnlyJoin : public UPalWorkBase
{
public:
	uint8                                        Pad_4505[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkOnlyJoin* GetDefaultObj();

};

// 0x28 (0x340 - 0x318)
// Class Pal.PalWorkOnlyJoinAndWalkAround
class UPalWorkOnlyJoinAndWalkAround : public UPalWorkBase
{
public:
	uint8                                        Pad_4506[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkOnlyJoinAndWalkAround* GetDefaultObj();

};

// 0x30 (0xC0 - 0x90)
// Class Pal.PalWorkAssign_OnlyJoinAndWalkAround
class UPalWorkAssign_OnlyJoinAndWalkAround : public UPalWorkAssign
{
public:
	struct FVector                               TargetLocation;                                    // 0x90(0x18)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4507[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkAssign_OnlyJoinAndWalkAround* GetDefaultObj();

};

// 0x58 (0x370 - 0x318)
// Class Pal.PalWorkProgress
class UPalWorkProgress : public UPalWorkBase
{
public:
	uint8                                        Pad_4508[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnUpdateWorkAmountInServerDelegate;                // 0x320(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReflectWorkAmountDelegate;                       // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        RequiredWorkAmount;                                // 0x340(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentWorkAmount;                                 // 0x344(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentWorkAmountByLocalPlayer;                    // 0x348(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4509[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGuid>                         WorkingPlayerUIds;                                 // 0x350(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        WorkExp;                                           // 0x360(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoWorkSelfAmountBySec;                           // 0x364(0x4)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNotAllowReactionOnWorkComplete;                   // 0x368(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_450A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProgressTimeSinceLastTick;                         // 0x36C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalWorkProgress* GetDefaultObj();

	void OnRep_CurrentWorkAmount();
	void NotifyWorkProgressDelegate__DelegateSignature(class UPalWorkProgress* WorkProgress);
	bool IsCompleted();
	float GetRequiredWorkAmount();
	int32 GetRemainWorkPredicateTime();
	float GetRemainWorkAmount();
	float GetProgressRate();
	float GetCurrentWorkAmount();
};

// 0x318 (0x388 - 0x70)
// Class Pal.PalWorkProgressManager
class UPalWorkProgressManager : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_450B[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGuid, class UPalWorkBase*>      WorkMap_InServer;                                  // 0xB0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_450C[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FPalWorkAssignDefineData> WorkAssignDefineMap;                               // 0x160(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FPalWorkAssignDefineData              NotWorkableAssignDefine;                           // 0x1B0(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FPalWorkAssignDefineData              BuildAssignDefine;                                 // 0x1E8(0x38)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<enum class EObjectTypeQuery>          SearchWorkObjectObjectTypes;                       // 0x220(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EPalWorkType, enum class EPalActionType> WorkCompleteActionMap;                             // 0x230(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FGuid>              LevelObjectWorkIdMap;                              // 0x280(0x50)(Edit, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UPalWorkBase*>                  MoveCheckWorkList_InServer_Async;                  // 0x2D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UPalWorkBase*>                  MovedWorkList_InServer_Async;                      // 0x2E0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        MoveCheckProcessIndex;                             // 0x2F0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MoveCheckMaxNumPerFrame;                           // 0x2F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        WorkTickInvokeMaxNumInOneTick;                     // 0x2F8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_450D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPalWorkType, int32>         WorkTypeAssignPriorityMap;                         // 0x300(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_450E[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkProgressManager* GetDefaultObj();

	void WorkDelegate__DelegateSignature(class UPalWorkBase* Work);
	class UPalWorkBase* GetWorkByAssignId(struct FPalWorkAssignHandleId& WorkAssignId);
	class UPalWorkAssign* GetWorkAssign(struct FPalWorkAssignHandleId& WorkAssignId);
	class UPalWorkBase* GetWork(struct FGuid& WorkId);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkProgressTransformBase
class UPalWorkProgressTransformBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalWorkProgressTransformBase* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Pal.PalWorkProgressTransformStatic
class UPalWorkProgressTransformStatic : public UPalWorkProgressTransformBase
{
public:
	uint8                                        Pad_450F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            Transform;                                         // 0x30(0x60)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalWorkProgressTransformStatic* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class Pal.PalWorkProgressTransformMapObject
class UPalWorkProgressTransformMapObject : public UPalWorkProgressTransformBase
{
public:
	struct FGuid                                 MapObjectInstanceId;                               // 0x28(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4510[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TransformCache;                                    // 0x40(0x60)(Edit, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCached;                                           // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4511[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldSearchForFoliage;                           // 0xAC(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4512[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkProgressTransformMapObject* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class Pal.PalWorkProgressTransformCharacter
class UPalWorkProgressTransformCharacter : public UPalWorkProgressTransformBase
{
public:
	struct FPalInstanceID                        IndividualId;                                      // 0x28(0x30)(Edit, Net, DisableEditOnTemplate, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_4513[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            TransformCache;                                    // 0x60(0x60)(Edit, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalWorkProgressTransformCharacter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkProgressUtility
class UPalWorkProgressUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorkProgressUtility* GetDefaultObj();

	float WorkAmountToManMonth(class UObject* WorldContextObject, float WorkAmount);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkProgressWorkableCheckInterface
class IPalWorkProgressWorkableCheckInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalWorkProgressWorkableCheckInterface* GetDefaultObj();

};

// 0x8 (0x320 - 0x318)
// Class Pal.PalWorkRemoveMapObjectEffect
class UPalWorkRemoveMapObjectEffect : public UPalWorkBase
{
public:
	enum class EPalStatusID                      TargetEffectType;                                  // 0x318(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4514[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkRemoveMapObjectEffect* GetDefaultObj();

};

// 0x48 (0x360 - 0x318)
// Class Pal.PalWorkRepair
class UPalWorkRepair : public UPalWorkBase
{
public:
	uint8                                        Pad_4515[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 ConnectToModelInstanceId;                          // 0x32C(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4516[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPalMapObjectModel*>            ConnectedModels;                                   // 0x340(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4517[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkRepair* GetDefaultObj();

};

// 0x38 (0x350 - 0x318)
// Class Pal.PalWorkReviveCharacter
class UPalWorkReviveCharacter : public UPalWorkBase
{
public:
	struct FPalInstanceID                        TargetIndividualId;                                // 0x318(0x30)(Edit, DisableEditOnTemplate, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4518[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkReviveCharacter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorkSuitabilityUtility
class UPalWorkSuitabilityUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorkSuitabilityUtility* GetDefaultObj();

};

// 0x28 (0x340 - 0x318)
// Class Pal.PalWorkTransportItemInBaseCamp
class UPalWorkTransportItemInBaseCamp : public UPalWorkBase
{
public:
	enum class EPalWorkTransportItemType         TransportType;                                     // 0x318(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4519[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ApproachFailedTimeout;                             // 0x31C(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_451A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkTransportItemInBaseCamp* GetDefaultObj();

};

// 0x10 (0x7E0 - 0x7D0)
// Class Pal.PalWorkEffectComponent
class UPalWorkEffectComponent : public UNiagaraComponent
{
public:
	int32                                        LocationIndex;                                     // 0x7D0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bActiveFX;                                         // 0x7D4(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_451B[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorkEffectComponent* GetDefaultObj();

	void OnWorkStarted(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnWorkEnded(class UPalWorkBase* Work, struct FPalInstanceID& IndividualId);
	void OnRep_ActiveFX();
};

// 0x20 (0x2B0 - 0x290)
// Class Pal.PalWorldMapCapture
class APalWorldMapCapture : public AActor
{
public:
	class USceneCaptureComponent2D*              SceneCaptureComponent;                             // 0x290(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            WorldMapTexture;                                   // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                WorldMapDetailRenderTexture;                       // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            WorldMapHeightTexture;                             // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APalWorldMapCapture* GetDefaultObj();

	class UTexture2D* GetWorldMapHeightMap();
	class UTextureRenderTarget2D* GetRenderedWorldMapTexture();
	bool CreateWorldMapTexture();
	void CaptureWorldMapTexture_Perspective();
	void CaptureWorldMapTexture_Ortho();
};

// 0xA8 (0xD0 - 0x28)
// Class Pal.PalWorldMapUIData
class UPalWorldMapUIData : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnUnlockedMap;                                     // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                MaskRenderTarget;                                  // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MaskTexture;                                       // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_451F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                CachedTextureRawData;                              // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class FName, bool>                      UnlockedRegionMap;                                 // 0x70(0x50)(NativeAccessSpecifierPrivate)
	class UDataTable*                            WorldMapDataTable;                                 // 0xC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CurrentPlayMapName;                                // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWorldMapUIData* GetDefaultObj();

	bool UnlockMap(class FName& RegionId, int32 PlayerId);
	void UnlockedMapDelegate__DelegateSignature(class FName& UnlockedRegionId, int32 PlayerId);
	bool IsUnlockedMap(class FName& RegionId);
	void GetUnlockedMapData(TMap<class FName, bool>* OutMapData);
	bool GetCurrentPlayMapUIData(struct FPalWorldMapUIDataTableRow* OutData);
	class FName GetCurrentPlayMapName();
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorldObjectRecorderBase
class UPalWorldObjectRecorderBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPalWorldObjectRecorderBase* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class Pal.PalWorldObjectRecordWorldSubsystem
class UPalWorldObjectRecordWorldSubsystem : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_4520[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UClass*, class UPalWorldObjectRecorderBase*> RecorderMap;                                       // 0x78(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWorldObjectRecordWorldSubsystem* GetDefaultObj();

	class UPalWorldObjectRecorderBase* BP_GetRecorder(class UObject* WorldContextObject, TSubclassOf<class UPalWorldObjectRecorderBase> TargetClass);
};

// 0x50 (0x78 - 0x28)
// Class Pal.PalWorldObjectRecord_MapObjectSpawnerInStage
class UPalWorldObjectRecord_MapObjectSpawnerInStage : public UPalWorldObjectRecorderBase
{
public:
	TMap<struct FPalStageInstanceId, struct FPalWorldObjectRecordData_MapObjectSpawnerInStage> RecordDataMapByStageInstanceId;                    // 0x28(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPalWorldObjectRecord_MapObjectSpawnerInStage* GetDefaultObj();

};

// 0x50 (0x2E0 - 0x290)
// Class Pal.PalWorldPartitionLoadingRangeVolume
class APalWorldPartitionLoadingRangeVolume : public AActor
{
public:
	TMap<int32, float>                           LoadingRangeMap;                                   // 0x290(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APalWorldPartitionLoadingRangeVolume* GetDefaultObj();

	void SetOverrideLoadingRange(bool Enable);
};

// 0x28 (0x50 - 0x28)
// Class Pal.PalWorldSecurityCrimeInstance
class UPalWorldSecurityCrimeInstance : public UObject
{
public:
	struct FGuid                                 InstanceId;                                        // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CrimeId;                                           // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 TargetId;                                          // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPalWorldSecurityCrimeInstance* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorldSecurityDefine
class UPalWorldSecurityDefine : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorldSecurityDefine* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Pal.PalWorldSecurityLawBase
class UPalWorldSecurityLawBase : public UObject
{
public:
	struct FPalDataTableRowName_CrimeMasterData  CrimeId;                                           // 0x28(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvalid;                                          // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4521[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CrimeStateMaintainDurationBase;                    // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNotUseReleaseTimer;                               // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_4522[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorldSecurityLawBase* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Pal.PalWorldSecurityLawTrigger
class UPalWorldSecurityLawTrigger : public UPalWorldSecurityLawBase
{
public:

	static class UClass* StaticClass();
	static class UPalWorldSecurityLawTrigger* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Pal.PalWorldSecurityLawTrigger_ItemMove
class UPalWorldSecurityLawTrigger_ItemMove : public UPalWorldSecurityLawTrigger
{
public:

	static class UClass* StaticClass();
	static class UPalWorldSecurityLawTrigger_ItemMove* GetDefaultObj();

	void OnNotifiedEvent(struct FPalItemOperationInfo_Move& EventInfo);
	bool Condition(struct FPalItemOperationInfo_Move& EventInfo);
};

// 0x0 (0x40 - 0x40)
// Class Pal.PalWorldSecurityLawTrigger_CharacterDamaged
class UPalWorldSecurityLawTrigger_CharacterDamaged : public UPalWorldSecurityLawTrigger
{
public:

	static class UClass* StaticClass();
	static class UPalWorldSecurityLawTrigger_CharacterDamaged* GetDefaultObj();

	void OnNotifiedEvent(struct FPalDamageResult& DamageResult);
	bool Condition(struct FPalDamageResult& DamageResult, class UPalIndividualCharacterHandle** CriminalHandle);
};

// 0x0 (0x40 - 0x40)
// Class Pal.PalWorldSecurityLawTrigger_AreaInvasion
class UPalWorldSecurityLawTrigger_AreaInvasion : public UPalWorldSecurityLawTrigger
{
public:

	static class UClass* StaticClass();
	static class UPalWorldSecurityLawTrigger_AreaInvasion* GetDefaultObj();

	void OnNotifiedEventEnd(class AActor* InvasionActor, struct FGuid& AreaInstanceId);
	void OnNotifiedEvent(class AActor* InvasionActor, struct FGuid& AreaInstanceId);
	bool Condition(class AActor* InvasionActor, class UPalIndividualCharacterHandle** CriminalHandle);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalLawUtility
class UPalLawUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalLawUtility* GetDefaultObj();

	bool IsEqualsGroupIndividualIdAndSlotIds(class UObject* WorldContextObject, struct FPalInstanceID& IndividualId, TArray<struct FPalItemSlotId>& SlotIds, bool IgnoreNoBelongSlot);
	bool ExistOtherGroupFromSlotIds(class UObject* WorldContextObject, struct FPalInstanceID& IndividualId, TArray<struct FPalItemSlotId>& SlotIds, bool IgnoreNoBelongSlot, struct FGuid* OutGroupId);
};

// 0x1D8 (0x248 - 0x70)
// Class Pal.PalWorldSecuritySystem
class UPalWorldSecuritySystem : public UPalWorldSubsystem
{
public:
	uint8                                        Pad_4529[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnReportCriminalDelegate;                          // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReleaseWantedDelegate;                           // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRegisterdAreaTriggerDelegate;                    // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  LawClassDirectoryPath;                             // 0xC8(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPalWorldSecurityLawBase*>      Laws;                                              // 0xD0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	struct FGuid                                 GroupID;                                           // 0xE0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FPalInstanceID, struct FPalCrimeStateInfo> IndividualCrimeStateMap;                           // 0xF0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FPalInstanceID, struct FPalWorldSecurityWantedStateInfo> IndividualWantedStateMap;                          // 0x140(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalWorldSecurityCrimeInstance*> CrimeInstanceMap;                                  // 0x190(0x50)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class APalTriggerAreaBase>> WeakTriggerAreaList;                               // 0x1E0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UPalIndividualCharacterHandle*> CriminalMap;                                       // 0x1F0(0x50)(Edit, DisableEditOnTemplate, Transient, EditConst, NativeAccessSpecifierPrivate)
	uint8                                        Pad_452A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPalWorldSecuritySystem* GetDefaultObj();

	void ReportCriminalDelegate__DelegateSignature(class UPalIndividualCharacterHandle* CriminalHandle, const struct FPalWorldSecurityWantedStateInfo& WantedStateInfo);
	void ReportCriminal(class UPalIndividualCharacterHandle* CriminalHandle, class UPalIndividualCharacterHandle* ReporterHandle);
	void ReleaseWantedDelegate__DelegateSignature(class UPalIndividualCharacterHandle* CriminalHandle);
	void ReleaseWanted(class UPalIndividualCharacterHandle* CriminalHandle);
	void ReleaseCrime(class UPalIndividualCharacterHandle* CriminalHandle, struct FGuid& CrimeInstanceId);
	void RegisterdAreaTriggerDelegate__DelegateSignature(class APalTriggerAreaBase* TriggerBase);
	class APalTriggerAreaBase* GetNearestTriggerArea(const struct FVector& Location);
	class FName GetCrimeIdByCrimeInstanceId(struct FGuid& CrimeInstanceId);
};

// 0x0 (0x28 - 0x28)
// Class Pal.PalWorldSecurityUtility
class UPalWorldSecurityUtility : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPalWorldSecurityUtility* GetDefaultObj();

	bool IsWantedCharacter(class APalCharacter* Target);
	bool IsCriminalCharacter(class APalCharacter* Target);
	bool FindCriminalsInSight(class APalCharacter* Target, TArray<class APalCharacter*>* Criminals);
};

// 0x68 (0x520 - 0x4B8)
// Class Pal.PalWorldSettings
class APalWorldSettings : public AWorldSettings
{
public:
	TSubclassOf<class UPalDungeonWorldSubsystem> DungeonWorldSubsystemClass;                        // 0x4B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DungeonCreateInitialLocation;                      // 0x4C0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataLayerAsset*                       FieldEnvironmentDataLayerAsset;                    // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalAudioWorldSubsystem>   AudioWorldSubsystemClass;                          // 0x4E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPalTimerEnabled;                                // 0x4E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_452E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPalOptionSubsystem>       OptionWorldSubsystemClass;                         // 0x4F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalTimeManager>           TimeManagerClass;                                  // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalInvaderManager>        InvaderManagerClass;                               // 0x500(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalIncidentSystem>        IncidentSystemClass;                               // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UPalFunnelCharacterManager> FunnelCharacterManagerClass;                       // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequestCharacterMake;                             // 0x518(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_452F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APalWorldSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PalGameSystemNeedWorldSync
class IPalGameSystemNeedWorldSync : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPalGameSystemNeedWorldSync* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Pal.PaRichTextDecorator_KeyGuideIcon
class UPaRichTextDecorator_KeyGuideIcon : public URichTextBlockDecorator
{
public:

	static class UClass* StaticClass();
	static class UPaRichTextDecorator_KeyGuideIcon* GetDefaultObj();

	class FString GetTextStringInternal(class UObject* WorldContextObject, class FName ID);
	class UWidget* CreateWidget(class FName KeyGuideActionName, float IconScale, int32 OverrideType);
};

// 0x0 (0x28 - 0x28)
// Class Pal.ReactivePropertyFloatUtility
class UReactivePropertyFloatUtility : public UObject
{
public:

	static class UClass* StaticClass();
	static class UReactivePropertyFloatUtility* GetDefaultObj();

	void BindProperty(struct FReactivePropertyFloat& Property, FDelegateProperty_ Delegate);
};

}


